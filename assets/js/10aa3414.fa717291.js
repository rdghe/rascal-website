"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[61727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(o,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<s;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},36871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={title:"Multiple",keywords:["<",">","="]},l=void 0,i={unversionedId:"Rascal/Statements/Assignment/Multiple/index",id:"Rascal/Statements/Assignment/Multiple/index",title:"Multiple",description:"Synopsis",source:"@site/docs/Rascal/Statements/Assignment/Multiple/index.md",sourceDirName:"Rascal/Statements/Assignment/Multiple",slug:"/Rascal/Statements/Assignment/Multiple/",permalink:"/docs/Rascal/Statements/Assignment/Multiple/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Rascal/Statements/Assignment/Multiple/index.md",tags:[],version:"current",frontMatter:{title:"Multiple",keywords:["<",">","="]},sidebar:"tutorialSidebar",previous:{title:"IsDefined",permalink:"/docs/Rascal/Statements/Assignment/IsDefined/"},next:{title:"Slice",permalink:"/docs/Rascal/Statements/Assignment/Slice/"}},o={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Assign to multiple assignables."),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"First the value ",(0,a.kt)("em",{parentName:"p"},"Exp")," is determined and should be a tuple of the form ",(0,a.kt)("inlineCode",{parentName:"p"},"< V\u2081, V\u2082, ..., V\u2099 >"),".\nNext the assignments ",(0,a.kt)("inlineCode",{parentName:"p"},"Assignable\u1d62 = V\u1d62")," are performed for 1 \\<= i \\<= n."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal><A, B, C> = <"abc", 2.5, [1,2,3]>;\ntuple[str,real,list[int]]: <"abc",2.5,[1,2,3]>\nrascal>A;\nstr: "abc"\nrascal>B;\nreal: 2.5\nrascal>C;\nlist[int]: [1,2,3]\n')))}u.isMDXComponent=!0}}]);