"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[2868],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(r),m=a,d=f["".concat(i,".").concat(m)]||f[m]||p[m]||o;return r?n.createElement(d,s(s({ref:t},u),{},{components:r})):n.createElement(d,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4410:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),s=["components"],l={authors:["jvinju"],title:"Rascal 0.24.x release notes"},i=void 0,c={permalink:"/release-notes/2022/06/21/rascal-0-24-x-release-notes",source:"@site/release-notes/2022-06-21-rascal-0-24-x-release-notes.md",title:"Rascal 0.24.x release notes",description:"In this post we report on the Rascal release 0.24.x",date:"2022-06-21T00:00:00.000Z",formattedDate:"June 21, 2022",tags:[],readingTime:.86,truncated:!0,authors:[{name:"Jurgen Vinju",title:"Groupleader @ CWI-SWAT, professor @ TU/E, Rascal Core Team",url:"http://homepages.cwi.nl/~jurgenv",imageURL:"https://www.cwi.nl/news/2014/jurgen-vinju-appointed-professor/@@images/5e1fe43d-a00b-4989-a5b9-eb526725c6ee.jpeg",key:"jvinju"}],frontMatter:{authors:["jvinju"],title:"Rascal 0.24.x release notes"},nextItem:{title:"Rascal 0.23.x release notes",permalink:"/release-notes/2022/04/20/rascal-0-23-x-release-notes"}},u={authorsImageUrls:[void 0]},p=[{value:"Release 0.24.0 - June 21, 2022",id:"release-0240---june-21-2022",level:2}],f={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this post we report on the Rascal release 0.24.x"),(0,o.kt)("h2",{id:"release-0240---june-21-2022"},"Release 0.24.0 - June 21, 2022"),(0,o.kt)("p",null,"Release 24.x is a maintenance release. A lot of changes happened between 0.17.0 and 0.23.x, so if you have not looked here for a while, go to the ",(0,o.kt)("a",{parentName:"p",href:"https://usethesource.io/rascal-0-23-x-release-notes"},"release notes for 0.23.x")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ParseTree::parser and ParseTree::parsers now generate parsing closures that do not need a JVM lock to synchronize on the Evaluator anymore. "),(0,o.kt)("li",{parentName:"ul"},"Also both functions now capture the generated Class<?> instance instead of a handle to the grammar, for efficiency's sake"),(0,o.kt)("li",{parentName:"ul"},"The interpreter's implementation of concrete syntax does not do its own parser caching anymore. Instead it relies on the aforementioned\nparsing closures. This saves memory (fewer hash-tables) and also more sharing is possible between parsers for different modules that happen to have the same grammar."),(0,o.kt)("li",{parentName:"ul"},"Issue #1615 was solved"),(0,o.kt)("li",{parentName:"ul"},"Issue #1614 was solved"),(0,o.kt)("li",{parentName:"ul"},"Issue #1613 was solved by providing ",(0,o.kt)("inlineCode",{parentName:"li"},"loc")," based interfaces to files and programs passed to util::ShellExec. The old ",(0,o.kt)("inlineCode",{parentName:"li"},"str")," based interfaces are now deprecated.")))}m.isMDXComponent=!0}}]);