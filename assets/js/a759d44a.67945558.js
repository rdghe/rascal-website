"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[45451],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var s=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,s,l=function(e,t){if(null==e)return{};var a,s,l={},n=Object.keys(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=s.createContext({}),o=function(e){var t=s.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=o(e.components);return s.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=o(a),m=l,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||n;return a?s.createElement(b,r(r({ref:t},u),{},{components:a})):s.createElement(b,r({ref:t},u))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,r=new Array(n);r[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var o=2;o<n;o++)r[o]=a[o];return s.createElement.apply(null,r)}return s.createElement.apply(null,a)}d.displayName="MDXCreateElement"},29766:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>o});var s=a(83117),l=(a(67294),a(3905));const n={title:"module lang::rascal::tests::basic::SolvedIssues"},r=void 0,i={unversionedId:"Library/lang/rascal/tests/basic/SolvedIssues",id:"Library/lang/rascal/tests/basic/SolvedIssues",title:"module lang::rascal::tests::basic::SolvedIssues",description:"Usage",source:"@site/docs/Library/lang/rascal/tests/basic/SolvedIssues.md",sourceDirName:"Library/lang/rascal/tests/basic",slug:"/Library/lang/rascal/tests/basic/SolvedIssues",permalink:"/docs/Library/lang/rascal/tests/basic/SolvedIssues",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/lang/rascal/tests/basic/SolvedIssues.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::tests::basic::SolvedIssues"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::tests::basic::Sets",permalink:"/docs/Library/lang/rascal/tests/basic/Sets"},next:{title:"module lang::rascal::tests::basic::Strings1",permalink:"/docs/Library/lang/rascal/tests/basic/Strings1"}},c={},o=[{value:"Usage",id:"usage",level:4},{value:"function emptySetEquals1",id:"lang-rascal-tests-basic-SolvedIssues-emptySetEquals1",level:2},{value:"function emptySetEquals2",id:"lang-rascal-tests-basic-SolvedIssues-emptySetEquals2",level:2},{value:"data X",id:"lang-rascal-tests-basic-SolvedIssues-X",level:2},{value:"function infiniteMatcher",id:"lang-rascal-tests-basic-SolvedIssues-infiniteMatcher",level:2},{value:"data Exp",id:"lang-rascal-tests-basic-SolvedIssues-Exp",level:2},{value:"function inferKWparamType",id:"lang-rascal-tests-basic-SolvedIssues-inferKWparamType",level:2},{value:"function checkComparableOnElementsBreak",id:"lang-rascal-tests-basic-SolvedIssues-checkComparableOnElementsBreak",level:2},{value:"function nodeSetMatch",id:"lang-rascal-tests-basic-SolvedIssues-nodeSetMatch",level:2}],u={toc:o};function p(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,s.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tests::basic::SolvedIssues;")),(0,l.kt)("p",null,"In this test module we collect test cases that are associated with bugs from the past.\nThis is just to make sure the bugs are not re-introduced accidentally."),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-emptySetEquals1"},"function emptySetEquals1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptySetEquals1(set[value] x, set[value] y)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-emptySetEquals2"},"function emptySetEquals2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptySetEquals2(map[value,value] x, map[value,value] y)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-X"},"data X"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal"},"data X  \n     = n(set[node] nn)\n     ;\n")),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-infiniteMatcher"},"function infiniteMatcher"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool infiniteMatcher()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-Exp"},"data Exp"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal"},"data Exp  \n     = a(int x, int y = 5)\n     ;\n")),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-inferKWparamType"},"function inferKWparamType"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool inferKWparamType()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-checkComparableOnElementsBreak"},"function checkComparableOnElementsBreak"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool checkComparableOnElementsBreak()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-SolvedIssues-nodeSetMatch"},"function nodeSetMatch"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool nodeSetMatch()"))))}p.isMDXComponent=!0}}]);