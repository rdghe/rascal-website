"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[7214],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?n.createElement(y,a(a({ref:r},c),{},{components:t})):n.createElement(y,a({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},98909:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=t(83117),o=(t(67294),t(3905));const i={title:"NonVoidTypeRequired"},a=void 0,p={unversionedId:"CompileTimeErrors/NonVoidTypeRequired/index",id:"CompileTimeErrors/NonVoidTypeRequired/index",title:"NonVoidTypeRequired",description:"Synopsis",source:"@site/docs/CompileTimeErrors/NonVoidTypeRequired/index.md",sourceDirName:"CompileTimeErrors/NonVoidTypeRequired",slug:"/CompileTimeErrors/NonVoidTypeRequired/",permalink:"/docs/CompileTimeErrors/NonVoidTypeRequired/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/CompileTimeErrors/NonVoidTypeRequired/index.md",tags:[],version:"current",frontMatter:{title:"NonVoidTypeRequired"},sidebar:"tutorialSidebar",previous:{title:"NonAbstractJavaFunction",permalink:"/docs/CompileTimeErrors/NonAbstractJavaFunction/"},next:{title:"NonWellformedType",permalink:"/docs/CompileTimeErrors/NonWellformedType/"}},l={},s=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:s};function d(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"A type other than ",(0,o.kt)("inlineCode",{parentName:"p"},"void")," is needed."),(0,o.kt)("h4",{id:"description"},"Description"),(0,o.kt)("p",null,"This error is generated when a value is needed, so an expression of any type but the ",(0,o.kt)("inlineCode",{parentName:"p"},"void")," type."),(0,o.kt)("p",null,"The most prominent examples are splicing for\n",(0,o.kt)("a",{parentName:"p",href:"../../Rascal/Expressions/Values/List/Splice"},"list")," and ",(0,o.kt)("a",{parentName:"p",href:"../../Rascal/Expressions/Values/Set/Splice"},"set"),"."),(0,o.kt)("p",null,"Remedy: replace the expression of type ",(0,o.kt)("inlineCode",{parentName:"p"},"void")," by an expression that computes a value."),(0,o.kt)("h4",{id:"examples"},"Examples"),(0,o.kt)("p",null,"First define a dummy function that returns void:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>void dummy() { return; }\nvoid (): function(|prompt:///|(0,24,<1,0>,<1,24>))\nrascal>[1, *dummy(), 2]\n|prompt:///|(4,8,<1,4>,<1,12>): Non-void type required\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/NonVoidTypeRequired/NonVoidTypeRequired.html|\nok\nrascal>{1, *dummy(), 2}\n|prompt:///|(5,7,<1,5>,<1,12>): Non-void type required\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/NonVoidTypeRequired/NonVoidTypeRequired.html|\nok\n")),(0,o.kt)("p",null,"A solution could be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>int dummy() { return 17; }\nint (): function(|prompt:///|(0,26,<1,0>,<1,26>))\nrascal>[1, *dummy(), 2]\nlist[int]: [1,17,2]\nrascal>{1, *dummy(), 2}\nset[int]: {1,2,17}\n")))}d.isMDXComponent=!0}}]);