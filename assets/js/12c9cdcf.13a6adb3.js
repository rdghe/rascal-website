"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[32540],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=c(a),u=l,f=d["".concat(i,".").concat(u)]||d[u]||p[u]||r;return a?n.createElement(f,s(s({ref:t},m),{},{components:a})):n.createElement(f,s({ref:t},m))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,s=new Array(r);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var c=2;c<r;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},40676:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(87462),l=(a(67294),a(3905));const r={title:"Commands"},s=void 0,o={unversionedId:"RascalShell/Commands/index",id:"RascalShell/Commands/index",title:"Commands",description:"Synopsis",source:"@site/docs/RascalShell/Commands/index.md",sourceDirName:"RascalShell/Commands",slug:"/RascalShell/Commands/",permalink:"/docs/RascalShell/Commands/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/RascalShell/Commands/index.md",tags:[],version:"current",frontMatter:{title:"Commands"},sidebar:"tutorialSidebar",previous:{title:"Rascal Shell",permalink:"/docs/RascalShell/"},next:{title:"Clear Command",permalink:"/docs/RascalShell/Commands/Clear/"}},i={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],m={toc:c};function p(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,"RascalShell commands"),(0,l.kt)("h4",{id:"description"},"Description"),(0,l.kt)("p",null,"The RascalShell provides several built-in commands:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/RascalShell/Commands/Clear/"},"Clear")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/RascalShell/Commands/Edit/"},"Edit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/RascalShell/Commands/Help/"},"Help")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/RascalShell/Commands/Quit/"},"Quit")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/RascalShell/Commands/Set/"},"Set")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/RascalShell/Commands/Test/"},"Test"))),(0,l.kt)("p",null,"Next to these commands, the shell accepts all toplevel module ",(0,l.kt)("a",{parentName:"p",href:"/docs/Rascal/Declarations/"},"Declarations"),", ",(0,l.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/"},"Statements")," and ",(0,l.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/"},"Expressions"),"."),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("p",null,"Here we just show some random shell commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>int a = 0; // statement\nint: 0\nrascal>int f(int i) = 2 * i; // function declaration\nint (int): function(|prompt:///|(0,21,<1,0>,<1,21>))\nrascal>syntax Exp = Exp "+" Exp; // syntax declaration\nok\nrascal>f(2) * f(2) // expression\nint: 16\nrascal>:help // builtin command\n:help // builtin command\nWelcome to the Rascal command shell.\n\nShell commands:\n:help                      Prints this message\n:quit or EOF               Quits the shell\n:set <option> <expression> Sets an option\ne.g. profiling    true/false\n     tracing      true/false\n     errors       true/false\n:edit <modulename>         Opens an editor for that module\n:test                      Runs all unit tests currently loaded\n\nExample rascal statements and declarations:\n1 + 1;                     Expressions simply print their output and (static) type\nint a;                     Declarations allocate a name in the current scope\na = 1;                     Assignments store a value in a (optionally previously declared) variable\nint a = 1;                 Declaration with initialization\nimport IO;                 Importing a module makes its public members available\nprintln("Hello World")     Function calling\n\nPlease read the manual for further information\nok\n')))}p.isMDXComponent=!0}}]);