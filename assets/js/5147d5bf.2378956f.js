"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[51999],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(y,o(o({ref:t},p),{},{components:n})):r.createElement(y,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={title:"module Exception"},o=void 0,i={unversionedId:"Library/Exception",id:"Library/Exception",title:"module Exception",description:"Usage",source:"@site/docs/Library/Exception.md",sourceDirName:"Library",slug:"/Library/Exception",permalink:"/docs/Library/Exception",draft:!1,tags:[],version:"current",frontMatter:{title:"module Exception"},sidebar:"tutorialSidebar",previous:{title:"module DateTime",permalink:"/docs/Library/DateTime"},next:{title:"module Grammar",permalink:"/docs/Library/Grammar"}},l={},c=[{value:"Usage",id:"usage",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"data RuntimeException",id:"Exception-RuntimeException",level:2},{value:"Synopsis",id:"synopsis-1",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import Exception;")),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Exceptions thrown by the Rascal run-time."),(0,a.kt)("h2",{id:"Exception-RuntimeException"},"data RuntimeException"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"data RuntimeException  \n     = Ambiguity(loc location, str nonterminal, str sentence)\n     | ArithmeticException(str message)\n     | AssertionFailed()\n     | AssertionFailed(str label)\n     | CallFailed(list[value] arguments)\n     | DateTimeParsingError(str message)\n     | DateTimePrintingError(str message)\n     | EmptyList()\n     | EmptyMap()\n     | EmptySet()\n     | IndexOutOfBounds(int index)\n     | IllegalArgument()\n     | IllegalArgument(value v)\n     | IllegalArgument(value v, str message)\n     | IllegalTypeArgument(str cls, str message)\n     | ImplodeError(str message)\n     | InvalidURI(str uri)\n     | InvalidUseOfDate(str message)\n     | InvalidUseOfDateTime(str message)\n     | InvalidUseOfLocation(str message)\n     | InvalidUseOfTime(str message)\n     | IO(str message)\n     | Java(str class, str message)\n     | Java(str class, str message, RuntimeException cause)\n     | JavaException(str class, str message)\n     | JavaException(str class, str message, RuntimeException cause)\n     | MalFormedURI(str uri)\n     | ModuleNotFound(str name)\n     | MultipleKey(value key, value first, value second)\n     | NoMainFunction()\n     | NoParent(loc location)\n     | NoSuchAnnotation(str label)\n     | NoSuchElement(value v)\n     | NoSuchField(str name)\n     | NoSuchKey(value key)\n     | NotImplemented(str message)\n     | ParseError(loc location)\n     | PathNotFound(loc l)\n     | PathNotFound(set[loc] locs)\n     | PermissionDenied()\n     | PermissionDenied(str message)\n     | RegExpSyntaxError(str message)\n     | SchemeNotSupported(loc location)\n     | StackOverflow()\n     | Timeout()\n     | UnavailableInformation()\n     ;\n")),(0,a.kt)("h4",{id:"synopsis-1"},"Synopsis"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Exception")," datatype used in all Rascal exceptions."),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"Since declarations for ADTs are extensible, the user can add new exceptions when needed."),(0,a.kt)("p",null,"Exceptions are either generated by the Rascal run-time (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"IndexOutOfBounds"),") or they\nare generated by a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Throw/"},"throw"),".\nExceptions can be caught with a ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/TryCatch/"},"try catch"),"."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Import relevant libraries:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},"rascal>import Exception;\nok\nrascal>import IO;\nok\n")),(0,a.kt)("p",null,"Define the map ",(0,a.kt)("inlineCode",{parentName:"p"},"weekend")," and do a subscription with a non-existing key:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},'rascal>weekend = ("saturday": 1, "sunday": 2);\nmap[str, int]: ("sunday":2,"saturday":1)\nrascal>weekend["monday"];\n|prompt:///|(8,8,<1,8>,<1,16>): NoSuchKey("monday")\n    at $shell$(|prompt:///|(0,18,<1,0>,<1,18>))\nok\n')),(0,a.kt)("p",null,"Repeat this, but catch the exception. We use variable ",(0,a.kt)("inlineCode",{parentName:"p"},"N")," to track what happened:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},'rascal>N = 1;\nint: 1\nrascal>try {\n>>>>>>>   N = weekend["monday"];\n>>>>>>>} catch NoSuchKey(v):\n>>>>>>>  N = 100;\nok\nrascal>println(N);\n100\nok\n')))}u.isMDXComponent=!0}}]);