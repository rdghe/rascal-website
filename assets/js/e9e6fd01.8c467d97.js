"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[73112],{3905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>v});var a=l(67294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function s(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)l=i[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)l=i[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var o=a.createContext({}),u=function(e){var t=a.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(l),v=n,d=c["".concat(o,".").concat(v)]||c[v]||m[v]||i;return l?a.createElement(d,r(r({ref:t},p),{},{components:l})):a.createElement(d,r({ref:t},p))}));function v(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=l.length,r=new Array(i);r[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var u=2;u<i;u++)r[u]=l[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,l)}c.displayName="MDXCreateElement"},22622:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=l(87462),n=(l(67294),l(3905));const i={title:"module vis::Basic"},r=void 0,s={unversionedId:"Library/vis/Basic",id:"Library/vis/Basic",title:"module vis::Basic",description:"Usage",source:"@site/docs/Library/vis/Basic.md",sourceDirName:"Library/vis",slug:"/Library/vis/Basic",permalink:"/docs/Library/vis/Basic",draft:!1,tags:[],version:"current",frontMatter:{title:"module vis::Basic"},sidebar:"tutorialSidebar",previous:{title:"vis",permalink:"/docs/Library/vis/"},next:{title:"Compile Time Errors",permalink:"/docs/CompileTimeErrors/"}},o={},u=[{value:"Usage",id:"usage",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function showValue",id:"vis-Basic-showValue",level:2},{value:"function valueServer",id:"vis-Basic-valueServer",level:2},{value:"function toHTML",id:"vis-Basic-toHTML",level:2},{value:"function sampled",id:"vis-Basic-sampled",level:2},{value:"function sample",id:"vis-Basic-sample",level:2},{value:"function sampled",id:"vis-Basic-sampled",level:2},{value:"function sample",id:"vis-Basic-sample",level:2},{value:"function sampled",id:"vis-Basic-sampled",level:2},{value:"function sample",id:"vis-Basic-sample",level:2}],p={toc:u};function m(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import vis::Basic;")),(0,n.kt)("h4",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Uses static HTML to visualize arbitrary Rascal values"),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"This modules provides a simple mapping from hierarchical (nested)\nRascal values to HTML markup. The goal of the mapping is to provide\na more visible and searchable representation of Rascal values than\nthe standard textual expression format."),(0,n.kt)("p",null,"This module is quite new and may undergo some tweaks in the coming time."),(0,n.kt)("h2",{id:"vis-Basic-showValue"},"function showValue"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Content showValue(value v)"))),(0,n.kt)("h2",{id:"vis-Basic-valueServer"},"function valueServer"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Response (Request) valueServer(value v)"))),(0,n.kt)("h2",{id:"vis-Basic-toHTML"},"function toHTML"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(num i)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(str s)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(loc l)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(list[value] l)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"default HTMLElement toHTML(set[value] l)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(rel[value,value] r)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(rel[value,value,value] r)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(rel[value,value,value,value] r)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(map[value,value] m)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(t:<value a, value bb>)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(t:<value a, value bb, value c>)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(t:<value a, value bb, value c, value d>)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(Tree t:appl(Production p, list[Tree] args))")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(Tree t:amb(set[Tree] alts))")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(char(int c))")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HTMLElement toHTML(node n)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"default HTMLElement toHTML(value x:!set[value] _)"))),(0,n.kt)("h2",{id:"vis-Basic-sampled"},"function sampled"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str sampled(set[value] s, int count)"))),(0,n.kt)("h2",{id:"vis-Basic-sample"},"function sample"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"set[&T] sample(set[&T] corpus, int count)"))),(0,n.kt)("h2",{id:"vis-Basic-sampled"},"function sampled"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str sampled(list[value] s, int count)"))),(0,n.kt)("h2",{id:"vis-Basic-sample"},"function sample"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"list[&T] sample(list[&T] corpus, int count)"))),(0,n.kt)("h2",{id:"vis-Basic-sampled"},"function sampled"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str sampled(map[value,value] s, int count)"))),(0,n.kt)("h2",{id:"vis-Basic-sample"},"function sample"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"map[&T,&U] sample(map[&T,&U] corpus, int count)"))))}m.isMDXComponent=!0}}]);