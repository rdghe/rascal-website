"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[55128],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,g=p["".concat(c,".").concat(d)]||p[d]||f[d]||l;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=p;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},80867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var r=n(83117),i=(n(67294),n(3905));const l={title:"lang::sdf2::filters::GeneralInjectionCount"},o=void 0,a={unversionedId:"Library/lang/sdf2/filters/GeneralInjectionCount",id:"Library/lang/sdf2/filters/GeneralInjectionCount",title:"lang::sdf2::filters::GeneralInjectionCount",description:"Usage",source:"@site/docs/Library/lang/sdf2/filters/GeneralInjectionCount.md",sourceDirName:"Library/lang/sdf2/filters",slug:"/Library/lang/sdf2/filters/GeneralInjectionCount",permalink:"/docs/Library/lang/sdf2/filters/GeneralInjectionCount",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/sdf2/filters/GeneralInjectionCount.md",tags:[],version:"current",frontMatter:{title:"lang::sdf2::filters::GeneralInjectionCount"},sidebar:"tutorialSidebar",previous:{title:"lang::sdf2::filters::FilterCycles",permalink:"/docs/Library/lang/sdf2/filters/FilterCycles"},next:{title:"lang::sdf2::filters::IndirectPreferAvoid",permalink:"/docs/Library/lang/sdf2/filters/IndirectPreferAvoid"}},c={},s=[{value:"Usage",id:"usage",level:4},{value:"function injection",id:"lang-sdf2-filters-GeneralInjectionCount-injection",level:2},{value:"function generalInjectionCountFilter",id:"lang-sdf2-filters-GeneralInjectionCount-generalInjectionCountFilter",level:2}],u={toc:s};function f(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"import lang::sdf2::filters::GeneralInjectionCount;")),(0,i.kt)("h2",{id:"lang-sdf2-filters-GeneralInjectionCount-injection"},"function injection"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default bool injection(Tree _)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool injection(appl(prod(Symbol _,[Symbol _],set[Attr] _), [Tree _]))"))),(0,i.kt)("h2",{id:"lang-sdf2-filters-GeneralInjectionCount-generalInjectionCountFilter"},"function generalInjectionCountFilter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"&T <: Tree generalInjectionCountFilter(amb(set[&T <: Tree] alts))"))))}f.isMDXComponent=!0}}]);