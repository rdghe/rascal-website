"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[41067],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),k=l,m=u["".concat(o,".").concat(k)]||u[k]||d[k]||r;return n?i.createElement(m,a(a({ref:t},s),{},{components:n})):i.createElement(m,a({ref:t},s))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,a=new Array(r);a[0]=u;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:l,a[1]=c;for(var p=2;p<r;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},56235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var i=n(87462),l=(n(67294),n(3905));const r={title:"module demo::lang::Pico::Typecheck"},a=void 0,c={unversionedId:"Library/demo/lang/Pico/Typecheck",id:"Library/demo/lang/Pico/Typecheck",title:"module demo::lang::Pico::Typecheck",description:"Usage",source:"@site/docs/Library/demo/lang/Pico/Typecheck.md",sourceDirName:"Library/demo/lang/Pico",slug:"/Library/demo/lang/Pico/Typecheck",permalink:"/docs/Library/demo/lang/Pico/Typecheck",draft:!1,tags:[],version:"current",frontMatter:{title:"module demo::lang::Pico::Typecheck"},sidebar:"tutorialSidebar",previous:{title:"module demo::lang::Pico::Syntax",permalink:"/docs/Library/demo/lang/Pico/Syntax"},next:{title:"module demo::lang::Pico::Uninit",permalink:"/docs/Library/demo/lang/Pico/Uninit"}},o={},p=[{value:"Usage",id:"usage",level:4},{value:"alias TENV",id:"demo-lang-Pico-Typecheck-TENV",level:2},{value:"function addError",id:"demo-lang-Pico-Typecheck-addError",level:2},{value:"function required",id:"demo-lang-Pico-Typecheck-required",level:2},{value:"function checkExp",id:"demo-lang-Pico-Typecheck-checkExp",level:2},{value:"Synopsis",id:"synopsis",level:4},{value:"function checkStat",id:"demo-lang-Pico-Typecheck-checkStat",level:2},{value:"Synopsis",id:"synopsis-1",level:4},{value:"function checkStats",id:"demo-lang-Pico-Typecheck-checkStats",level:2},{value:"Synopsis",id:"synopsis-2",level:4},{value:"function checkDecls",id:"demo-lang-Pico-Typecheck-checkDecls",level:2},{value:"Synopsis",id:"synopsis-3",level:4},{value:"function checkProgram",id:"demo-lang-Pico-Typecheck-checkProgram",level:2},{value:"Synopsis",id:"synopsis-4",level:4}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import demo::lang::Pico::Typecheck;")),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-TENV"},"alias TENV"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tuple[ map[PicoId, TYPE] symbols, list[tuple[loc l, str msg]] errors]"))),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-addError"},"function addError"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV addError(TENV env, loc l, str msg)"))),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-required"},"function required"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str required(TYPE t, str got)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str required(TYPE t1, TYPE t2)"))),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-checkExp"},"function checkExp"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkExp(exp:natCon(int N), TYPE req, TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkExp(exp:strCon(str S), TYPE req, TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkExp(exp:id(PicoId Id), TYPE req, TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkExp(exp:add(EXP E1, EXP E2), TYPE req, TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkExp(exp:sub(EXP E1, EXP E2), TYPE req, TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkExp(exp:conc(EXP E1, EXP E2), TYPE req, TENV env)"))),(0,l.kt)("h4",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,"Checking Expressions"),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-checkStat"},"function checkStat"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkStat(stat:asgStat(PicoId Id, EXP Exp), TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkStat(stat:ifElseStat(EXP Exp, // <10>                               list[STATEMENT] Stats1,                               list[STATEMENT] Stats2),                TENV env)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkStat(stat:whileStat(EXP Exp,                               list[STATEMENT] Stats1),                  TENV env)"))),(0,l.kt)("h4",{id:"synopsis-1"},"Synopsis"),(0,l.kt)("p",null,"Check a statement"),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-checkStats"},"function checkStats"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkStats(list[STATEMENT] Stats1, TENV env)"))),(0,l.kt)("h4",{id:"synopsis-2"},"Synopsis"),(0,l.kt)("p",null,"Check a list of statements"),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-checkDecls"},"function checkDecls"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkDecls(list[DECL] Decls)"))),(0,l.kt)("h4",{id:"synopsis-3"},"Synopsis"),(0,l.kt)("p",null,"Check declarations"),(0,l.kt)("h2",{id:"demo-lang-Pico-Typecheck-checkProgram"},"function checkProgram"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TENV checkProgram(program(list[DECL] Decls, list[STATEMENT] Series))")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"list[tuple[loc l, str msg]] checkProgram(str txt)"))),(0,l.kt)("h4",{id:"synopsis-4"},"Synopsis"),(0,l.kt)("p",null,"Check a Pico program"))}d.isMDXComponent=!0}}]);