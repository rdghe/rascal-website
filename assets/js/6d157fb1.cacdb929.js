"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[1419],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(o,".").concat(m)]||d[m]||u[m]||s;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},16933:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const s={title:"List Insert",keywords:["+"]},l=void 0,i={unversionedId:"Rascal/Expressions/Values/List/Insert/index",id:"Rascal/Expressions/Values/List/Insert/index",title:"List Insert",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Values/List/Insert/index.md",sourceDirName:"Rascal/Expressions/Values/List/Insert",slug:"/Rascal/Expressions/Values/List/Insert/",permalink:"/docs/Rascal/Expressions/Values/List/Insert/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascal/Expressions/Values/List/Insert/index.md",tags:[],version:"current",frontMatter:{title:"List Insert",keywords:["+"]},sidebar:"tutorialSidebar",previous:{title:"List Equal",permalink:"/docs/Rascal/Expressions/Values/List/Equal/"},next:{title:"List Intersection",permalink:"/docs/Rascal/Expressions/Values/List/Intersection/"}},o={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Types",id:"types",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Pitfalls",id:"pitfalls",level:4}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"add an element in front of a list"),(0,r.kt)("h4",{id:"types"},"Types"),(0,r.kt)("p",null,"//"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"Exp<sub>1</sub>")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"Exp<sub>2</sub>")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"Exp<sub>1</sub> + Exp<sub>2</sub>")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"T<sub>1</sub>")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"list[T<sub>2</sub>]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"list[lub(T<sub>1</sub>,T<sub>2</sub>)]"))))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"+")," operator can insert an element in front of a list. Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"+")," is one of the ",(0,r.kt)("a",{parentName:"p",href:"../../../../../Rascal/Expressions/Operators"},"Operators")," that is overloaded, it is also ",(0,r.kt)("a",{parentName:"p",href:"../../../../../Rascal/Expressions/Values/List/Concatenation"},"Concatenation")," and ",(0,r.kt)("a",{parentName:"p",href:"../../../../../Rascal/Expressions/Values/List/Append"},"Append")," for example."),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>1 + []\nlist[int]: [1]\nrascal>1 + [2]\nlist[int]: [1,2]\nrascal>1 + [2,3]\nlist[int]: [1,2,3]\n")),(0,r.kt)("h4",{id:"pitfalls"},"Pitfalls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the first operand before the ",(0,r.kt)("inlineCode",{parentName:"li"},"+")," is a list, ",(0,r.kt)("inlineCode",{parentName:"li"},"+")," acts as ",(0,r.kt)("a",{parentName:"li",href:"../../../../../Rascal/Expressions/Values/List/Concatenation"},"Concatenation")," and not as ",(0,r.kt)("a",{parentName:"li",href:"../../../../../Rascal/Expressions/Values/List/Insert"},"Insert"))),(0,r.kt)("p",null,"This is concatenation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>[1] + [2]\nlist[int]: [1,2]\n")),(0,r.kt)("p",null,"To insert a list as an element, use extra brackets:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>[[1]] + [2]\nlist[value]: [\n  [1],\n  2\n]\n")))}u.isMDXComponent=!0}}]);