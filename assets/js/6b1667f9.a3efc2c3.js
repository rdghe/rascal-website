"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[22067],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),i=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=i(r),d=a,k=m["".concat(o,".").concat(d)]||m[d]||u[d]||s;return r?n.createElement(k,l(l({ref:t},c),{},{components:r})):n.createElement(k,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var i=2;i<s;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},33389:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>i});var n=r(87462),a=(r(67294),r(3905));const s={title:"Map Subscription",keywords:["[","]"]},l=void 0,p={unversionedId:"Rascal/Expressions/Values/Map/Subscription/index",id:"Rascal/Expressions/Values/Map/Subscription/index",title:"Map Subscription",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Values/Map/Subscription/index.md",sourceDirName:"Rascal/Expressions/Values/Map/Subscription",slug:"/Rascal/Expressions/Values/Map/Subscription/",permalink:"/docs/Rascal/Expressions/Values/Map/Subscription/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Rascal/Expressions/Values/Map/Subscription/index.md",tags:[],version:"current",frontMatter:{title:"Map Subscription",keywords:["[","]"]},sidebar:"tutorialSidebar",previous:{title:"Map SubMap",permalink:"/docs/Rascal/Expressions/Values/Map/SubMap/"},next:{title:"Map SuperMap",permalink:"/docs/Rascal/Expressions/Values/Map/SuperMap/"}},o={},i=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:i};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Retrieve a value by its key in map."),(0,a.kt)("h4",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Exp\u2081 [ Exp\u2082 ]")),(0,a.kt)("h4",{id:"types"},"Types"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"th"},"Exp\u2081")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"th"},"Exp\u2082")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"th"},"Exp\u2081 [ Exp\u2082 ]")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"map[T\u2081, T\u2082]")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"T\u2081")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"T\u2082"))))),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"Map subscription uses the value of ",(0,a.kt)("em",{parentName:"p"},"Exp"),"\u2082 as key in the map value of ",(0,a.kt)("em",{parentName:"p"},"Exp"),"\u2081 and returns the associated value.\nIf this key does not occur in the map, the exception ",(0,a.kt)("inlineCode",{parentName:"p"},"NoSuchKey")," is thrown."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",error",",error":!0},"")),(0,a.kt)("p",null,"Introduce a map, assign it to ",(0,a.kt)("inlineCode",{parentName:"p"},"colors"),", and retrieve the element with index ",(0,a.kt)("inlineCode",{parentName:"p"},'"trumps"'),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},'rascal>colors = ("hearts":"red", "clover":"black", \n>>>>>>>          "trumps":"black", "clubs":"red");\nmap[str, str]: ("hearts":"red","trumps":"black","clover":"black","clubs":"red")\nrascal>colors["trumps"];\nstr: "black"\n')),(0,a.kt)("p",null,"Explore some erroneous subscription expressions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},'rascal>colors[0];\n|prompt:///|(7,1,<1,7>,<1,8>): Expected str, but got int\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/UnexpectedType/UnexpectedType.html|\nok\nrascal>colors["square"];\n|prompt:///|(7,8,<1,7>,<1,15>): NoSuchKey("square")\n    at $shell$(|prompt:///|(0,17,<1,0>,<1,17>))\nok\n')))}u.isMDXComponent=!0}}]);