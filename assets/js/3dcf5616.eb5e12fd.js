"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[16761],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),m=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=m(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=m(r),u=o,b=d["".concat(i,".").concat(u)]||d[u]||p[u]||a;return r?n.createElement(b,s(s({ref:t},c),{},{components:r})):n.createElement(b,s({ref:t},c))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var m=2;m<a;m++)s[m]=r[m];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},37002:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var n=r(83117),o=(r(67294),r(3905));const a={title:"module lang::smtlib2::command::response::Implode"},s=void 0,l={unversionedId:"Library/lang/smtlib2/command/response/Implode",id:"Library/lang/smtlib2/command/response/Implode",title:"module lang::smtlib2::command::response::Implode",description:"Usage",source:"@site/docs/Library/lang/smtlib2/command/response/Implode.md",sourceDirName:"Library/lang/smtlib2/command/response",slug:"/Library/lang/smtlib2/command/response/Implode",permalink:"/docs/Library/lang/smtlib2/command/response/Implode",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/smtlib2/command/response/Implode.md",tags:[],version:"current",frontMatter:{title:"module lang::smtlib2::command::response::Implode"},sidebar:"tutorialSidebar",previous:{title:"module lang::smtlib2::command::response::Ast",permalink:"/docs/Library/lang/smtlib2/command/response/Ast"},next:{title:"module lang::smtlib2::command::response::Parse",permalink:"/docs/Library/lang/smtlib2/command/response/Parse"}},i={},m=[{value:"Usage",id:"usage",level:4},{value:"function toAst",id:"lang-smtlib2-command-response-Implode-toAst",level:2}],c={toc:m};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"import lang::smtlib2::command::response::Implode;")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Synopsis: Converts the concreate SMT Solver Response syntax to AST\n")),(0,o.kt)("h2",{id:"lang-smtlib2-command-response-Implode-toAst"},"function toAst"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Response toAst(str answer)"))))}p.isMDXComponent=!0}}]);