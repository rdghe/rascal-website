"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[63999],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=l,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return t?a.createElement(k,r(r({ref:n},u),{},{components:t})):a.createElement(k,r({ref:n},u))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},57379:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(87462),l=(t(67294),t(3905));const o={title:"module Boolean"},r=void 0,i={unversionedId:"Library/Boolean",id:"Library/Boolean",title:"module Boolean",description:"Usage",source:"@site/docs/Library/Boolean.md",sourceDirName:"Library",slug:"/Library/Boolean",permalink:"/docs/Library/Boolean",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/Boolean.md",tags:[],version:"current",frontMatter:{title:"module Boolean"},sidebar:"tutorialSidebar",previous:{title:"Rascal Standard Library",permalink:"/docs/Library/"},next:{title:"module Content",permalink:"/docs/Library/Content"}},s={},p=[{value:"Usage",id:"usage",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function arbBool",id:"Boolean-arbBool",level:2},{value:"Synopsis",id:"synopsis-1",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4},{value:"function fromString",id:"Boolean-fromString",level:2},{value:"Synopsis",id:"synopsis-2",level:4},{value:"function toInt",id:"Boolean-toInt",level:2},{value:"Synopsis",id:"synopsis-3",level:4},{value:"Description",id:"description-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"function toReal",id:"Boolean-toReal",level:2},{value:"Synopsis",id:"synopsis-4",level:4},{value:"Description",id:"description-2",level:4},{value:"Examples",id:"examples-2",level:4},{value:"function toString",id:"Boolean-toString",level:2},{value:"Synopsis",id:"synopsis-5",level:4},{value:"Description",id:"description-3",level:4},{value:"Examples",id:"examples-3",level:4}],u={toc:p};function c(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import Boolean;")),(0,l.kt)("h4",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,"Library functions for Booleans."),(0,l.kt)("h4",{id:"description"},"Description"),(0,l.kt)("p",null,"For operators on Boolean values see ",(0,l.kt)("a",{parentName:"p",href:"../Rascal/Expressions/Values/Boolean"},"Boolean")," in the Rascal Language Reference."),(0,l.kt)("p",null,"The following functions are defined for Booleans:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/Library/Boolean#Boolean-arbBool"},"arbBool")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/Library/Boolean#Boolean-fromString"},"fromString")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/Library/Boolean#Boolean-toInt"},"toInt")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/Library/Boolean#Boolean-toReal"},"toReal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/Library/Boolean#Boolean-toString"},"toString"))),(0,l.kt)("h2",{id:"Boolean-arbBool"},"function arbBool"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bool arbBool()"))),(0,l.kt)("h4",{id:"synopsis-1"},"Synopsis"),(0,l.kt)("p",null,"Return an arbitrary Boolean value."),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import Boolean;\nok\nrascal>arbBool();\nbool: false\nrascal>arbBool();\nbool: true\nrascal>arbBool();\nbool: true\n")),(0,l.kt)("h4",{id:"benefits"},"Benefits"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"arbInt")," is a convenient generator for arbitrary binary choices."),(0,l.kt)("h2",{id:"Boolean-fromString"},"function fromString"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bool fromString(str s)"))),(0,l.kt)("h4",{id:"synopsis-2"},"Synopsis"),(0,l.kt)("p",null,'Convert the strings "true" or "false" to a bool.'),(0,l.kt)("h2",{id:"Boolean-toInt"},"function toInt"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int toInt(bool b)"))),(0,l.kt)("h4",{id:"synopsis-3"},"Synopsis"),(0,l.kt)("p",null,"Convert a Boolean value to integer."),(0,l.kt)("h4",{id:"description-1"},"Description"),(0,l.kt)("p",null,"Maps ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,l.kt)("h4",{id:"examples-1"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import Boolean;\nok\nrascal>toInt(true);\nint: 1\nrascal>toInt(false);\nint: 0\n")),(0,l.kt)("h2",{id:"Boolean-toReal"},"function toReal"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"real toReal(bool b)"))),(0,l.kt)("h4",{id:"synopsis-4"},"Synopsis"),(0,l.kt)("p",null,"Convert Boolean value to real."),(0,l.kt)("h4",{id:"description-2"},"Description"),(0,l.kt)("p",null,"Maps ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"1.0")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"0.0"),"."),(0,l.kt)("h4",{id:"examples-2"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import Boolean;\nok\nrascal>toReal(true);\nreal: 1.0\nrascal>toReal(false);\nreal: 0.0\n")),(0,l.kt)("h2",{id:"Boolean-toString"},"function toString"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str toString(bool b)"))),(0,l.kt)("h4",{id:"synopsis-5"},"Synopsis"),(0,l.kt)("p",null,"Convert Boolean value to string."),(0,l.kt)("h4",{id:"description-3"},"Description"),(0,l.kt)("p",null,"Maps ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," to ",(0,l.kt)("inlineCode",{parentName:"p"},'"true"')," and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," to ",(0,l.kt)("inlineCode",{parentName:"p"},'"false"'),"."),(0,l.kt)("h4",{id:"examples-3"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>import Boolean;\nok\nrascal>toString(true);\nstr: "true"\nrascal>toString(false);\nstr: "false"\n')))}c.isMDXComponent=!0}}]);