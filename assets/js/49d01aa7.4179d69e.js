"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[49288],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(o,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89345:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"Relation Subscription",keywords:["[","]"]},i=void 0,s={unversionedId:"Rascal/Expressions/Values/Relation/Subscription/index",id:"Rascal/Expressions/Values/Relation/Subscription/index",title:"Relation Subscription",description:"Syntax",source:"@site/docs/Rascal/Expressions/Values/Relation/Subscription/index.md",sourceDirName:"Rascal/Expressions/Values/Relation/Subscription",slug:"/Rascal/Expressions/Values/Relation/Subscription/",permalink:"/docs/Rascal/Expressions/Values/Relation/Subscription/",draft:!1,tags:[],version:"current",frontMatter:{title:"Relation Subscription",keywords:["[","]"]},sidebar:"tutorialSidebar",previous:{title:"Relation ReflexiveTransitiveClosure",permalink:"/docs/Rascal/Expressions/Values/Relation/ReflexiveTransitiveClosure/"},next:{title:"Relation TransitiveClosure",permalink:"/docs/Rascal/Expressions/Values/Relation/TransitiveClosure/"}},o={},p=[{value:"Syntax",id:"syntax",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"Single Value Variant 1",id:"single-value-variant-1",level:5},{value:"Set of Values Variant",id:"set-of-values-variant",level:5},{value:"Description",id:"description",level:4},{value:"Single Value Variant",id:"single-value-variant",level:5},{value:"Set of Values Variant",id:"set-of-values-variant-1",level:5},{value:"Examples",id:"examples",level:4}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Exp\u2080 [Exp\u2081, Exp\u2082, ..., Exp\u2099]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Exp\u2080 [Exp\u2081]"))),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Indexing of a relation via tuple values."),(0,r.kt)("h5",{id:"single-value-variant-1"},"Single Value Variant 1"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_Exp\u2080")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exp\u2081")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exp\u2082")),(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Exp0_ [ Exp\u2081, Exp\u2082, ... ]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rel[T\u2081, T\u2082, ... T\u2098]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"..."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rel[T\u2099, _T\u2099\u208a\u2081_, ... T\u2098]"))))),(0,r.kt)("h5",{id:"set-of-values-variant"},"Set of Values Variant"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"Exp\u2080")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"Exp\u2081")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"Exp\u2080 [ Exp\u2081 ]")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rel[T\u2081, T\u2082, ... T\u2098]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"set[T\u2081]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rel[T\u2082, T\u2082, ... T\u2098]"))))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Relation resulting from subscription of a relation ",(0,r.kt)("em",{parentName:"p"},"Exp"),"\u2080."),(0,r.kt)("h5",{id:"single-value-variant"},"Single Value Variant"),(0,r.kt)("p",null,"Subscription with the index values of ",(0,r.kt)("em",{parentName:"p"},"Exp"),"\u2081, ",(0,r.kt)("em",{parentName:"p"},"Exp"),"\u2082, ....\nThe result is a relation with all tuples that have these index values as first elements\nwith the index values removed from the tuple.\nIf the resulting tuple has only a single element, a set is returned instead of a relation.\nA wildcard ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," as index value matches all possible values at that index position."),(0,r.kt)("h5",{id:"set-of-values-variant-1"},"Set of Values Variant"),(0,r.kt)("p",null,"Subscription with a set of the index values of ",(0,r.kt)("em",{parentName:"p"},"Exp"),"\u2081.\nThe result is a relation with all tuples that have these index values as first element\nwith the index values removed from the tuple. "),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>R = {<1,10>, <2,20>, <1,11>, <3,30>, <2,21>};\nrel[int,int]: {\n  <3,30>,\n  <1,10>,\n  <1,11>,\n  <2,20>,\n  <2,21>\n}\nrascal>R[1];\nset[int]: {10,11}\nrascal>R[{1}];\nset[int]: {10,11}\nrascal>R[{1, 2}];\nset[int]: {10,20,11,21}\nrascal>RR = {<1,10,100>,<1,11,101>,<2,20,200>,<2,22,202>,\n>>>>>>>              <3,30,300>};\nrel[int,int,int]: {\n  <1,10,100>,\n  <3,30,300>,\n  <1,11,101>,\n  <2,20,200>,\n  <2,22,202>\n}\nrascal>RR[1];\nrel[int,int]: {\n  <10,100>,\n  <11,101>\n}\nrascal>RR[1,_];\nset[int]: {100,101}\n")),(0,r.kt)("p",null,"Introduce a relation with economic data and assign it to ",(0,r.kt)("inlineCode",{parentName:"p"},"GDP"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},'rascal>rel[str country, int year, int amount] GDP =\n>>>>>>>{<"US", 2008, 14264600>, <"EU", 2008, 18394115>,\n>>>>>>> <"Japan", 2008, 4923761>, <"US", 2007, 13811200>, \n>>>>>>> <"EU", 2007, 13811200>, <"Japan", 2007, 4376705>};\nrel[str country,int year,int amount]: {\n  <"EU",2007,13811200>,\n  <"US",2007,13811200>,\n  <"Japan",2007,4376705>,\n  <"US",2008,14264600>,\n  <"Japan",2008,4923761>,\n  <"EU",2008,18394115>\n}\n')),(0,r.kt)("p",null,"and then retrieve the information for the index ",(0,r.kt)("inlineCode",{parentName:"p"},'"Japan"'),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},'rascal>GDP["Japan"];\nrel[int,int]: {\n  <2007,4376705>,\n  <2008,4923761>\n}\n')),(0,r.kt)("p",null,"or rather for the indices ",(0,r.kt)("inlineCode",{parentName:"p"},'"Japan"')," and ",(0,r.kt)("inlineCode",{parentName:"p"},"2008"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},'rascal>GDP["Japan", 2008];\nset[int]: {4923761}\n')))}c.isMDXComponent=!0}}]);