"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[58734],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},29424:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={title:"Control Structures",sidebar_position:6},s=void 0,c={unversionedId:"RascalConcepts/ControlStructures/index",id:"RascalConcepts/ControlStructures/index",title:"Control Structures",description:"Synopsis",source:"@site/docs/RascalConcepts/ControlStructures/index.md",sourceDirName:"RascalConcepts/ControlStructures",slug:"/RascalConcepts/ControlStructures/",permalink:"/docs/RascalConcepts/ControlStructures/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/RascalConcepts/ControlStructures/index.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Control Structures",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Pattern Matching",permalink:"/docs/RascalConcepts/PatternMatching/"},next:{title:"Case Distinction",permalink:"/docs/RascalConcepts/CaseDistinction/"}},i={},l=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Success-directed control structures."),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The flow of Rascal program execution is completely explicit. Boolean expressions determine choices that drive the control structures.\nOnly local backtracking is provided in the context of boolean expressions and pattern matching."),(0,a.kt)("p",null,"Control structures like ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/If/"},"If"),", ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/While/"},"While"),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/For/"},"For")," statement are driven by Boolean expressions.\nActually, combinations of generators and Boolean expressions can be used to drive the control structures.\nIn the latter case, the Boolean expression is executed for each generated value."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"A classical if statement:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"if(N <= 0)\n     return 1; \n  else\n     return N * fac(N - 1);\n")),(0,a.kt)("p",null,"A combination of a generator and a test:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"for(/asgStat(Id name, _) <- P, size(name) > 10){\n    println(name);\n}\n")),(0,a.kt)("p",null,"This statement prints all identifiers in assignment statements (",(0,a.kt)("inlineCode",{parentName:"p"},"asgStat"),") that consist of more than 10 characters."))}u.isMDXComponent=!0}}]);