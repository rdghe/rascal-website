"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[49801],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(r),d=i,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,a=new Array(l);a[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var u=2;u<l;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},83122:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=r(87462),i=(r(67294),r(3905));const l={title:"module util::SemVer"},a=void 0,o={unversionedId:"Library/util/SemVer",id:"Library/util/SemVer",title:"module util::SemVer",description:"Usage",source:"@site/docs/Library/util/SemVer.md",sourceDirName:"Library/util",slug:"/Library/util/SemVer",permalink:"/docs/Library/util/SemVer",draft:!1,tags:[],version:"current",frontMatter:{title:"module util::SemVer"},sidebar:"tutorialSidebar",previous:{title:"module util::Reflective",permalink:"/docs/Library/util/Reflective"},next:{title:"module util::ShellExec",permalink:"/docs/Library/util/ShellExec"}},s={},u=[{value:"Usage",id:"usage",level:4},{value:"function satisfiesVersion",id:"util-SemVer-satisfiesVersion",level:2},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function lessVersion",id:"util-SemVer-lessVersion",level:2},{value:"function lessEqualVersion",id:"util-SemVer-lessEqualVersion",level:2},{value:"function greaterVersion",id:"util-SemVer-greaterVersion",level:2},{value:"function greaterEqualVersion",id:"util-SemVer-greaterEqualVersion",level:2},{value:"function equalVersion",id:"util-SemVer-equalVersion",level:2},{value:"function getRascalVersion",id:"util-SemVer-getRascalVersion",level:2},{value:"function getRascalRuntimeVersion",id:"util-SemVer-getRascalRuntimeVersion",level:2},{value:"function getRascalCompilerVersion",id:"util-SemVer-getRascalCompilerVersion",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"import util::SemVer;")),(0,i.kt)("h2",{id:"util-SemVer-satisfiesVersion"},"function satisfiesVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool satisfiesVersion(str version, str rangeSet)"))),(0,i.kt)("h4",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Semantic Versioning"),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"Check that a given version string satisfies a range-set as defined by:\n(See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/npm/node-semver"},"https://github.com/npm/node-semver"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' | ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n")),(0,i.kt)("h2",{id:"util-SemVer-lessVersion"},"function lessVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool lessVersion(str version1, str version2)"))),(0,i.kt)("h2",{id:"util-SemVer-lessEqualVersion"},"function lessEqualVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool lessEqualVersion(str version1, str version2)"))),(0,i.kt)("h2",{id:"util-SemVer-greaterVersion"},"function greaterVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool greaterVersion(str version1, str version2)"))),(0,i.kt)("h2",{id:"util-SemVer-greaterEqualVersion"},"function greaterEqualVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool greaterEqualVersion(str version1, str version2)"))),(0,i.kt)("h2",{id:"util-SemVer-equalVersion"},"function equalVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bool equalVersion(str version1, str version2)"))),(0,i.kt)("h2",{id:"util-SemVer-getRascalVersion"},"function getRascalVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"str getRascalVersion()"))),(0,i.kt)("h2",{id:"util-SemVer-getRascalRuntimeVersion"},"function getRascalRuntimeVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"str getRascalRuntimeVersion()"))),(0,i.kt)("h2",{id:"util-SemVer-getRascalCompilerVersion"},"function getRascalCompilerVersion"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"str getRascalCompilerVersion()"))))}c.isMDXComponent=!0}}]);