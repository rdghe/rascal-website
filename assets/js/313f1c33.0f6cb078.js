"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[15115],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},81195:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(83117),i=(r(67294),r(3905));const a={title:"Arity"},o=void 0,s={unversionedId:"CompileTimeErrors/Arity/index",id:"CompileTimeErrors/Arity/index",title:"Arity",description:"Synopsis",source:"@site/docs/CompileTimeErrors/Arity/index.md",sourceDirName:"CompileTimeErrors/Arity",slug:"/CompileTimeErrors/Arity/",permalink:"/docs/CompileTimeErrors/Arity/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/CompileTimeErrors/Arity/index.md",tags:[],version:"current",frontMatter:{title:"Arity"},sidebar:"tutorialSidebar",previous:{title:"ArgumentMismatch",permalink:"/docs/CompileTimeErrors/ArgumentMismatch/"},next:{title:"DateTimeSyntax",permalink:"/docs/CompileTimeErrors/DateTimeSyntax/"}},l={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Usage",id:"usage",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"The number of arguments of an operator differ from what is required."),(0,i.kt)("h4",{id:"syntax"},"Syntax"),(0,i.kt)("h4",{id:"types"},"Types"),(0,i.kt)("h4",{id:"function"},"Function"),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"Various operators like ",(0,i.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Relation/Composition"},"composition"),",\n",(0,i.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Relation/TransitiveClosure"},"transitive closure")," and\n",(0,i.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Relation/ReflexiveTransitiveClosure"},"reflexive transitive closure"),"\nexpect binary relations or tuples as arguments."),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"This composition is correct:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>{<1,10>, <2,20>} o {<10,100>, <20, 200>};\nrel[int,int]: {\n  <1,100>,\n  <2,200>\n}\n")),(0,i.kt)("p",null,"This is not, since the first argument has arity 3:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>{<1,5,10>, <2,6,20>} o {<10,100>, <20, 200>};\nok\n")),(0,i.kt)("p",null,"These transitive closures are correct:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>{<1,2>, <2,3>,<4,5>}+\nrel[int,int]: {\n  <2,3>,\n  <4,5>,\n  <1,3>,\n  <1,2>\n}\nrascal>{<1,2>, <2,3>,<4,5>}*\nrel[int,int]: {\n  <5,5>,\n  <3,3>,\n  <1,1>,\n  <1,3>,\n  <1,2>,\n  <2,3>,\n  <2,2>,\n  <4,5>,\n  <4,4>\n}\n")),(0,i.kt)("p",null,"But these are incorrect:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>{<1,2,3>, <2,3,4>,<4,5,6>}+\nok\nrascal>{<1,2,3>, <2,3,4>,<4,5,6>}*\n|prompt:///|(23,1,<1,23>,<1,24>): Expected arity : 2, unequal to 3\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/Arity/Arity.html|\nok\n")),(0,i.kt)("h4",{id:"benefits"},"Benefits"))}u.isMDXComponent=!0}}]);