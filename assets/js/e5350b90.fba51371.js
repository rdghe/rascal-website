"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[93900],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>A});var l=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,l,i=function(t,e){if(null==t)return{};var n,l,i={},a=Object.keys(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var o=l.createContext({}),u=function(t){var e=l.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=u(t.components);return l.createElement(o.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},d=l.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,o=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),d=u(n),A=i,f=d["".concat(o,".").concat(A)]||d[A]||p[A]||a;return n?l.createElement(f,r(r({ref:e},c),{},{components:n})):l.createElement(f,r({ref:e},c))}));function A(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,r=new Array(a);r[0]=d;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s.mdxType="string"==typeof t?t:i,r[1]=s;for(var u=2;u<a;u++)r[u]=n[u];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53901:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var l=n(83117),i=(n(67294),n(3905));const a={title:"module lang::rascal::tests::functionality::Accumulating"},r=void 0,s={unversionedId:"Library/lang/rascal/tests/functionality/Accumulating",id:"Library/lang/rascal/tests/functionality/Accumulating",title:"module lang::rascal::tests::functionality::Accumulating",description:"Usage",source:"@site/docs/Library/lang/rascal/tests/functionality/Accumulating.md",sourceDirName:"Library/lang/rascal/tests/functionality",slug:"/Library/lang/rascal/tests/functionality/Accumulating",permalink:"/docs/Library/lang/rascal/tests/functionality/Accumulating",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/rascal/tests/functionality/Accumulating.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::tests::functionality::Accumulating"},sidebar:"tutorialSidebar",previous:{title:"lang::rascal::tests::functionality",permalink:"/docs/Library/lang/rascal/tests/functionality/"},next:{title:"module lang::rascal::tests::functionality::Aliasing",permalink:"/docs/Library/lang/rascal/tests/functionality/Aliasing"}},o={},u=[{value:"Usage",id:"usage",level:4},{value:"function testForWithNoAppend",id:"lang-rascal-tests-functionality-Accumulating-testForWithNoAppend",level:2},{value:"function testForWithAppend",id:"lang-rascal-tests-functionality-Accumulating-testForWithAppend",level:2},{value:"function testForWithAppendAfterSomethingElse",id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAfterSomethingElse",level:2},{value:"function testForWithAppendAndLabel",id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAndLabel",level:2},{value:"function testForWithAppendAndLabelOuter",id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAndLabelOuter",level:2},{value:"function testForWithAppendAndLabelOuterAndInner",id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAndLabelOuterAndInner",level:2},{value:"function testNestedAppend",id:"lang-rascal-tests-functionality-Accumulating-testNestedAppend",level:2},{value:"function testSimpleNestedFor",id:"lang-rascal-tests-functionality-Accumulating-testSimpleNestedFor",level:2},{value:"function testWhileWithNoAppend",id:"lang-rascal-tests-functionality-Accumulating-testWhileWithNoAppend",level:2},{value:"function testWhileWithAppend",id:"lang-rascal-tests-functionality-Accumulating-testWhileWithAppend",level:2},{value:"function testDoWhileWithNoAppend",id:"lang-rascal-tests-functionality-Accumulating-testDoWhileWithNoAppend",level:2},{value:"function testDoWhileWithAppend",id:"lang-rascal-tests-functionality-Accumulating-testDoWhileWithAppend",level:2}],c={toc:u};function p(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,l.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tests::functionality::Accumulating;")),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testForWithNoAppend"},"function testForWithNoAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testForWithNoAppend()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testForWithAppend"},"function testForWithAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testForWithAppend()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAfterSomethingElse"},"function testForWithAppendAfterSomethingElse"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testForWithAppendAfterSomethingElse()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAndLabel"},"function testForWithAppendAndLabel"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testForWithAppendAndLabel()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAndLabelOuter"},"function testForWithAppendAndLabelOuter"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testForWithAppendAndLabelOuter()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testForWithAppendAndLabelOuterAndInner"},"function testForWithAppendAndLabelOuterAndInner"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testForWithAppendAndLabelOuterAndInner()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testNestedAppend"},"function testNestedAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testNestedAppend()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testSimpleNestedFor"},"function testSimpleNestedFor"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testSimpleNestedFor()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testWhileWithNoAppend"},"function testWhileWithNoAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testWhileWithNoAppend()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testWhileWithAppend"},"function testWhileWithAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testWhileWithAppend()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testDoWhileWithNoAppend"},"function testDoWhileWithNoAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testDoWhileWithNoAppend()"))),(0,i.kt)("h2",{id:"lang-rascal-tests-functionality-Accumulating-testDoWhileWithAppend"},"function testDoWhileWithAppend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"test bool testDoWhileWithAppend()"))))}p.isMDXComponent=!0}}]);