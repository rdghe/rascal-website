"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[69609],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),h=r,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||o;return n?a.createElement(d,l(l({ref:t},p),{},{components:n})):a.createElement(d,l({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},31e3:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={title:"Throw",keywords:["throw"]},l=void 0,i={unversionedId:"Rascal/Statements/Throw/index",id:"Rascal/Statements/Throw/index",title:"Throw",description:"Synopsis",source:"@site/docs/Rascal/Statements/Throw/index.md",sourceDirName:"Rascal/Statements/Throw",slug:"/Rascal/Statements/Throw/",permalink:"/docs/Rascal/Statements/Throw/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Rascal/Statements/Throw/index.md",tags:[],version:"current",frontMatter:{title:"Throw",keywords:["throw"]},sidebar:"tutorialSidebar",previous:{title:"Test",permalink:"/docs/Rascal/Statements/Test/"},next:{title:"Try Catch",permalink:"/docs/Rascal/Statements/TryCatch/"}},s={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Throw any value as an exception up the call stack."),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"throw Exp")),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"A throw statement causes the immediate abortion of the execution of the current function with ",(0,r.kt)("em",{parentName:"p"},"Exp")," \\'s value as exception value.\nThe exception can be caught by a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/TryCatch/"},"Try Catch")," statement in the current function or in one of its callers.\nIf the exception is not caught, the execution of the Rascal program is terminated. The following rules apply:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Although it is not necessary, it is a coding standard to use the ",(0,r.kt)("a",{parentName:"li",href:"/docs/Rascal/Declarations/AlgebraicDataType/"},"algebraic data type")," ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeException"),", see ",(0,r.kt)("a",{parentName:"li",href:"/docs/Library/Exception#Exception-RuntimeException"},"RuntimeException")," to throw as ",(0,r.kt)("em",{parentName:"li"},"Exp"),"."),(0,r.kt)("li",{parentName:"ul"},"Use new ",(0,r.kt)("a",{parentName:"li",href:"/docs/Rascal/Declarations/AlgebraicDataType/"},"algebraic data type")," data declarations that extend the type ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeException")," to create your own exception kinds."),(0,r.kt)("li",{parentName:"ul"},"In general ",(0,r.kt)("em",{parentName:"li"},"Exp")," can be any value. ")),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/TryCatch/"},"try catch")," for handling thrown values."),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Here is a variant of string concatenation for ball haters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",error",",error":!0},'rascal>str conc(str x, str y) { \n>>>>>>>  if ("ball" in {x, y}) \n>>>>>>>    throw "I hate balls"; \n>>>>>>>  return x + y; \n>>>>>>>}\nstr (str, str): function(|prompt:///|(0,96,<1,0>,<5,1>))\nrascal>conc("fairy", "tale");\nstr: "fairytale"\nrascal>conc("foot", "ball");\n|prompt:///|(61,14,<3,10>,<3,24>): "I hate balls"\n    at conc(|prompt:///|(28,52,<2,2>,<4,2>))\n    at $shell$(|prompt:///|(0,21,<1,0>,<1,21>))\nok\n')),(0,r.kt)("p",null,"Here we throw an integer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",error",",error":!0},"rascal>import List;\nok\nrascal>aList = [1,2,3];\nlist[int]: [1,2,3]\nrascal>if (size(aList) == 3) {\n>>>>>>>  throw size(aList);\n>>>>>>>}\n|prompt:///|(37,5,<2,13>,<2,18>): 3\n    at $shell$(|prompt:///|(22,24,<1,22>,<3,1>))\nok\n")),(0,r.kt)("p",null,"Here we throw a constructor of ",(0,r.kt)("a",{parentName:"p",href:"/docs/Library/Exception#Exception-RuntimeException"},"RuntimeException"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",error",",error":!0},"rascal>import Exception;\nok\n")),(0,r.kt)("p",null,"highlight-next-line"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>data RuntimeException = facUndefinedOn(int cause);\nok\nrascal>int fac(int n) {\n>>>>>>>  if (n < 0) {\n")),(0,r.kt)("p",null,"highlight-next-line"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},">>>>>>>    throw facUndefinedOn(n);\n>>>>>>>  }\n>>>>>>>  else if (n == 0) {\n>>>>>>>    return 1;\n>>>>>>>  }\n>>>>>>>  else {\n>>>>>>>    return n * fac(n - 1);\n>>>>>>>  }\n>>>>>>>}\nint (int): function(|prompt:///|(0,145,<1,0>,<11,1>))\nrascal>fac(-1)\n|prompt:///|(57,1,<3,25>,<3,26>): facUndefinedOn(-1)\n    at fac(|prompt:///|(30,34,<2,13>,<4,3>))\n    at $shell$(|prompt:///|(0,145,<1,0>,<11,1>))\nok\n")))}u.isMDXComponent=!0}}]);