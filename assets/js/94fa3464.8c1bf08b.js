"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[55035],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=l.createContext({}),s=function(e){var t=l.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return l.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},v=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),v=s(a),d=n,c=v["".concat(p,".").concat(d)]||v[d]||u[d]||r;return a?l.createElement(c,i(i({ref:t},m),{},{components:a})):l.createElement(c,i({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=v;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var s=2;s<r;s++)i[s]=a[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}v.displayName="MDXCreateElement"},76238:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var l=a(87462),n=(a(67294),a(3905));const r={title:"module demo::lang::Lisra::Eval"},i=void 0,o={unversionedId:"Library/demo/lang/Lisra/Eval",id:"Library/demo/lang/Lisra/Eval",title:"module demo::lang::Lisra::Eval",description:"Usage",source:"@site/docs/Library/demo/lang/Lisra/Eval.md",sourceDirName:"Library/demo/lang/Lisra",slug:"/Library/demo/lang/Lisra/Eval",permalink:"/docs/Library/demo/lang/Lisra/Eval",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/demo/lang/Lisra/Eval.md",tags:[],version:"current",frontMatter:{title:"module demo::lang::Lisra::Eval"},sidebar:"tutorialSidebar",previous:{title:"demo::lang::Lisra",permalink:"/docs/Library/demo/lang/Lisra/"},next:{title:"module demo::lang::Lisra::Parse",permalink:"/docs/Library/demo/lang/Lisra/Parse"}},p={},s=[{value:"Usage",id:"usage",level:4},{value:"function eval",id:"demo-lang-Lisra-Eval-eval",level:2},{value:"function apply",id:"demo-lang-Lisra-Eval-apply",level:2}],m={toc:s};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import demo::lang::Lisra::Eval;")),(0,n.kt)("h2",{id:"demo-lang-Lisra-Eval-eval"},"function eval"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Lval eval(Lval x)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Result eval(str exp)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Result eval(Integer(int x), Env e)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Result eval(var:Atom(str name), Env e)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result eval(List([Atom("quote"), *Lval exps]), Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result eval(List([Atom("set!"), var, exp]), Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result eval(List([Atom("if"), Lval tst, Lval conseq, Lval alt]), Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result eval(List([Atom("begin"), *Lval exps]) , Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result eval(List([Atom("define"), var, exp]), Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result eval(List([Atom("lambda"), List(list[Lval] vars), exp]), Env defEnv)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"default Result eval(List([ *Lval exps ]), Env e)"))),(0,n.kt)("h2",{id:"demo-lang-Lisra-Eval-apply"},"function apply"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Result apply(Closure(Result(list[Lval] args, Env env) fn), list[Lval] args, Env e)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("+"),      [Integer(x), Integer(y)],      Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("-"),      [Integer(x), Integer(y)],      Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("*"),      [Integer(x), Integer(y)],      Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("\\<"),     [Lval x, Lval y],              Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("\\>"),     [Lval x, Lval y],              Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("equal?"), [Lval x, Lval y],              Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("null?"),  [List(list[Lval] x)],          Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("cons"),   [Lval x, List(list[Lval] y)],  Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("append"), [List(list[Lval] x), Lval y],  Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("car"),    [List(list[Lval] x)],          Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("cdr"),    [List(list[Lval] x)],          Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'Result apply(Atom("list"),   list[Lval] x,                  Env e)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"default Result apply(Lval a,     list[Lval] b, Env e)"))))}u.isMDXComponent=!0}}]);