"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[8221],{3905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>d});var a=l(67294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function s(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)l=i[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)l=i[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var o=a.createContext({}),u=function(e){var t=a.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(l),d=n,h=c["".concat(o,".").concat(d)]||c[d]||m[d]||i;return l?a.createElement(h,r(r({ref:t},p),{},{components:l})):a.createElement(h,r({ref:t},p))}));function d(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=l.length,r=new Array(i);r[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var u=2;u<i;u++)r[u]=l[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,l)}c.displayName="MDXCreateElement"},63159:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=l(83117),n=(l(67294),l(3905));const i={title:"module util::Math"},r=void 0,s={unversionedId:"Library/util/Math",id:"Library/util/Math",title:"module util::Math",description:"Usage",source:"@site/docs/Library/util/Math.md",sourceDirName:"Library/util",slug:"/Library/util/Math",permalink:"/docs/Library/util/Math",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/util/Math.md",tags:[],version:"current",frontMatter:{title:"module util::Math"},sidebar:"tutorialSidebar",previous:{title:"module util::IDEServices",permalink:"/docs/Library/util/IDEServices"},next:{title:"module util::Maybe",permalink:"/docs/Library/util/Maybe"}},o={},u=[{value:"Usage",id:"usage",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function abs",id:"util-Math-abs",level:2},{value:"Synopsis",id:"synopsis-1",level:4},{value:"Description",id:"description-1",level:4},{value:"Examples",id:"examples",level:4},{value:"function arbInt",id:"util-Math-arbInt",level:2},{value:"Synopsis",id:"synopsis-2",level:4},{value:"Description",id:"description-2",level:4},{value:"Examples",id:"examples-1",level:4},{value:"Benefits",id:"benefits",level:4},{value:"function arbReal",id:"util-Math-arbReal",level:2},{value:"Synopsis",id:"synopsis-3",level:4},{value:"Description",id:"description-3",level:4},{value:"Examples",id:"examples-2",level:4},{value:"function arbSeed",id:"util-Math-arbSeed",level:2},{value:"Synopsis",id:"synopsis-4",level:4},{value:"Description",id:"description-4",level:4},{value:"function arbRat",id:"util-Math-arbRat",level:2},{value:"Synopsis",id:"synopsis-5",level:4},{value:"Examples",id:"examples-3",level:4},{value:"function ceil",id:"util-Math-ceil",level:2},{value:"Synopsis",id:"synopsis-6",level:4},{value:"Description",id:"description-5",level:4},{value:"Examples",id:"examples-4",level:4},{value:"function cos",id:"util-Math-cos",level:2},{value:"Synopsis",id:"synopsis-7",level:4},{value:"Description",id:"description-6",level:4},{value:"Examples",id:"examples-5",level:4},{value:"function denominator",id:"util-Math-denominator",level:2},{value:"Synopsis",id:"synopsis-8",level:4},{value:"function E",id:"util-Math-E",level:2},{value:"Synopsis",id:"synopsis-9",level:4},{value:"Examples",id:"examples-6",level:4},{value:"function exp",id:"util-Math-exp",level:2},{value:"Synopsis",id:"synopsis-10",level:4},{value:"Description",id:"description-7",level:4},{value:"function floor",id:"util-Math-floor",level:2},{value:"Synopsis",id:"synopsis-11",level:4},{value:"Description",id:"description-8",level:4},{value:"Examples",id:"examples-7",level:4},{value:"function ln",id:"util-Math-ln",level:2},{value:"Synopsis",id:"synopsis-12",level:4},{value:"Description",id:"description-9",level:4},{value:"Examples",id:"examples-8",level:4},{value:"function log",id:"util-Math-log",level:2},{value:"Synopsis",id:"synopsis-13",level:4},{value:"Description",id:"description-10",level:4},{value:"Examples",id:"examples-9",level:4},{value:"function log10",id:"util-Math-log10",level:2},{value:"Synopsis",id:"synopsis-14",level:4},{value:"function log2",id:"util-Math-log2",level:2},{value:"Synopsis",id:"synopsis-15",level:4},{value:"function max",id:"util-Math-max",level:2},{value:"Synopsis",id:"synopsis-16",level:4},{value:"Description",id:"description-11",level:4},{value:"Examples",id:"examples-10",level:4},{value:"function min",id:"util-Math-min",level:2},{value:"Synopsis",id:"synopsis-17",level:4},{value:"Description",id:"description-12",level:4},{value:"Examples",id:"examples-11",level:4},{value:"function numerator",id:"util-Math-numerator",level:2},{value:"Synopsis",id:"synopsis-18",level:4},{value:"function nroot",id:"util-Math-nroot",level:2},{value:"Synopsis",id:"synopsis-19",level:4},{value:"Description",id:"description-13",level:4},{value:"Examples",id:"examples-12",level:4},{value:"function PI",id:"util-Math-PI",level:2},{value:"Synopsis",id:"synopsis-20",level:4},{value:"Examples",id:"examples-13",level:4},{value:"function pow",id:"util-Math-pow",level:2},{value:"Synopsis",id:"synopsis-21",level:4},{value:"Description",id:"description-14",level:4},{value:"Examples",id:"examples-14",level:4},{value:"function precision",id:"util-Math-precision",level:2},{value:"Synopsis",id:"synopsis-22",level:4},{value:"function setPrecision",id:"util-Math-setPrecision",level:2},{value:"Synopsis",id:"synopsis-23",level:4},{value:"function scale",id:"util-Math-scale",level:2},{value:"Synopsis",id:"synopsis-24",level:4},{value:"function unscaled",id:"util-Math-unscaled",level:2},{value:"Synopsis",id:"synopsis-25",level:4},{value:"function remainder",id:"util-Math-remainder",level:2},{value:"Synopsis",id:"synopsis-26",level:4},{value:"function round",id:"util-Math-round",level:2},{value:"Synopsis",id:"synopsis-27",level:4},{value:"Examples",id:"examples-15",level:4},{value:"function fitFloat",id:"util-Math-fitFloat",level:2},{value:"Description",id:"description-15",level:4},{value:"Benefits",id:"benefits-1",level:4},{value:"Pitfalls",id:"pitfalls",level:4},{value:"function fitDouble",id:"util-Math-fitDouble",level:2},{value:"Description",id:"description-16",level:4},{value:"Benefits",id:"benefits-2",level:4},{value:"Pitfalls",id:"pitfalls-1",level:4},{value:"function percent",id:"util-Math-percent",level:2},{value:"Synopsis",id:"synopsis-28",level:4},{value:"Examples",id:"examples-16",level:4},{value:"function sin",id:"util-Math-sin",level:2},{value:"Synopsis",id:"synopsis-29",level:4},{value:"Description",id:"description-17",level:4},{value:"Examples",id:"examples-17",level:4},{value:"function sqrt",id:"util-Math-sqrt",level:2},{value:"Synopsis",id:"synopsis-30",level:4},{value:"Description",id:"description-18",level:4},{value:"Examples",id:"examples-18",level:4},{value:"function tan",id:"util-Math-tan",level:2},{value:"Synopsis",id:"synopsis-31",level:4},{value:"Description",id:"description-19",level:4},{value:"Examples",id:"examples-19",level:4},{value:"function toInt",id:"util-Math-toInt",level:2},{value:"Synopsis",id:"synopsis-32",level:4},{value:"Description",id:"description-20",level:4},{value:"Examples",id:"examples-20",level:4},{value:"function toRat",id:"util-Math-toRat",level:2},{value:"Synopsis",id:"synopsis-33",level:4},{value:"function toReal",id:"util-Math-toReal",level:2},{value:"Synopsis",id:"synopsis-34",level:4},{value:"Examples",id:"examples-21",level:4},{value:"function toString",id:"util-Math-toString",level:2},{value:"Synopsis",id:"synopsis-35",level:4},{value:"Examples",id:"examples-22",level:4},{value:"function primes",id:"util-Math-primes",level:2},{value:"Synopsis",id:"synopsis-36",level:4},{value:"function arbPrime",id:"util-Math-arbPrime",level:2}],p={toc:u};function m(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import util::Math;")),(0,n.kt)("h4",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Mathematical functions."),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Math")," library provides the following functions:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-E"},"E")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-PI"},"PI")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-abs"},"abs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-arbInt"},"arbInt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-arbPrime"},"arbPrime")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-arbRat"},"arbRat")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-arbReal"},"arbReal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-arbSeed"},"arbSeed")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-ceil"},"ceil")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-cos"},"cos")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-denominator"},"denominator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-exp"},"exp")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-fitDouble"},"fitDouble")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-fitFloat"},"fitFloat")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-floor"},"floor")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-ln"},"ln")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-log"},"log")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-log10"},"log10")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-log2"},"log2")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-max"},"max")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-min"},"min")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-nroot"},"nroot")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-numerator"},"numerator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-percent"},"percent")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-pow"},"pow")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-precision"},"precision")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-primes"},"primes")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-remainder"},"remainder")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-round"},"round")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-scale"},"scale")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-setPrecision"},"setPrecision")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-sin"},"sin")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-sqrt"},"sqrt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-tan"},"tan")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-toInt"},"toInt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-toRat"},"toRat")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-toReal"},"toReal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-toString"},"toString")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/Library/util/Math#util::Math-unscaled"},"unscaled"))),(0,n.kt)("h2",{id:"util-Math-abs"},"function abs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"&T <: num abs(&T <: num N)"))),(0,n.kt)("h4",{id:"synopsis-1"},"Synopsis"),(0,n.kt)("p",null,"Absolute value of a number."),(0,n.kt)("h4",{id:"description-1"},"Description"),(0,n.kt)("p",null,"Absolute value of the number ",(0,n.kt)("inlineCode",{parentName:"p"},"n"),". The result type is equal to the type of the argument ",(0,n.kt)("inlineCode",{parentName:"p"},"n"),"."),(0,n.kt)("h4",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>abs(13)\nint: 13\nrascal>abs(-13)\nint: 13\nrascal>abs(3.14)\nreal: 3.14\nrascal>abs(-3.14)\nreal: 3.14\n")),(0,n.kt)("h2",{id:"util-Math-arbInt"},"function arbInt"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int arbInt()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int arbInt(int limit)"))),(0,n.kt)("h4",{id:"synopsis-2"},"Synopsis"),(0,n.kt)("p",null,"Generate a random integer value."),(0,n.kt)("h4",{id:"description-2"},"Description"),(0,n.kt)("p",null,"Return an arbitrary integer value. When the argument ",(0,n.kt)("inlineCode",{parentName:"p"},"limit")," is given, the generated value is in the interval [0, ",(0,n.kt)("inlineCode",{parentName:"p"},"limit"),"),\ni.e., the limit is exclusive."),(0,n.kt)("h4",{id:"examples-1"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>arbInt();\nint: 710652670\nrascal>arbInt();\nint: -1188018633\nrascal>arbInt();\nint: -664568966\nrascal>arbInt(10);\nint: 6\nrascal>arbInt(10);\nint: 5\nrascal>arbInt(10);\nint: 5\n")),(0,n.kt)("h4",{id:"benefits"},"Benefits"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"arbInt")," is a convenient generator for pseudo-random integers."),(0,n.kt)("h2",{id:"util-Math-arbReal"},"function arbReal"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real arbReal()"))),(0,n.kt)("h4",{id:"synopsis-3"},"Synopsis"),(0,n.kt)("p",null,"Generate a random real value in the interval [0.0,1.0)."),(0,n.kt)("h4",{id:"description-3"},"Description"),(0,n.kt)("p",null,"Generates an arbitrary real value in the interval ","[0.0, 1.0]","."),(0,n.kt)("h4",{id:"examples-2"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>arbReal();\nreal: 0.4206294904454825\nrascal>arbReal();\nreal: 0.5559648823505061\nrascal>arbReal();\nreal: 0.25345620128809787\n")),(0,n.kt)("h2",{id:"util-Math-arbSeed"},"function arbSeed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"void arbSeed(int seed)"))),(0,n.kt)("h4",{id:"synopsis-4"},"Synopsis"),(0,n.kt)("p",null,"Define the seed for the generation of arbitrary values."),(0,n.kt)("h4",{id:"description-4"},"Description"),(0,n.kt)("p",null,"Define the seed for the generation of arbitrary values such as ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/Boolean#Boolean-arbBool"},"arb bool"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/util/Math#util::Math-arbInt"},"arb int"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/util/Math#util::Math-arbReal"},"arb real"),",\n",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/util/Math#util::Math-arbRat"},"arb rat"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/List#List-getOneFrom"},"getOneFrom"),",",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/Set#Set-getOneFrom"},"getOneFrom"),", ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/List#List-takeOneFrom"},"takeOneFrom")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/Set#Set-takeOneFrom"},"takeOneFrom"),". ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/util/Math#util::Math-arbSeed"},"arb seed")," resets the random number generator that\nis used to choose arbitrary values. This can be used to generate a reproducible series of choices."),(0,n.kt)("h2",{id:"util-Math-arbRat"},"function arbRat"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rat arbRat()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rat arbRat(int limit1, int limit2)"))),(0,n.kt)("h4",{id:"synopsis-5"},"Synopsis"),(0,n.kt)("p",null,"Generate an arbitrary rational value."),(0,n.kt)("h4",{id:"examples-3"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>arbRat();\nrat: -616999671r700780261\nrascal>arbRat();\nrat: 1924847617r2040661143\nrascal>arbRat();\nrat: 839822104r828773289\nrascal>arbRat(10,100);\nrat: 3r7\nrascal>arbRat(10,100);\nrat: 8r\nrascal>arbRat(10,100);\nrat: 1r8\n")),(0,n.kt)("h2",{id:"util-Math-ceil"},"function ceil"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int ceil(num x)"))),(0,n.kt)("h4",{id:"synopsis-6"},"Synopsis"),(0,n.kt)("p",null,"Compute the smallest integer that is larger than a given number."),(0,n.kt)("h4",{id:"description-5"},"Description"),(0,n.kt)("p",null,"Computes the ",(0,n.kt)("em",{parentName:"p"},"ceiling")," of a given number.\nAlso see ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/util/Math#util::Math-floor"},"floor"),"."),(0,n.kt)("h4",{id:"examples-4"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>ceil(3.2);\nint: 4\nrascal>ceil(-3.2);\nint: -3\n")),(0,n.kt)("h2",{id:"util-Math-cos"},"function cos"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real cos(num x)"))),(0,n.kt)("h4",{id:"synopsis-7"},"Synopsis"),(0,n.kt)("p",null,"Calculate the cosine of a numeric value."),(0,n.kt)("h4",{id:"description-6"},"Description"),(0,n.kt)("p",null,"The cosine of the number ",(0,n.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,n.kt)("h4",{id:"examples-5"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>cos(1.0)\nreal: 0.54030230588\nrascal>cos(60 * PI() / 180)\nreal: 0.50000000000\n")),(0,n.kt)("h2",{id:"util-Math-denominator"},"function denominator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int denominator(rat n)"))),(0,n.kt)("h4",{id:"synopsis-8"},"Synopsis"),(0,n.kt)("p",null,"Return the denominator of a rational value."),(0,n.kt)("h2",{id:"util-Math-E"},"function E"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real E()"))),(0,n.kt)("h4",{id:"synopsis-9"},"Synopsis"),(0,n.kt)("p",null,"The constant E."),(0,n.kt)("h4",{id:"examples-6"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>E();\nreal: 2.7182818285\n")),(0,n.kt)("h2",{id:"util-Math-exp"},"function exp"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real exp(num x)"))),(0,n.kt)("h4",{id:"synopsis-10"},"Synopsis"),(0,n.kt)("p",null,"Compute exp(x)."),(0,n.kt)("h4",{id:"description-7"},"Description"),(0,n.kt)("p",null,"Calculate ",(0,n.kt)("inlineCode",{parentName:"p"},"e"),(0,n.kt)("sup",null,(0,n.kt)("inlineCode",{parentName:"p"},"x")),". "),(0,n.kt)("h2",{id:"util-Math-floor"},"function floor"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int floor(num x)"))),(0,n.kt)("h4",{id:"synopsis-11"},"Synopsis"),(0,n.kt)("p",null,"Compute the largest integer that is smaller than a given number."),(0,n.kt)("h4",{id:"description-8"},"Description"),(0,n.kt)("p",null,"Computes the ",(0,n.kt)("em",{parentName:"p"},"floor")," of a given number.\nAlso see ",(0,n.kt)("a",{parentName:"p",href:"/docs/Library/util/Math#util::Math-ceil"},"ceil"),"."),(0,n.kt)("h4",{id:"examples-7"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>floor(3.2);\nint: 3\nrascal>floor(-3.2);\nint: -4\n")),(0,n.kt)("h2",{id:"util-Math-ln"},"function ln"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real ln(num x)"))),(0,n.kt)("h4",{id:"synopsis-12"},"Synopsis"),(0,n.kt)("p",null,"Calculate the natural log of a numeric value."),(0,n.kt)("h4",{id:"description-9"},"Description"),(0,n.kt)("p",null,"Calculate natural log of ",(0,n.kt)("inlineCode",{parentName:"p"},"x"),". "),(0,n.kt)("h4",{id:"examples-8"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>ln(20.0)\nreal: 2.9957322736\nrascal>ln(42.0)\nreal: 3.7376696183\n")),(0,n.kt)("h2",{id:"util-Math-log"},"function log"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real log(num x, num base)"))),(0,n.kt)("h4",{id:"synopsis-13"},"Synopsis"),(0,n.kt)("p",null,"Calculate the log",(0,n.kt)("sub",null,"base")," of a numeric value."),(0,n.kt)("h4",{id:"description-10"},"Description"),(0,n.kt)("p",null,"Calculate log",(0,n.kt)("sub",null,"base")," of ",(0,n.kt)("inlineCode",{parentName:"p"},"x"),". "),(0,n.kt)("h4",{id:"examples-9"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>log(9.99999999, 10)\nreal: 0.999999999566\nrascal>log(10, 10)\nreal: 1.\nrascal>log(256.0, 2)\nreal: 7.99999999999\n")),(0,n.kt)("h2",{id:"util-Math-log10"},"function log10"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real log10(num x)"))),(0,n.kt)("h4",{id:"synopsis-14"},"Synopsis"),(0,n.kt)("p",null,"Compute the 10 based log(x)."),(0,n.kt)("h2",{id:"util-Math-log2"},"function log2"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real log2(num x)"))),(0,n.kt)("h4",{id:"synopsis-15"},"Synopsis"),(0,n.kt)("p",null,"Compute the 2 based log(x)."),(0,n.kt)("h2",{id:"util-Math-max"},"function max"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"&T <: num max(&T <: num N, &T <: num M)"))),(0,n.kt)("h4",{id:"synopsis-16"},"Synopsis"),(0,n.kt)("p",null,"Determine the largest of two numeric values."),(0,n.kt)("h4",{id:"description-11"},"Description"),(0,n.kt)("p",null,"The largest of two numbers. The type of the result is the same as the type of the largest argument."),(0,n.kt)("h4",{id:"examples-10"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>max(12, 13);\nint: 13\nrascal>max(12, 13.5);\nnum: 13.5\nrascal>max(12, 11.5);\nnum: 12\n")),(0,n.kt)("h2",{id:"util-Math-min"},"function min"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"&T <: num min(&T <: num N, &T <: num M)"))),(0,n.kt)("h4",{id:"synopsis-17"},"Synopsis"),(0,n.kt)("p",null,"Determine the smallest of two numeric values."),(0,n.kt)("h4",{id:"description-12"},"Description"),(0,n.kt)("p",null,"The smallest of two numbers. The type of the result is the same as the type of the smallest argument."),(0,n.kt)("h4",{id:"examples-11"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>min(12, 13);\nint: 12\nrascal>min(12, -13);\nint: -13\nrascal>min(3.14, 4);\nnum: 3.14\n")),(0,n.kt)("h2",{id:"util-Math-numerator"},"function numerator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int numerator(rat n)"))),(0,n.kt)("h4",{id:"synopsis-18"},"Synopsis"),(0,n.kt)("p",null,"Return the numerator of a rational value."),(0,n.kt)("h2",{id:"util-Math-nroot"},"function nroot"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real nroot(num x, int n)"))),(0,n.kt)("h4",{id:"synopsis-19"},"Synopsis"),(0,n.kt)("p",null,"Calculate the n",(0,n.kt)("sup",null,"th")," root of a numeric value."),(0,n.kt)("h4",{id:"description-13"},"Description"),(0,n.kt)("p",null,"Calculate ",(0,n.kt)("sup",null,"n"),"\u221a",(0,n.kt)("inlineCode",{parentName:"p"},"x")," where ",(0,n.kt)("inlineCode",{parentName:"p"},"n")," can only be a integer."),(0,n.kt)("h4",{id:"examples-12"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>nroot(42 * 42, 2);\nreal: 42.0000000000\nrascal>nroot(42 * 42 * 42, 3);\nreal: 42.0000000000\nrascal>nroot(123456789012345678901234567890123456789.0, 100)\nreal: 2.4038930938\n")),(0,n.kt)("h2",{id:"util-Math-PI"},"function PI"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real PI()"))),(0,n.kt)("h4",{id:"synopsis-20"},"Synopsis"),(0,n.kt)("p",null,"The constant pi."),(0,n.kt)("h4",{id:"examples-13"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>PI();\nreal: 3.1415926536\n")),(0,n.kt)("h2",{id:"util-Math-pow"},"function pow"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real pow(num x, int y)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real pow(num x, real y)"))),(0,n.kt)("h4",{id:"synopsis-21"},"Synopsis"),(0,n.kt)("p",null,"Calculate an arbitrary power of a numeric value."),(0,n.kt)("h4",{id:"description-14"},"Description"),(0,n.kt)("p",null,"The calculate ",(0,n.kt)("inlineCode",{parentName:"p"},"x"),(0,n.kt)("sup",null,(0,n.kt)("inlineCode",{parentName:"p"},"y"))," where ",(0,n.kt)("inlineCode",{parentName:"p"},"y")," can only be a integer."),(0,n.kt)("h4",{id:"examples-14"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>pow(sqrt(42), 2)\nreal: 41.99999999989811976256\nrascal>pow(12345678901234567890.0, 1000)\nreal: 327323519862176629730082067574716643439462300540185122220961832511288805718030910484304325108222843885957688250811158315340566475836232001571619541935415038796348602192296984423155079801992333140052863080750492018420590783574245411031311510942905796189450351912614510641741094491709589411239576756065619918176653289948094430880732479266853021246187981170634861333302200580872985856560855518977488511675544145006801675791138351985746678734387422142342185164278661836498313416561398901718399810114596984172777042303963800096899625199810241300878005585014082782334502894938457546968837522885101157892509894692459561354313786780532679517827353604060468681961209174542267424246240853816845886755294209996435433895294269712878992262721644106226890031664370462222706979715904672586297266460593551184450504665032451235999357222433465060299295477020462819514888057483551478759508444976793225466736775132290553092049866427876353526626065630474037490603570383940996843823967040247622022658439400707006053650592894261198654836654639504753542843560398908885522596433160079097075880850067383018892541529465995345763588872837837593907229770700976597566733884202506653739605059379401347861288230399126563406134764726379055786459406660737522798066830604288612726394086519909309338994703718119693639450620275447776806553594104597194048560725083279242120977189767528195495335507571774589656293544257012451347889004221446663952536972136269481724663158860532924322053397767933001924701437115740854657082984585991651836842229921223742828990473127280082431920682100750955123993671834387994643422520721282979578784909325571258649149109201827243509225859052305726449746668735118920743230654106301983770403775061147939915240771494456634249374454345250552415101593382958143513116801567849013973694567642919070533812941570184136127617255991655186770210261385873186409485713856293174509996217914589400976889855958713421577335212662218393411619879901532201876563269347123972872344497080886637930441651259141049569049804413000150297629676129305940405487092640315363913091042956266173352666027423873096773031569220441623779694026871629405544513139993091183726122490006827751752741076885620415211542317496941956676394754879276979814511653516542017832996653484412313736356363305261532812972679430377759838879013873699720739033015759349473652785594888893377041014822677972342113818352300626995374712448170130314174419289739529982021437898597025566184922042135782017301373340541840251886826793222171028600662975155228812797443522045892690780164900156894217461209188361915847649443941189447229439906721259825215932223371314915787322490148065038149065584317884221248098894972346389635965334847844894296983317214252456367600733903894880305858451738209033898028888738089429510748290579293786966511702526421636839023818144487303883796157019333481281590182592242664434310787411848124503254182702718762286778744163663752419726010543539695902378784425822053579035604233167402979429162902604120869094779466506794967733027126798330733504515320709935121379216936936503517150761677018393050209847312382660928887004146016965681452309940614395990071269237730777211494402285973401134347314396249658064535813498390390228707068969712346028221844247394911352355219205653068923998044169246696199205931532280062594043451189765555574643899576685276356280338555983266720699445887933479778575910620051014501087647914152552526207935492180262761720164698382158135451840846941977075240573647713026577508324564964050461276723248623764128711424186543354565805827986611623687766424190141159982065651733888853975873295262987666051724164426176971670664220786382312628833993735024432664073367706606256513404081195840674289520710497921821809284330939220609778362882454615392304832328664341446921914422579024146155571399642339764786384745922769575752043854715925941119782659099976703423673050490970007943369522561413084390356583974592565338819090682096052094155857739238468257491510074355659857818999361006574913097067978865657382215313176814231120597124842183478696513677197512045290255088756641096724459645973492430801864900314570449211289319281689687528990384602371132230192221449626569380251208...\n")),(0,n.kt)("h2",{id:"util-Math-precision"},"function precision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int precision(num x)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real precision(num x, int p)"))),(0,n.kt)("h4",{id:"synopsis-22"},"Synopsis"),(0,n.kt)("p",null,"Return the precision of a real number."),(0,n.kt)("h2",{id:"util-Math-setPrecision"},"function setPrecision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int setPrecision(int p)"))),(0,n.kt)("h4",{id:"synopsis-23"},"Synopsis"),(0,n.kt)("p",null,"Define the precision for numeric calculations; returns the previous precision."),(0,n.kt)("h2",{id:"util-Math-scale"},"function scale"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int scale(num x)"))),(0,n.kt)("h4",{id:"synopsis-24"},"Synopsis"),(0,n.kt)("p",null,"Return the scale of a real number."),(0,n.kt)("h2",{id:"util-Math-unscaled"},"function unscaled"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int unscaled(real x)"))),(0,n.kt)("h4",{id:"synopsis-25"},"Synopsis"),(0,n.kt)("p",null,"Return the unscaled integer of a real."),(0,n.kt)("h2",{id:"util-Math-remainder"},"function remainder"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int remainder(rat n)"))),(0,n.kt)("h4",{id:"synopsis-26"},"Synopsis"),(0,n.kt)("p",null,"Return the remainder of dividing the numerator by the denominator."),(0,n.kt)("h2",{id:"util-Math-round"},"function round"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int round(num d)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"(&T <: num) round(&T <: num r, &T <: num nearest)"))),(0,n.kt)("h4",{id:"synopsis-27"},"Synopsis"),(0,n.kt)("p",null,"Round a number to the nearest multiple of a given number (default 1)."),(0,n.kt)("h4",{id:"examples-15"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>round(3.4);\nint: 3\nrascal>round(3.5);\nint: 4\nrascal>round(3.6);\nint: 4\nrascal>round(-3.4);\nint: -3\nrascal>round(-3.5);\nint: -4\nrascal>round(-3.6);\nint: -4\nrascal>round(13, 5);\nint: 15\nrascal>round(1.5,0.2);\nreal: 1.6\nrascal>round(3r2,1r4);\nrat: 3r2\n")),(0,n.kt)("h2",{id:"util-Math-fitFloat"},"function fitFloat"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real fitFloat(real r) throws ArithmeticException"))),(0,n.kt)("p",null,".Synopsis push real value into a float using coercion and return the value represented by that float as a real"),(0,n.kt)("h4",{id:"description-15"},"Description"),(0,n.kt)("p",null,"The function fitFloat converts the unlimited precision real into a JVM float value."),(0,n.kt)("h4",{id:"benefits-1"},"Benefits"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This function comes in handy in combination with random real test values which have to\ngo through coercion in a Java library, like so:\n",(0,n.kt)("inlineCode",{parentName:"li"},"bool test myTest(real r, real j) = fitFloat(r) + fitFloat(j) == fitFloat(r) + fitFloat(j);"))),(0,n.kt)("h4",{id:"pitfalls"},"Pitfalls"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If the real is smaller than the minimum float value or larger than the maximum float\nvalue, this function will throw an ArithmeticException.\n")),(0,n.kt)("h2",{id:"util-Math-fitDouble"},"function fitDouble"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real fitDouble(real r) throws ArithmeticException"))),(0,n.kt)("p",null,".Synopsis push real value into a JVM double using coercion and return the value represented by that float as a real"),(0,n.kt)("h4",{id:"description-16"},"Description"),(0,n.kt)("p",null,"The function fitDouble converts the unlimited precision real into a JVM double value."),(0,n.kt)("h4",{id:"benefits-2"},"Benefits"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This function comes in handy in combination with random real test values which have to\ngo through coercion in a Java library, like so:\n",(0,n.kt)("inlineCode",{parentName:"li"},"bool test myTest(real r, real j) = fitDouble(r) + fitDouble(j) == fitDouble(r) + fitDouble(j);"))),(0,n.kt)("h4",{id:"pitfalls-1"},"Pitfalls"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If the real is smaller than the minimum double value or larger than the maximum double\nvalue, this function will throw an ArithmeticException.")),(0,n.kt)("h2",{id:"util-Math-percent"},"function percent"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int percent(num part, num whole)"))),(0,n.kt)("h4",{id:"synopsis-28"},"Synopsis"),(0,n.kt)("p",null,"Compute the ratio between two numbers as a percentage."),(0,n.kt)("h4",{id:"examples-16"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>percent(1r4, 1);\nint: 25\nrascal>percent(13,250);\nint: 5\nrascal>percent(80.0,160.0);\nint: 50\n")),(0,n.kt)("h2",{id:"util-Math-sin"},"function sin"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real sin(num x)"))),(0,n.kt)("h4",{id:"synopsis-29"},"Synopsis"),(0,n.kt)("p",null,"Calculate the sine of a numeric value."),(0,n.kt)("h4",{id:"description-17"},"Description"),(0,n.kt)("p",null,"The sine of the number ",(0,n.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,n.kt)("h4",{id:"examples-17"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>sin(0)\nreal: 0.\nrascal>sin(PI() / 2)\nreal: 1.00000000000\n")),(0,n.kt)("h2",{id:"util-Math-sqrt"},"function sqrt"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real sqrt(num x)"))),(0,n.kt)("h4",{id:"synopsis-30"},"Synopsis"),(0,n.kt)("p",null,"Calculate the square root of a numeric value."),(0,n.kt)("h4",{id:"description-18"},"Description"),(0,n.kt)("p",null,"Calculate ","\u221a",(0,n.kt)("inlineCode",{parentName:"p"},"x"),". "),(0,n.kt)("h4",{id:"examples-18"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>sqrt(42 * 42);\nreal: 42.0000000000\nrascal>sqrt(12345678901234567890.5 * 12345678901234567890.5);\nreal: 12345678901234567890.5000000000\n")),(0,n.kt)("h2",{id:"util-Math-tan"},"function tan"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real tan(num x)"))),(0,n.kt)("h4",{id:"synopsis-31"},"Synopsis"),(0,n.kt)("p",null,"Calculate the tangent of a numeric value."),(0,n.kt)("h4",{id:"description-19"},"Description"),(0,n.kt)("p",null,"The tangent of the number ",(0,n.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,n.kt)("h4",{id:"examples-19"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>tan(45 * PI() / 180)\nreal: 1.0000000000\n")),(0,n.kt)("h2",{id:"util-Math-toInt"},"function toInt"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int toInt(num N)"))),(0,n.kt)("h4",{id:"synopsis-32"},"Synopsis"),(0,n.kt)("p",null,"Convert a numeric value to an integer."),(0,n.kt)("h4",{id:"description-20"},"Description"),(0,n.kt)("p",null,"Convert a number to an integer. If ",(0,n.kt)("inlineCode",{parentName:"p"},"n")," is an integer, this is the identity. If ",(0,n.kt)("inlineCode",{parentName:"p"},"n")," is a real value (implemented as BigDecimal) to an integer (implemented as BigInteger). This conversion is analogous to a narrowing primitive conversion from double to long as defined in the Java Language Specification: any fractional part of this BigDecimal will be discarded. Note that this conversion can loose information about the precision of the BigDecimal value."),(0,n.kt)("h4",{id:"examples-20"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>toInt(13)\nint: 13\nrascal>toInt(13.5)\nint: 13\n")),(0,n.kt)("h2",{id:"util-Math-toRat"},"function toRat"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rat toRat(int numerator, int denominator)"))),(0,n.kt)("h4",{id:"synopsis-33"},"Synopsis"),(0,n.kt)("p",null,"Convert two numbers to a rational value (not supported on reals)."),(0,n.kt)("h2",{id:"util-Math-toReal"},"function toReal"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"real toReal(num N)"))),(0,n.kt)("h4",{id:"synopsis-34"},"Synopsis"),(0,n.kt)("p",null,"Convert a numeric value to a real."),(0,n.kt)("h4",{id:"examples-21"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import util::Math;\nok\nrascal>toReal(12)\nreal: 12.\nrascal>toReal(3.14)\nreal: 3.14\n")),(0,n.kt)("h2",{id:"util-Math-toString"},"function toString"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str toString(num N)"))),(0,n.kt)("h4",{id:"synopsis-35"},"Synopsis"),(0,n.kt)("p",null,"Convert a numeric value to a string."),(0,n.kt)("h4",{id:"examples-22"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>import util::Math;\nok\nrascal>toString(12)\nstr: "12"\nrascal>toString(3.14)\nstr: "3.14"\n')),(0,n.kt)("h2",{id:"util-Math-primes"},"function primes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"list[int] primes(int upTo)"))),(0,n.kt)("h4",{id:"synopsis-36"},"Synopsis"),(0,n.kt)("p",null,"generate prime numbers up to a maximum"),(0,n.kt)("h2",{id:"util-Math-arbPrime"},"function arbPrime"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int arbPrime(int upTo)"))))}m.isMDXComponent=!0}}]);