"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[7214],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),m=i,y=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(y,a(a({ref:t},c),{},{components:r})):n.createElement(y,a({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},98909:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(83117),i=(r(67294),r(3905));const o={title:"NonVoidTypeRequired"},a=void 0,l={unversionedId:"CompileTimeErrors/NonVoidTypeRequired/index",id:"CompileTimeErrors/NonVoidTypeRequired/index",title:"NonVoidTypeRequired",description:"Synopsis",source:"@site/docs/CompileTimeErrors/NonVoidTypeRequired/index.md",sourceDirName:"CompileTimeErrors/NonVoidTypeRequired",slug:"/CompileTimeErrors/NonVoidTypeRequired/",permalink:"/docs/CompileTimeErrors/NonVoidTypeRequired/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/CompileTimeErrors/NonVoidTypeRequired/index.md",tags:[],version:"current",frontMatter:{title:"NonVoidTypeRequired"},sidebar:"tutorialSidebar",previous:{title:"NonAbstractJavaFunction",permalink:"/docs/CompileTimeErrors/NonAbstractJavaFunction/"},next:{title:"NonWellformedType",permalink:"/docs/CompileTimeErrors/NonWellformedType/"}},s={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Usage",id:"usage",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"A type other than ",(0,i.kt)("inlineCode",{parentName:"p"},"void")," is needed."),(0,i.kt)("h4",{id:"syntax"},"Syntax"),(0,i.kt)("h4",{id:"types"},"Types"),(0,i.kt)("h4",{id:"function"},"Function"),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"This error is generated when a value is needed, so an expression of any type but the ",(0,i.kt)("inlineCode",{parentName:"p"},"void")," type."),(0,i.kt)("p",null,"The most prominent examples are splicing for\n",(0,i.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/List/Splice"},"list")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Set/Splice"},"set"),"."),(0,i.kt)("p",null,"Remedy: replace the expression of type ",(0,i.kt)("inlineCode",{parentName:"p"},"void")," by an expression that computes a value."),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"First define a dummy function that returns void:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>void dummy() { return; }\nvoid (): function(|prompt:///|(0,24,<1,0>,<1,24>))\nrascal>[1, *dummy(), 2]\n|prompt:///|(4,8,<1,4>,<1,12>): Non-void type required\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/NonVoidTypeRequired/NonVoidTypeRequired.html|\nok\nrascal>{1, *dummy(), 2}\n|prompt:///|(5,7,<1,5>,<1,12>): Non-void type required\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/NonVoidTypeRequired/NonVoidTypeRequired.html|\nok\n")),(0,i.kt)("p",null,"A solution could be:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>int dummy() { return 17; }\nint (): function(|prompt:///|(0,26,<1,0>,<1,26>))\nrascal>[1, *dummy(), 2]\nlist[int]: [1,17,2]\nrascal>{1, *dummy(), 2}\nset[int]: {1,2,17}\n")),(0,i.kt)("h4",{id:"benefits"},"Benefits"))}d.isMDXComponent=!0}}]);