"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[34888],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(a),k=l,c=u["".concat(s,".").concat(k)]||u[k]||d[k]||i;return a?n.createElement(c,r(r({ref:t},m),{},{components:a})):n.createElement(c,r({ref:t},m))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},86e3:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(83117),l=(a(67294),a(3905));const i={title:"DateTime",keywords:["$","date","datetime","time"]},r=void 0,o={unversionedId:"Rascal/Expressions/Values/DateTime/index",id:"Rascal/Expressions/Values/DateTime/index",title:"DateTime",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Values/DateTime/index.md",sourceDirName:"Rascal/Expressions/Values/DateTime",slug:"/Rascal/Expressions/Values/DateTime/",permalink:"/docs/Rascal/Expressions/Values/DateTime/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascal/Expressions/Values/DateTime/index.md",tags:[],version:"current",frontMatter:{title:"DateTime",keywords:["$","date","datetime","time"]},sidebar:"tutorialSidebar",previous:{title:"Constructor",permalink:"/docs/Rascal/Expressions/Values/Constructor/"},next:{title:"DateTime Equal",permalink:"/docs/Rascal/Expressions/Values/DateTime/Equal/"}},s={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Pitfalls",id:"pitfalls",level:4}],m={toc:p};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,"Date and time values."),(0,l.kt)("h4",{id:"syntax"},"Syntax"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$")," ",(0,l.kt)("inlineCode",{parentName:"li"},"Date")," ",(0,l.kt)("inlineCode",{parentName:"li"},"$")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$")," ",(0,l.kt)("inlineCode",{parentName:"li"},"Time")," ",(0,l.kt)("inlineCode",{parentName:"li"},"$")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"$")," ",(0,l.kt)("inlineCode",{parentName:"li"},"DateTime")," ",(0,l.kt)("inlineCode",{parentName:"li"},"$"))),(0,l.kt)("h4",{id:"types"},"Types"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"datetime")),(0,l.kt)("h4",{id:"description"},"Description"),(0,l.kt)("p",null,"Date, time, and datetime values are represented by the ",(0,l.kt)("inlineCode",{parentName:"p"},"datetime")," type.\n",(0,l.kt)("inlineCode",{parentName:"p"},"datetime")," literals start with a ",(0,l.kt)("inlineCode",{parentName:"p"},"$")," and are made up of either a date, given in year, month, day of month order;\na time, preceded by ",(0,l.kt)("inlineCode",{parentName:"p"},"T")," and given in hour, minute, second, millisecond, (optional) timezone offset order;\nor a datetime, which is a date and a time, in the orders given above, and separated by a ",(0,l.kt)("inlineCode",{parentName:"p"},"T"),". "),(0,l.kt)("p",null,"The following fields provide access to information about the value, but cannot be set:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isDate"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," if the value is a date value, ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," if the value is a\ndatetime or time value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isTime"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," if the value is a time value, ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," if the value is a\ndate or datetime value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isDateTime"),": returns ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," if the value is a datetime value, ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," if the value is a\ndate or time value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justTime"),": returns the date component of a date or datetime value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"justDate"),": returns the time component of a time or datetime value."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"century"),": returns the century component of a year for date or datetime values.")),(0,l.kt)("p",null,"The following fields provide access to the individual components of date, time and datetime values,\nand can be accessed using ",(0,l.kt)("a",{parentName:"p",href:"../../../../Rascal/Expressions/Values/DateTime/FieldSelection"},"FieldSelection")," and be assigned using ",(0,l.kt)("a",{parentName:"p",href:"../../../../Rascal/Expressions/Values/DateTime/FieldSelection"},"FieldSelection"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"year")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"month")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"day")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hour")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"minute")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"second")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"millisecond")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezoneOffsetHours")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timezoneOffsetMinutes"))),(0,l.kt)("p",null,"Not all fields are available on all values as indicated by the following table:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"date")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"datetime")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"time")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"year")),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"month")),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"day")),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hour")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"minute")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"second")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"millisecond")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"timezoneOffsetHours")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"timezoneOffsetMinutes")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"x"),(0,l.kt)("td",{parentName:"tr",align:null},"x")))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"isDate"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"isTime"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"isDateTime")," fields can be checked in advance to determine what\nkind of value is stored in a variable of type ",(0,l.kt)("inlineCode",{parentName:"p"},"datetime"),"."),(0,l.kt)("p",null,"The following operators are defined for DateTime:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime"},"DateTime")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/Equal"},"Equal")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/FieldSelection"},"FieldSelection")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/GreaterThan"},"GreaterThan")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/GreaterThanOrEqual"},"GreaterThanOrEqual")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/LessThan"},"LessThan")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/LessThanOrEqual"},"LessThanOrEqual")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../../../Rascal/Expressions/Values/DateTime/NotEqual"},"NotEqual"))),(0,l.kt)("p",null,"The following functions are defined for DateTime:\nloctoc::","[Rascal/Libraries/Prelude/DateTime,1]"),(0,l.kt)("p",null,"There are also ",(0,l.kt)("a",{parentName:"p",href:"/docs/Library/DateTime"},"library functions")," available for DateTime."),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("p",null,"Examples of ",(0,l.kt)("inlineCode",{parentName:"p"},"datetime")," values are:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>$2010-07-15$\ndatetime: $2010-07-15$\nrascal>$2010-07-15T07:15:23.123+0100$;\ndatetime: $2010-07-15T07:15:23.123+01:00$\n")),(0,l.kt)("p",null,"Now introduce a ",(0,l.kt)("inlineCode",{parentName:"p"},"datetime")," value and assign it to ",(0,l.kt)("inlineCode",{parentName:"p"},"DT"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>DT = $2010-07-15T09:15:23.123+03:00$;\ndatetime: $2010-07-15T09:15:23.123+03:00$\n")),(0,l.kt)("p",null,"Here are examples of some ",(0,l.kt)("inlineCode",{parentName:"p"},"datatime")," fields:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>DT.isDateTime;\nbool: true\nrascal>DT.justDate;\ndatetime: $2010-07-15$\nrascal>DT.justTime;\ndatetime: $T09:15:23.123+03:00$\nrascal>DT.century;\nint: 20\n")),(0,l.kt)("h4",{id:"pitfalls"},"Pitfalls"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In normal parlance, the year 2010 is in the 21th century. The ",(0,l.kt)("inlineCode",{parentName:"li"},"century")," field, however, just returns the century component of a given year, e.g., for 2010 this is 20."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DT.justTime")," prints a time literal that currently can not be parsed back into a value to due to issue #1443.")))}d.isMDXComponent=!0}}]);