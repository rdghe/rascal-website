"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[66938],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return a?n.createElement(f,s(s({ref:t},p),{},{components:a})):n.createElement(f,s({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},57039:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const i={title:"Rascal Concepts",sidebar_position:5,details:["RascalConcepts:RascalConcepts-StaticTyping","Datatypes","ImmutableValues","Enumerating","RascalConcepts-Comprehensions","PatternMatching","ControlStructures","CaseDistinction","Visiting","Functions","SyntaxDefinitionAndParsing","Rewriting","IDEConstruction","CodeModels","EquationSolving"]},s=void 0,o={unversionedId:"RascalConcepts/index",id:"RascalConcepts/index",title:"Rascal Concepts",description:"Synopsis",source:"@site/docs/RascalConcepts/index.md",sourceDirName:"RascalConcepts",slug:"/RascalConcepts/",permalink:"/docs/RascalConcepts/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/RascalConcepts/index.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Rascal Concepts",sidebar_position:5,details:["RascalConcepts:RascalConcepts-StaticTyping","Datatypes","ImmutableValues","Enumerating","RascalConcepts-Comprehensions","PatternMatching","ControlStructures","CaseDistinction","Visiting","Functions","SyntaxDefinitionAndParsing","Rewriting","IDEConstruction","CodeModels","EquationSolving"]},sidebar:"tutorialSidebar",previous:{title:"Measuring Methods",permalink:"/docs/Recipes/Metrics/MeasuringJava/MeasuringMethods/"},next:{title:"Case Distinction",permalink:"/docs/RascalConcepts/CaseDistinction/"}},l={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Gentle introduction to the main concepts of the Rascal language."),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Rascal is based on a dozen concepts and having a global understanding of them will help to grasp the language more quickly.\nHere we will informally explain and illustrate these concepts and often we will refer to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/"},"Rascal Language Reference")," for further details. In other words, we are providing here a friendly front-end for the actual language description."),(0,r.kt)("p",null,"Most language concepts are described separately but some features we just mention here:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Rascal programs consist of modules that are organized in packages."),(0,r.kt)("li",{parentName:"ul"},"Modules can import other modules."),(0,r.kt)("li",{parentName:"ul"},"The external visibility of entities declared in modules can be controlled using public/private modifiers."),(0,r.kt)("li",{parentName:"ul"},"Data structures may have additional keyword fields that can be explicitly used and modified."),(0,r.kt)("li",{parentName:"ul"},"There is an extensive library for built-in datatypes, input/output, fact extraction from Java source code, visualization, and more.")),(0,r.kt)("p",null,"Here are the concepts to be discussed:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/StaticTyping/"},"StaticTyping")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/Datatypes/"},"Datatypes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/ImmutableValues/"},"immutable values")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/Enumerating/"},"Enumerating")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/Comprehensions/"},"Comprehensions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/PatternMatching/"},"pattern matching")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/ControlStructures/"},"control structures")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/CaseDistinction/"},"case distinction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/Visiting/"},"Visiting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/Functions/"},"Functions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/SyntaxDefinitionAndParsing/"},"syntax definition and parsing")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/Rewriting/"},"Rewriting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/IDEConstruction/"},"IDEConstruction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/CodeModels/"},"code models")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/RascalConcepts/EquationSolving/"},"equation solving"))))}u.isMDXComponent=!0}}]);