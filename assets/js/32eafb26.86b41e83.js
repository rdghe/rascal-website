"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[91107],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},57028:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Field Projection",keywords:["<",">"]},i=void 0,l={unversionedId:"Rascal/Expressions/Operators/FieldProjection/index",id:"Rascal/Expressions/Operators/FieldProjection/index",title:"Field Projection",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Operators/FieldProjection/index.md",sourceDirName:"Rascal/Expressions/Operators/FieldProjection",slug:"/Rascal/Expressions/Operators/FieldProjection/",permalink:"/docs/Rascal/Expressions/Operators/FieldProjection/",draft:!1,tags:[],version:"current",frontMatter:{title:"Field Projection",keywords:["<",">"]},sidebar:"tutorialSidebar",previous:{title:"Field Assignment",permalink:"/docs/Rascal/Expressions/Operators/FieldAssignment/"},next:{title:"Reducer",permalink:"/docs/Rascal/Expressions/Reducer/"}},s={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Projection of tuple."),(0,a.kt)("h4",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Exp < Field\u2081, Field\u2082 ... >")),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Exp")," should evaluate to a tuple or relation, and ",(0,a.kt)("em",{parentName:"p"},"Field"),"\u1d62 should be a field name or an integer constant\nthat refers to elements in the order in which they occur in the original value (counting from 0). "),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Suppose we have a relation with traffic information that records the name of the day, the day number, and the length of the traffic jams at that day."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>rel[str day, int daynum, int length] Traffic = \n>>>>>>>{<"mon", 1, 100>, <"tue", 2, 150>, <"wed", 3, 125>, \n>>>>>>> <"thur", 4, 110>, <"fri", 5, 90>};\nrel[str day,int daynum,int length]: {\n  <"thur",4,110>,\n  <"mon",1,100>,\n  <"fri",5,90>,\n  <"wed",3,125>,\n  <"tue",2,150>\n}\nrascal>Traffic<length,daynum>;\nrel[int length,int daynum]: {\n  <110,4>,\n  <125,3>,\n  <90,5>,\n  <150,2>,\n  <100,1>\n}\nrascal>Traffic<2,day>;\nrel[int length,str day]: {\n  <110,"thur">,\n  <125,"wed">,\n  <90,"fri">,\n  <150,"tue">,\n  <100,"mon">\n}\n')),(0,a.kt)("p",null,"Field projection thus selects parts from a larger value that has a fixed number of parts. The selection is based on position and not on value and can be used to completely reorder or remove the parts of a larger value."))}d.isMDXComponent=!0}}]);