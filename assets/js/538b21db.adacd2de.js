"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[36446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81423:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(83117),a=(n(67294),n(3905));const o={title:"For",keywords:["for"]},s=void 0,i={unversionedId:"Rascal/Statements/For/index",id:"Rascal/Statements/For/index",title:"For",description:"Synopsis",source:"@site/docs/Rascal/Statements/For/index.md",sourceDirName:"Rascal/Statements/For",slug:"/Rascal/Statements/For/",permalink:"/docs/Rascal/Statements/For/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascal/Statements/For/index.md",tags:[],version:"current",frontMatter:{title:"For",keywords:["for"]},sidebar:"tutorialSidebar",previous:{title:"Fail",permalink:"/docs/Rascal/Statements/Fail/"},next:{title:"If",permalink:"/docs/Rascal/Statements/If/"}},l={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"For loop."),(0,a.kt)("h4",{id:"syntax"},"Syntax"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"for ( Exp<sub>1</sub> , Exp<sub>2</sub> , ... , Exp~n~ ) Statement;")),(0,a.kt)("h4",{id:"types"},"Types"),(0,a.kt)("h4",{id:"function"},"Function"),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The for-statement executes ",(0,a.kt)("em",{parentName:"p"},"Statement")," for all possible combinations of values generated, and filtered, by the expressions ",(0,a.kt)("em",{parentName:"p"},"Exp"),"~i~."),(0,a.kt)("p",null,"Some of the expressions can generate bindings (",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Comprehensions/Enumerator"},"Enumerator"),", <<Values,Boolean,Match>>), and some can filter them (",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values"},"Values"),").\nThe for loop will iterate over the cartesian product of all the generating expressions, and filter the combinations which fail the conditional expressions. "),(0,a.kt)("p",null,"By default, the value of a for statement is the empty list. In general,\nthe value of a for statement consists of all values contributed by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Append"},"Append")," statements that are executed during the repeated execution of its body Statement."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>import IO;\nok\nrascal>for(int n <- [1 .. 5]) println("n = <n>");\nfor(int n <- [1 .. 5]) println("n = <n>");\nn = 1\nn = 2\nn = 3\nn = 4\nlist[void]: []\nrascal>for(int n <- [1 .. 5]) append n * n;\nlist[int]: [1,4,9,16]\n')),(0,a.kt)("h4",{id:"benefits"},"Benefits"))}u.isMDXComponent=!0}}]);