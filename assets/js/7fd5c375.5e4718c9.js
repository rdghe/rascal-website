"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[39371],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),y=c(n),f=a,m=y["".concat(l,".").concat(f)]||y[f]||u[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},59323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(83117),a=(n(67294),n(3905));const i={title:"Reserve Declaration",keywords:["\\"]},o=void 0,s={unversionedId:"Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/index",id:"Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/index",title:"Reserve Declaration",description:"Synopsis",source:"@site/docs/Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/index.md",sourceDirName:"Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve",slug:"/Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/",permalink:"/docs/Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascal/Declarations/SyntaxDefinition/Disambiguation/Reserve/index.md",tags:[],version:"current",frontMatter:{title:"Reserve Declaration",keywords:["\\\\"]},sidebar:"tutorialSidebar",previous:{title:"Priority Declaration",permalink:"/docs/Rascal/Declarations/SyntaxDefinition/Disambiguation/Priority/"},next:{title:"Parse Trees",permalink:"/docs/Rascal/Declarations/SyntaxDefinition/ParseTrees/"}},l={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Reserve is a conditional ",(0,a.kt)("a",{parentName:"p",href:"../../../../../Rascal/Declarations/SyntaxDefinition/Symbol"},"./Symbol"),", constraining the set of strings that a symbol may produce."),(0,a.kt)("h4",{id:"syntax"},"Syntax"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Symbol \\ constraint"))),(0,a.kt)("p",null,"where a ",(0,a.kt)("em",{parentName:"p"},"constraint")," is any character class, a literal or a keyword non-terminal ",(0,a.kt)("a",{parentName:"p",href:"../../../../../Rascal/Declarations/SyntaxDefinition/Symbol"},"./Symbol"),"."))}u.isMDXComponent=!0}}]);