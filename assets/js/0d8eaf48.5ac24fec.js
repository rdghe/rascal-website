"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[95955],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var i=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=i.createContext({}),l=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),f=a,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||n;return r?i.createElement(m,o(o({ref:t},p),{},{components:r})):i.createElement(m,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,o=new Array(n);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<n;l++)o[l]=r[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5433:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var i=r(83117),a=(r(67294),r(3905));const n={title:"Software Metric"},o=void 0,c={unversionedId:"Rascalopedia/SoftwareMetric/index",id:"Rascalopedia/SoftwareMetric/index",title:"Software Metric",description:"Synopsis",source:"@site/docs/Rascalopedia/SoftwareMetric/index.md",sourceDirName:"Rascalopedia/SoftwareMetric",slug:"/Rascalopedia/SoftwareMetric/",permalink:"/docs/Rascalopedia/SoftwareMetric/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascalopedia/SoftwareMetric/index.md",tags:[],version:"current",frontMatter:{title:"Software Metric"},sidebar:"tutorialSidebar",previous:{title:"Software Evolution",permalink:"/docs/Rascalopedia/SoftwareEvolution/"},next:{title:"Static Semantics",permalink:"/docs/Rascalopedia/StaticSemantics/"}},s={},l=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Usage",id:"usage",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"A metric to measure a source code property."),(0,a.kt)("h4",{id:"syntax"},"Syntax"),(0,a.kt)("h4",{id:"types"},"Types"),(0,a.kt)("h4",{id:"function"},"Function"),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"A software metric is a quantitative measure about source code.\nA combination of one or more metrics can be used to quantitatively characterize\naspects of ",(0,a.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Software_quality"},"software quality"),".\nVarious quality aspects are of interest such as size, reliability, maintainability and so on."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Examples of software metrics are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Source lines of code (",(0,a.kt)("a",{parentName:"li",href:"http://en.wikipedia.org/wiki/Source_lines_of_code"},"SLOC"),") measures the size of software.\nThe larger the size, the more is needed to build and maintain it."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://en.wikipedia.org/wiki/Cyclomatic_complexity"},"Cyclomatic complexity")," measures logical complexity of code.\nSoftware components with a high cyclomatic complexity are hard to understand and maintain."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://en.wikipedia.org/wiki/Coupling_(computer_science)%5BCoupling%5D"},"http://en.wikipedia.org/wiki/Coupling_(computer_science)[Coupling]")," measures the coupling between software components.\nHigh coupling indicates problems in the structure of a system.")),(0,a.kt)("h4",{id:"benefits"},"Benefits"))}u.isMDXComponent=!0}}]);