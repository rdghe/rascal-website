"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[34141],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Node pattern"},l=void 0,s={unversionedId:"Rascal/Patterns/Node/index",id:"Rascal/Patterns/Node/index",title:"Node pattern",description:"Synopsis",source:"@site/docs/Rascal/Patterns/Node/index.md",sourceDirName:"Rascal/Patterns/Node",slug:"/Rascal/Patterns/Node/",permalink:"/docs/Rascal/Patterns/Node/",draft:!1,tags:[],version:"current",frontMatter:{title:"Node pattern"},sidebar:"tutorialSidebar",previous:{title:"MultiVariable Pattern",permalink:"/docs/Rascal/Patterns/MultiVariable/"},next:{title:"Regular Expression Pattern",permalink:"/docs/Rascal/Patterns/Regular/"}},i={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Node in abstract pattern."),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"A node pattern matches a node value or a datatype value, provided that ",(0,a.kt)("em",{parentName:"p"},"Name")," matches with the constructor symbol of that value\nand ",(0,a.kt)("em",{parentName:"p"},"Pat"),"\u2081, ",(0,a.kt)("em",{parentName:"p"},"Pat"),"\u2082, ..., ",(0,a.kt)("em",{parentName:"p"},"Pat"),"\u2099  match the children of that value in order."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"")),(0,a.kt)("p",null,"Match on node values (recall that the function symbol of a node has to be quoted, see ","[Values/Node]","):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},'rascal>import IO;\nok\nrascal>if("f"(A,13,B) := "f"("abc", 13, false))\n>>>>>>>   println("A = <A>, B = <B>");\nA = abc, B = false\nok\n')),(0,a.kt)("p",null,"Define a data type and use it to match:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},'rascal>data Color = red(int N) | black(int N);\nok\nrascal>if(red(K) := red(13))\n>>>>>>>   println("K = <K>");\nK = 13\nok\n')))}u.isMDXComponent=!0}}]);