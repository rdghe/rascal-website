"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[40205],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>k});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function s(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var c=n.createContext({}),r=function(t){var e=n.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):s(s({},e),t)),a},u=function(t){var e=r(t.components);return n.createElement(c.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,i=t.originalType,c=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),g=r(a),k=l,b=g["".concat(c,".").concat(k)]||g[k]||d[k]||i;return a?n.createElement(b,s(s({ref:e},u),{},{components:a})):n.createElement(b,s({ref:e},u))}));function k(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=a.length,s=new Array(i);s[0]=g;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:l,s[1]=o;for(var r=2;r<i;r++)s[r]=a[r];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},89249:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>r});var n=a(87462),l=(a(67294),a(3905));const i={title:"module lang::rascal::tests::basic::Locations"},s=void 0,o={unversionedId:"Library/lang/rascal/tests/basic/Locations",id:"Library/lang/rascal/tests/basic/Locations",title:"module lang::rascal::tests::basic::Locations",description:"Usage",source:"@site/docs/Library/lang/rascal/tests/basic/Locations.md",sourceDirName:"Library/lang/rascal/tests/basic",slug:"/Library/lang/rascal/tests/basic/Locations",permalink:"/docs/Library/lang/rascal/tests/basic/Locations",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/lang/rascal/tests/basic/Locations.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::tests::basic::Locations"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::tests::basic::Lists",permalink:"/docs/Library/lang/rascal/tests/basic/Lists"},next:{title:"module lang::rascal::tests::basic::Maps",permalink:"/docs/Library/lang/rascal/tests/basic/Maps"}},c={},r=[{value:"Usage",id:"usage",level:4},{value:"function singleChar",id:"lang-rascal-tests-basic-Locations-singleChar",level:2},{value:"function makeValidSchemeChars",id:"lang-rascal-tests-basic-Locations-makeValidSchemeChars",level:2},{value:"function createValidScheme",id:"lang-rascal-tests-basic-Locations-createValidScheme",level:2},{value:"function noOpaqueURI2",id:"lang-rascal-tests-basic-Locations-noOpaqueURI2",level:2},{value:"function canChangeScheme1",id:"lang-rascal-tests-basic-Locations-canChangeScheme1",level:2},{value:"function canChangeScheme2",id:"lang-rascal-tests-basic-Locations-canChangeScheme2",level:2},{value:"function canChangeAuthority1",id:"lang-rascal-tests-basic-Locations-canChangeAuthority1",level:2},{value:"function canChangeAuthority2",id:"lang-rascal-tests-basic-Locations-canChangeAuthority2",level:2},{value:"function fixPath",id:"lang-rascal-tests-basic-Locations-fixPath",level:2},{value:"function canChangePath1",id:"lang-rascal-tests-basic-Locations-canChangePath1",level:2},{value:"function canChangePath2",id:"lang-rascal-tests-basic-Locations-canChangePath2",level:2},{value:"function canChangeQuery1",id:"lang-rascal-tests-basic-Locations-canChangeQuery1",level:2},{value:"function canChangeQuery2",id:"lang-rascal-tests-basic-Locations-canChangeQuery2",level:2},{value:"function canChangeFragment1",id:"lang-rascal-tests-basic-Locations-canChangeFragment1",level:2},{value:"function canChangeFragment2",id:"lang-rascal-tests-basic-Locations-canChangeFragment2",level:2},{value:"function createValidHost",id:"lang-rascal-tests-basic-Locations-createValidHost",level:2},{value:"function canChangeHost1",id:"lang-rascal-tests-basic-Locations-canChangeHost1",level:2},{value:"function canChangeHost2",id:"lang-rascal-tests-basic-Locations-canChangeHost2",level:2},{value:"function canChangeUser1",id:"lang-rascal-tests-basic-Locations-canChangeUser1",level:2},{value:"function canChangeUser2",id:"lang-rascal-tests-basic-Locations-canChangeUser2",level:2},{value:"function validURIAuthority",id:"lang-rascal-tests-basic-Locations-validURIAuthority",level:2},{value:"function validURIPath",id:"lang-rascal-tests-basic-Locations-validURIPath",level:2},{value:"function validURIQuery",id:"lang-rascal-tests-basic-Locations-validURIQuery",level:2},{value:"function validURIFragment",id:"lang-rascal-tests-basic-Locations-validURIFragment",level:2},{value:"function fixPathAddition",id:"lang-rascal-tests-basic-Locations-fixPathAddition",level:2},{value:"function pathAdditions1",id:"lang-rascal-tests-basic-Locations-pathAdditions1",level:2},{value:"function pathAdditions2",id:"lang-rascal-tests-basic-Locations-pathAdditions2",level:2},{value:"function testParent",id:"lang-rascal-tests-basic-Locations-testParent",level:2},{value:"function testWindowsParent",id:"lang-rascal-tests-basic-Locations-testWindowsParent",level:2},{value:"function testFile",id:"lang-rascal-tests-basic-Locations-testFile",level:2},{value:"function supportSquareBraces",id:"lang-rascal-tests-basic-Locations-supportSquareBraces",level:2},{value:"function noFile",id:"lang-rascal-tests-basic-Locations-noFile",level:2},{value:"function rootPath",id:"lang-rascal-tests-basic-Locations-rootPath",level:2},{value:"function rootPath3",id:"lang-rascal-tests-basic-Locations-rootPath3",level:2},{value:"function rootPath4",id:"lang-rascal-tests-basic-Locations-rootPath4",level:2},{value:"function top0",id:"lang-rascal-tests-basic-Locations-top0",level:2},{value:"function top1",id:"lang-rascal-tests-basic-Locations-top1",level:2},{value:"function top2",id:"lang-rascal-tests-basic-Locations-top2",level:2},{value:"function splicePathEncoded",id:"lang-rascal-tests-basic-Locations-splicePathEncoded",level:2},{value:"function spliceArbPathEncoded",id:"lang-rascal-tests-basic-Locations-spliceArbPathEncoded",level:2},{value:"function enclosingTest1",id:"lang-rascal-tests-basic-Locations-enclosingTest1",level:2},{value:"function enclosingTest2",id:"lang-rascal-tests-basic-Locations-enclosingTest2",level:2},{value:"function enclosingTest3",id:"lang-rascal-tests-basic-Locations-enclosingTest3",level:2},{value:"function enclosingTest4",id:"lang-rascal-tests-basic-Locations-enclosingTest4",level:2},{value:"function enclosingTest5",id:"lang-rascal-tests-basic-Locations-enclosingTest5",level:2},{value:"function enclosingTest6",id:"lang-rascal-tests-basic-Locations-enclosingTest6",level:2},{value:"function enclosingTest7",id:"lang-rascal-tests-basic-Locations-enclosingTest7",level:2},{value:"function enclosingTest8",id:"lang-rascal-tests-basic-Locations-enclosingTest8",level:2},{value:"function enclosingTest9",id:"lang-rascal-tests-basic-Locations-enclosingTest9",level:2},{value:"function offSetLengthEnclosing",id:"lang-rascal-tests-basic-Locations-offSetLengthEnclosing",level:2},{value:"function getLineAndColumn",id:"lang-rascal-tests-basic-Locations-getLineAndColumn",level:2},{value:"function buildLoc",id:"lang-rascal-tests-basic-Locations-buildLoc",level:2},{value:"function restrict",id:"lang-rascal-tests-basic-Locations-restrict",level:2},{value:"function getLoc",id:"lang-rascal-tests-basic-Locations-getLoc",level:2},{value:"function less1",id:"lang-rascal-tests-basic-Locations-less1",level:2},{value:"function less2",id:"lang-rascal-tests-basic-Locations-less2",level:2},{value:"function lessequal1",id:"lang-rascal-tests-basic-Locations-lessequal1",level:2},{value:"function lessequal2",id:"lang-rascal-tests-basic-Locations-lessequal2",level:2},{value:"function greater1",id:"lang-rascal-tests-basic-Locations-greater1",level:2},{value:"function greater2",id:"lang-rascal-tests-basic-Locations-greater2",level:2},{value:"function greaterequal1",id:"lang-rascal-tests-basic-Locations-greaterequal1",level:2},{value:"function greaterequal2",id:"lang-rascal-tests-basic-Locations-greaterequal2",level:2},{value:"function equal1",id:"lang-rascal-tests-basic-Locations-equal1",level:2},{value:"function equal2",id:"lang-rascal-tests-basic-Locations-equal2",level:2},{value:"function getLocs",id:"lang-rascal-tests-basic-Locations-getLocs",level:2},{value:"function locInSet",id:"lang-rascal-tests-basic-Locations-locInSet",level:2},{value:"function locInMap",id:"lang-rascal-tests-basic-Locations-locInMap",level:2},{value:"function locInRel",id:"lang-rascal-tests-basic-Locations-locInRel",level:2},{value:"function locInLRel",id:"lang-rascal-tests-basic-Locations-locInLRel",level:2},{value:"function makeLocsWithGap",id:"lang-rascal-tests-basic-Locations-makeLocsWithGap",level:2},{value:"function report",id:"lang-rascal-tests-basic-Locations-report",level:2},{value:"function isLexicallyLess1",id:"lang-rascal-tests-basic-Locations-isLexicallyLess1",level:2},{value:"function isSameFile1",id:"lang-rascal-tests-basic-Locations-isSameFile1",level:2},{value:"function isSameFile2",id:"lang-rascal-tests-basic-Locations-isSameFile2",level:2},{value:"function isSameFile3",id:"lang-rascal-tests-basic-Locations-isSameFile3",level:2},{value:"function isSameFile4",id:"lang-rascal-tests-basic-Locations-isSameFile4",level:2},{value:"function isSameFile5",id:"lang-rascal-tests-basic-Locations-isSameFile5",level:2},{value:"function isContainedIn1",id:"lang-rascal-tests-basic-Locations-isContainedIn1",level:2},{value:"function isContainedIn2",id:"lang-rascal-tests-basic-Locations-isContainedIn2",level:2},{value:"function beginsBefore1",id:"lang-rascal-tests-basic-Locations-beginsBefore1",level:2},{value:"function beginsBefore2",id:"lang-rascal-tests-basic-Locations-beginsBefore2",level:2},{value:"function isBefore1",id:"lang-rascal-tests-basic-Locations-isBefore1",level:2},{value:"function isBefore2",id:"lang-rascal-tests-basic-Locations-isBefore2",level:2},{value:"function isImmediatelyBefore1",id:"lang-rascal-tests-basic-Locations-isImmediatelyBefore1",level:2},{value:"function isImmediatelyBefore2",id:"lang-rascal-tests-basic-Locations-isImmediatelyBefore2",level:2},{value:"function beginsAfter1",id:"lang-rascal-tests-basic-Locations-beginsAfter1",level:2},{value:"function isAfter1",id:"lang-rascal-tests-basic-Locations-isAfter1",level:2},{value:"function isImmediatelyAfter1",id:"lang-rascal-tests-basic-Locations-isImmediatelyAfter1",level:2},{value:"function isOverlapping1",id:"lang-rascal-tests-basic-Locations-isOverlapping1",level:2},{value:"function isOverlapping2",id:"lang-rascal-tests-basic-Locations-isOverlapping2",level:2},{value:"function isCover1",id:"lang-rascal-tests-basic-Locations-isCover1",level:2},{value:"function isCover2",id:"lang-rascal-tests-basic-Locations-isCover2",level:2},{value:"function isCover3",id:"lang-rascal-tests-basic-Locations-isCover3",level:2}],u={toc:r};function d(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tests::basic::Locations;")),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-singleChar"},"function singleChar"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int singleChar(str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-makeValidSchemeChars"},"function makeValidSchemeChars"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"list[int] makeValidSchemeChars()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-createValidScheme"},"function createValidScheme"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str createValidScheme(str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-noOpaqueURI2"},"function noOpaqueURI2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool noOpaqueURI2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeScheme1"},"function canChangeScheme1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeScheme1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeScheme2"},"function canChangeScheme2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeScheme2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeAuthority1"},"function canChangeAuthority1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeAuthority1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeAuthority2"},"function canChangeAuthority2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeAuthority2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-fixPath"},"function fixPath"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str fixPath(str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangePath1"},"function canChangePath1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangePath1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangePath2"},"function canChangePath2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangePath2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeQuery1"},"function canChangeQuery1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeQuery1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeQuery2"},"function canChangeQuery2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeQuery2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeFragment1"},"function canChangeFragment1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeFragment1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeFragment2"},"function canChangeFragment2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeFragment2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-createValidHost"},"function createValidHost"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str createValidHost(str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeHost1"},"function canChangeHost1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeHost1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeHost2"},"function canChangeHost2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeHost2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeUser1"},"function canChangeUser1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeUser1(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-canChangeUser2"},"function canChangeUser2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool canChangeUser2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-validURIAuthority"},"function validURIAuthority"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool validURIAuthority(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-validURIPath"},"function validURIPath"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool validURIPath(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-validURIQuery"},"function validURIQuery"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool validURIQuery(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-validURIFragment"},"function validURIFragment"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool validURIFragment(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-fixPathAddition"},"function fixPathAddition"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str fixPathAddition(str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-pathAdditions1"},"function pathAdditions1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool pathAdditions1(list[str] ss)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-pathAdditions2"},"function pathAdditions2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool pathAdditions2(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-testParent"},"function testParent"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testParent(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-testWindowsParent"},"function testWindowsParent"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testWindowsParent(str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-testFile"},"function testFile"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testFile(loc l, str s)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-supportSquareBraces"},"function supportSquareBraces"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool supportSquareBraces(loc l)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-noFile"},"function noFile"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool noFile()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-rootPath"},"function rootPath"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool rootPath()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-rootPath3"},"function rootPath3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool rootPath3()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-rootPath4"},"function rootPath4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool rootPath4()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-top0"},"function top0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool top0(loc x)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-top1"},"function top1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool top1(loc x)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-top2"},"function top2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool top2(loc x)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-splicePathEncoded"},"function splicePathEncoded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool splicePathEncoded()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-spliceArbPathEncoded"},"function spliceArbPathEncoded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool spliceArbPathEncoded(str x)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest1"},"function enclosingTest1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest2"},"function enclosingTest2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest3"},"function enclosingTest3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest3()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest4"},"function enclosingTest4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest4()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest5"},"function enclosingTest5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest5()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest6"},"function enclosingTest6"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest6()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest7"},"function enclosingTest7"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest7()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest8"},"function enclosingTest8"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest8()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-enclosingTest9"},"function enclosingTest9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool enclosingTest9()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-offSetLengthEnclosing"},"function offSetLengthEnclosing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool offSetLengthEnclosing(int aOffset, int aLength, int bOffset, int bLength)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-getLineAndColumn"},"function getLineAndColumn"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tuple[int line, int column] getLineAndColumn(int idx)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-buildLoc"},"function buildLoc"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'loc buildLoc(int f, int t, str base = "base.src")'))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-restrict"},"function restrict"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int restrict(int i)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-getLoc"},"function getLoc"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'loc getLoc(int f, int t, str base = "base.src")'))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-less1"},"function less1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool less1(int f1, int t1, int f2, int t2)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-less2"},"function less2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool less2(int f, int t)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-lessequal1"},"function lessequal1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test  bool lessequal1(int f1, int t1, int f2, int t2)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-lessequal2"},"function lessequal2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool lessequal2(int f, int t)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-greater1"},"function greater1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test  bool greater1(int f1, int t1, int f2, int t2)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-greater2"},"function greater2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool greater2(int f, int t)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-greaterequal1"},"function greaterequal1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test  bool greaterequal1(int f1, int t1, int f2, int t2)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-greaterequal2"},"function greaterequal2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool greaterequal2(int f, int t)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-equal1"},"function equal1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool equal1(int f, int t)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-equal2"},"function equal2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool equal2(int f, int t)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-getLocs"},"function getLocs"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"list[loc] getLocs(int n)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-locInSet"},"function locInSet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool locInSet()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-locInMap"},"function locInMap"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool locInMap()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-locInRel"},"function locInRel"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool locInRel()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-locInLRel"},"function locInLRel"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool locInLRel()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-makeLocsWithGap"},"function makeLocsWithGap"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tuple[loc, loc] makeLocsWithGap(int gap)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-report"},"function report"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bool report(loc l1, loc l2, bool expected)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isLexicallyLess1"},"function isLexicallyLess1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bool isLexicallyLess1(int f, int t)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"bool isLexicallyLess1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isSameFile1"},"function isSameFile1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isSameFile1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isSameFile2"},"function isSameFile2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isSameFile2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isSameFile3"},"function isSameFile3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isSameFile3(loc l)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isSameFile4"},"function isSameFile4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isSameFile4(loc l)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isSameFile5"},"function isSameFile5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isSameFile5(loc l)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isContainedIn1"},"function isContainedIn1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isContainedIn1(int f, int len)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isContainedIn2"},"function isContainedIn2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isContainedIn2(int f, int len)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-beginsBefore1"},"function beginsBefore1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool beginsBefore1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-beginsBefore2"},"function beginsBefore2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool beginsBefore2(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isBefore1"},"function isBefore1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isBefore1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isBefore2"},"function isBefore2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isBefore2(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isImmediatelyBefore1"},"function isImmediatelyBefore1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isImmediatelyBefore1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isImmediatelyBefore2"},"function isImmediatelyBefore2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isImmediatelyBefore2(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-beginsAfter1"},"function beginsAfter1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool beginsAfter1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isAfter1"},"function isAfter1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isAfter1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isImmediatelyAfter1"},"function isImmediatelyAfter1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isImmediatelyAfter1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isOverlapping1"},"function isOverlapping1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isOverlapping1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isOverlapping2"},"function isOverlapping2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isOverlapping2(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isCover1"},"function isCover1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isCover1(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isCover2"},"function isCover2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isCover2(int _)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-basic-Locations-isCover3"},"function isCover3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool isCover3(int f, int t)"))))}d.isMDXComponent=!0}}]);