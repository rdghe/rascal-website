"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[36006],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),y=l(n),d=o,f=y["".concat(p,".").concat(d)]||y[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=y;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},47934:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={title:"Types",sidebar_position:4},i=void 0,s={unversionedId:"Tutor/Concept/Types/index",id:"Tutor/Concept/Types/index",title:"Types",description:"Synopsis",source:"@site/docs/Tutor/Concept/Types/index.md",sourceDirName:"Tutor/Concept/Types",slug:"/Tutor/Concept/Types/",permalink:"/docs/Tutor/Concept/Types/",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Types",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Syntax",permalink:"/docs/Tutor/Concept/Syntax/"},next:{title:"Function",permalink:"/docs/Tutor/Concept/Function/"}},p={},l=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Part of the synopsis that describes any types or typing rules introduced by this concept."),(0,o.kt)("h4",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"#### Types\n\n_MarkedText_\n")),(0,o.kt)("h4",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Types")," section describes any types that are involved in the concept that is described.\nThe description can be just text, but in many cases a table is useful to describe types."),(0,o.kt)("h4",{id:"examples"},"Examples"),(0,o.kt)("p",null,"Here is a type description of an if-then-else statement:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"#### Types\n\n| `Exp` | `if ( Exp ) Statement;`  |\n``` | \n| `bool`  |  `void`                      |\n\n\n\n| `Exp` | `Statement\u2081` | `Statement\u2082` | `if ( Exp ) Statement\u2081 else Statement\u2082;`  |\n| --- | --- | --- | --- |\n| `bool`  |  T\u2081        | T\u2082         | `lub(T\u2081, T\u2082)`                               |\n\n----\n\nThe result will be displayed as:\n\n#### Types\n\n| `Exp` | `if ( Exp ) Statement;`  |\n| --- | --- |\n| `bool`  |  `void`                      |\n\n\n\n| `Exp` | `Statement\u2081` | `Statement\u2082` | `if ( Exp ) Statement\u2081 else Statement\u2082;`  |\n| --- | --- | --- | --- |\n| `bool`  |  T\u2081        | T\u2082         | `lub(T\u2081, T\u2082)`                               |\n\n\n#### Benefits\n\n* The reader gets an immediate overview of how to use an expression or a function\n\n#### Pitfalls\n\n* There may be many different ways of using an operator, combinatorially many, which can not be explored visually in a list or a table.\n* These type signatures are written manually and not generated from source (yet)\n")))}u.isMDXComponent=!0}}]);