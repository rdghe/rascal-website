"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[23452],{3905:(a,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>u});var r=t(67294);function s(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function n(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,r)}return t}function i(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?n(Object(t),!0).forEach((function(e){s(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function l(a,e){if(null==a)return{};var t,r,s=function(a,e){if(null==a)return{};var t,r,s={},n=Object.keys(a);for(r=0;r<n.length;r++)t=n[r],e.indexOf(t)>=0||(s[t]=a[t]);return s}(a,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);for(r=0;r<n.length;r++)t=n[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(s[t]=a[t])}return s}var c=r.createContext({}),o=function(a){var e=r.useContext(c),t=e;return a&&(t="function"==typeof a?a(e):i(i({},e),a)),t},p=function(a){var e=o(a.components);return r.createElement(c.Provider,{value:e},a.children)},b={inlineCode:"code",wrapper:function(a){var e=a.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(a,e){var t=a.components,s=a.mdxType,n=a.originalType,c=a.parentName,p=l(a,["components","mdxType","originalType","parentName"]),m=o(t),u=s,y=m["".concat(c,".").concat(u)]||m[u]||b[u]||n;return t?r.createElement(y,i(i({ref:e},p),{},{components:t})):r.createElement(y,i({ref:e},p))}));function u(a,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var n=t.length,i=new Array(n);i[0]=m;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=a,l.mdxType="string"==typeof a?a:s,i[1]=l;for(var o=2;o<n;o++)i[o]=t[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},76578:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>b,frontMatter:()=>n,metadata:()=>l,toc:()=>o});var r=t(87462),s=(t(67294),t(3905));const n={title:"lang::rascal::tests::basic"},i=void 0,l={unversionedId:"Library/lang/rascal/tests/basic/index",id:"Library/lang/rascal/tests/basic/index",title:"lang::rascal::tests::basic",description:"* Strings1",source:"@site/docs/Library/lang/rascal/tests/basic/index.md",sourceDirName:"Library/lang/rascal/tests/basic",slug:"/Library/lang/rascal/tests/basic/",permalink:"/docs/Library/lang/rascal/tests/basic/",draft:!1,tags:[],version:"current",frontMatter:{title:"lang::rascal::tests::basic"},sidebar:"tutorialSidebar",previous:{title:"lang::rascal::tests",permalink:"/docs/Library/lang/rascal/tests/"},next:{title:"module lang::rascal::tests::basic::Booleans",permalink:"/docs/Library/lang/rascal/tests/basic/Booleans"}},c={},o=[],p={toc:o};function b(a){let{components:e,...t}=a;return(0,s.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Strings1"},"Strings1")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Memoization"},"Memoization")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/TestsForTests"},"TestsForTests")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Strings2"},"Strings2")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Lists"},"Lists")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Intermix"},"Intermix")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Matching"},"Matching")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/FunctionAssignment"},"FunctionAssignment")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Integers"},"Integers")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Nodes"},"Nodes")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Maps"},"Maps")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/DynamicDispatch"},"DynamicDispatch")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Tuples"},"Tuples")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Exceptions"},"Exceptions")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Types"},"Types")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Overloading"},"Overloading")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Booleans"},"Booleans")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Generics"},"Generics")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/IsDefined"},"IsDefined")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Relations"},"Relations")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Functions"},"Functions")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Sets"},"Sets")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/ListRelations"},"ListRelations")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/SolvedIssues"},"SolvedIssues")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Locations"},"Locations")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/Equality"},"Equality")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/EscapedNames"},"EscapedNames")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Library/lang/rascal/tests/basic/IO"},"IO"))))}b.isMDXComponent=!0}}]);