"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[45056],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(n),d=r,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||s;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46531:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const s={title:"Pattern With Action",keywords:["=>",":"]},i=void 0,o={unversionedId:"Rascal/Expressions/Visit/PatternWithAction/index",id:"Rascal/Expressions/Visit/PatternWithAction/index",title:"Pattern With Action",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Visit/PatternWithAction/index.md",sourceDirName:"Rascal/Expressions/Visit/PatternWithAction",slug:"/Rascal/Expressions/Visit/PatternWithAction/",permalink:"/docs/Rascal/Expressions/Visit/PatternWithAction/",draft:!1,tags:[],version:"current",frontMatter:{title:"Pattern With Action",keywords:["=>",":"]},sidebar:"tutorialSidebar",previous:{title:"Visit",permalink:"/docs/Rascal/Expressions/Visit/"},next:{title:"Statements",permalink:"/docs/Rascal/Statements/"}},c={},l=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"A pattern with an associated action that is executed on a successful match."),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Pattern => Exp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Pattern: Statement"))),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Patterns can be used in various contexts, but a common context is a PatternWithAction,\nwhich in its turn, may be used in various statements such ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Switch/"},"Switch")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Visit/"},"Visit"),"."),(0,r.kt)("p",null,"There are two variants as listed above:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When the subject matches ",(0,r.kt)("em",{parentName:"p"},"Pattern"),", the expression ",(0,r.kt)("em",{parentName:"p"},"Exp")," is evaluated and the subject is replaced with the result.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When the subject matches Pat, the Statement is executed. More statements can be executed by including them in a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Block/"},"Block"),"."))),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Switch/"},"Switch")," statements, only the form ",(0,r.kt)("inlineCode",{parentName:"p"},"Pattern : Statement")," is allowed.\nWhen the subject matches ",(0,r.kt)("em",{parentName:"p"},"Pattern"),", the ",(0,r.kt)("em",{parentName:"p"},"Statement")," is executed and the execution of the switch statement is complete.\nHowever, when a fail statement is executed in ",(0,r.kt)("em",{parentName:"p"},"Statement"),"  further alternatives of\n",(0,r.kt)("em",{parentName:"p"},"Pattern")," are tried. If no alternatives remain, PatternWithAction as a whole fails and subsequent cases of\nthe switch statement are tried."),(0,r.kt)("p",null,"In ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Visit/"},"Visit")," expressions, the form ",(0,r.kt)("inlineCode",{parentName:"p"},"Pattern => Exp")," describes subtree replacement:\nthe current subtree of the subject of the visit expression is replaced by the value of ",(0,r.kt)("em",{parentName:"p"},"Exp"),".\nThe form ",(0,r.kt)("inlineCode",{parentName:"p"},"Pattern : Statement")," is as described for switch statements, with the addition that execution of an\n",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Insert/"},"Insert")," statement will replace the current subtree. After both success or failure of the PatternWithAction,\nthe traversal of the subject continues."),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Two examples of variant 1 (replacement):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal"},"case red(CTree l, CTree r) => red(r,l)\ncase red(l, r) => green(l, r)\n")),(0,r.kt)("p",null,"Three examples of variant 2 (Statement):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal"},'case /Leila/: println("The topic is Starwars");\ncase red(_, _):    println("A red root node");\ncase red(_,_): c = c + 1; \n')),(0,r.kt)("p",null,"The action may also be a ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Block/"},"Block"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal"},'case red(_,_): { c = c + 1; println("c = <c>"); }\n')))}u.isMDXComponent=!0}}]);