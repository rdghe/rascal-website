"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[49801],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)r=l[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)r=l[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=i.createContext({}),u=function(e){var t=i.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return i.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(r),d=n,f=m["".concat(o,".").concat(d)]||m[d]||p[d]||l;return r?i.createElement(f,a(a({ref:t},c),{},{components:r})):i.createElement(f,a({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var u=2;u<l;u++)a[u]=r[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},83122:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var i=r(83117),n=(r(67294),r(3905));const l={title:"util::SemVer"},a=void 0,s={unversionedId:"Library/util/SemVer",id:"Library/util/SemVer",title:"util::SemVer",description:"Usage",source:"@site/docs/Library/util/SemVer.md",sourceDirName:"Library/util",slug:"/Library/util/SemVer",permalink:"/docs/Library/util/SemVer",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/util/SemVer.md",tags:[],version:"current",frontMatter:{title:"util::SemVer"},sidebar:"tutorialSidebar",previous:{title:"util::Reflective",permalink:"/docs/Library/util/Reflective"},next:{title:"util::ShellExec",permalink:"/docs/Library/util/ShellExec"}},o={},u=[{value:"Usage",id:"usage",level:4},{value:"function satisfiesVersion",id:"util-SemVer-satisfiesVersion",level:2},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function lessVersion",id:"util-SemVer-lessVersion",level:2},{value:"function lessEqualVersion",id:"util-SemVer-lessEqualVersion",level:2},{value:"function greaterVersion",id:"util-SemVer-greaterVersion",level:2},{value:"function greaterEqualVersion",id:"util-SemVer-greaterEqualVersion",level:2},{value:"function equalVersion",id:"util-SemVer-equalVersion",level:2},{value:"function getRascalVersion",id:"util-SemVer-getRascalVersion",level:2},{value:"function getRascalRuntimeVersion",id:"util-SemVer-getRascalRuntimeVersion",level:2},{value:"function getRascalCompilerVersion",id:"util-SemVer-getRascalCompilerVersion",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import util::SemVer;")),(0,n.kt)("h2",{id:"util-SemVer-satisfiesVersion"},"function satisfiesVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool satisfiesVersion(str version, str rangeSet)"))),(0,n.kt)("h4",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Semantic Versioning"),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"Check that a given version string satisfies a range-set as defined by:\n(See ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/npm/node-semver"},"https://github.com/npm/node-semver"),"):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"range-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' | ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n")),(0,n.kt)("h2",{id:"util-SemVer-lessVersion"},"function lessVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool lessVersion(str version1, str version2)"))),(0,n.kt)("h2",{id:"util-SemVer-lessEqualVersion"},"function lessEqualVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool lessEqualVersion(str version1, str version2)"))),(0,n.kt)("h2",{id:"util-SemVer-greaterVersion"},"function greaterVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool greaterVersion(str version1, str version2)"))),(0,n.kt)("h2",{id:"util-SemVer-greaterEqualVersion"},"function greaterEqualVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool greaterEqualVersion(str version1, str version2)"))),(0,n.kt)("h2",{id:"util-SemVer-equalVersion"},"function equalVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"bool equalVersion(str version1, str version2)"))),(0,n.kt)("h2",{id:"util-SemVer-getRascalVersion"},"function getRascalVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str getRascalVersion()"))),(0,n.kt)("h2",{id:"util-SemVer-getRascalRuntimeVersion"},"function getRascalRuntimeVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str getRascalRuntimeVersion()"))),(0,n.kt)("h2",{id:"util-SemVer-getRascalCompilerVersion"},"function getRascalCompilerVersion"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str getRascalCompilerVersion()"))))}p.isMDXComponent=!0}}]);