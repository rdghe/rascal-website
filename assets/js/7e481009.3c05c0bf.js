"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[36006],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),b=u(n),y=s,d=b["".concat(p,".").concat(y)]||b[y]||l[y]||o;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function y(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=b;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},47934:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(83117),s=(n(67294),n(3905));const o={title:"Types"},a=void 0,i={unversionedId:"Tutor/Concept/Types/index",id:"Tutor/Concept/Types/index",title:"Types",description:"Synopsis",source:"@site/docs/Tutor/Concept/Types/index.md",sourceDirName:"Tutor/Concept/Types",slug:"/Tutor/Concept/Types/",permalink:"/docs/Tutor/Concept/Types/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Tutor/Concept/Types/index.md",tags:[],version:"current",frontMatter:{title:"Types"},sidebar:"tutorialSidebar",previous:{title:"Syntax",permalink:"/docs/Tutor/Concept/Syntax/"},next:{title:"Maintenance",permalink:"/docs/Tutor/Maintenance/"}},p={},u=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:u};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h4",{id:"synopsis"},"Synopsis"),(0,s.kt)("p",null,"Part of the synopsis that describes any types or typing rules introduced by this concept."),(0,s.kt)("h4",{id:"syntax"},"Syntax"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"#### Types\n\n_MarkedText_\n")),(0,s.kt)("h4",{id:"description"},"Description"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Types")," section describes any types that are involved in the concept that is described.\nThe description can be just text, but in many cases a table is useful to describe types."),(0,s.kt)("h4",{id:"examples"},"Examples"),(0,s.kt)("p",null,"Here is a type description of an if-then-else statement:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"#### Types\n\n| `Exp` | `if ( Exp ) Statement;`  |\n``` | \n| `bool`  |  `void`                      |\n\n\n\n| `Exp` | `Statement<sub>1</sub>` | `Statement<sub>2</sub>` | `if ( Exp ) Statement<sub>1</sub> else Statement<sub>2</sub>;`  |\n| --- | --- | --- | --- |\n| `bool`  |  T<sub>1</sub>        | T<sub>2</sub>         | `lub(T<sub>1</sub>, T<sub>2</sub>)`                               |\n\n----\n\nThe result will be displayed as:\n\n#### Types\n\n| `Exp` | `if ( Exp ) Statement;`  |\n| --- | --- |\n| `bool`  |  `void`                      |\n\n\n\n| `Exp` | `Statement<sub>1</sub>` | `Statement<sub>2</sub>` | `if ( Exp ) Statement<sub>1</sub> else Statement<sub>2</sub>;`  |\n| --- | --- | --- | --- |\n| `bool`  |  T<sub>1</sub>        | T<sub>2</sub>         | `lub(T<sub>1</sub>, T<sub>2</sub>)`                               |\n")))}l.isMDXComponent=!0}}]);