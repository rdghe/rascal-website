"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[80720],{3905:(n,i,t)=>{t.d(i,{Zo:()=>u,kt:()=>d});var o=t(67294);function e(n,i,t){return i in n?Object.defineProperty(n,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[i]=t,n}function l(n,i){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);i&&(o=o.filter((function(i){return Object.getOwnPropertyDescriptor(n,i).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?l(Object(t),!0).forEach((function(i){e(n,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(i){Object.defineProperty(n,i,Object.getOwnPropertyDescriptor(t,i))}))}return n}function c(n,i){if(null==n)return{};var t,o,e=function(n,i){if(null==n)return{};var t,o,e={},l=Object.keys(n);for(o=0;o<l.length;o++)t=l[o],i.indexOf(t)>=0||(e[t]=n[t]);return e}(n,i);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(o=0;o<l.length;o++)t=l[o],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(e[t]=n[t])}return e}var s=o.createContext({}),r=function(n){var i=o.useContext(s),t=i;return n&&(t="function"==typeof n?n(i):a(a({},i),n)),t},u=function(n){var i=r(n.components);return o.createElement(s.Provider,{value:i},n.children)},m={inlineCode:"code",wrapper:function(n){var i=n.children;return o.createElement(o.Fragment,{},i)}},p=o.forwardRef((function(n,i){var t=n.components,e=n.mdxType,l=n.originalType,s=n.parentName,u=c(n,["components","mdxType","originalType","parentName"]),p=r(t),d=e,C=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return t?o.createElement(C,a(a({ref:i},u),{},{components:t})):o.createElement(C,a({ref:i},u))}));function d(n,i){var t=arguments,e=i&&i.mdxType;if("string"==typeof n||e){var l=t.length,a=new Array(l);a[0]=p;var c={};for(var s in i)hasOwnProperty.call(i,s)&&(c[s]=i[s]);c.originalType=n,c.mdxType="string"==typeof n?n:e,a[1]=c;for(var r=2;r<l;r++)a[r]=t[r];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2718:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>r});var o=t(83117),e=(t(67294),t(3905));const l={title:"module lang::rascal::tests::functionality::FunctionComposition"},a=void 0,c={unversionedId:"Library/lang/rascal/tests/functionality/FunctionComposition",id:"Library/lang/rascal/tests/functionality/FunctionComposition",title:"module lang::rascal::tests::functionality::FunctionComposition",description:"Usage",source:"@site/docs/Library/lang/rascal/tests/functionality/FunctionComposition.md",sourceDirName:"Library/lang/rascal/tests/functionality",slug:"/Library/lang/rascal/tests/functionality/FunctionComposition",permalink:"/docs/Library/lang/rascal/tests/functionality/FunctionComposition",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/rascal/tests/functionality/FunctionComposition.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::tests::functionality::FunctionComposition"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::tests::functionality::Declaration",permalink:"/docs/Library/lang/rascal/tests/functionality/Declaration"},next:{title:"module lang::rascal::tests::functionality::Interpolation",permalink:"/docs/Library/lang/rascal/tests/functionality/Interpolation"}},s={},r=[{value:"Usage",id:"usage",level:4},{value:"function twice",id:"lang-rascal-tests-functionality-FunctionComposition-twice",level:2},{value:"function triple",id:"lang-rascal-tests-functionality-FunctionComposition-triple",level:2},{value:"function dup",id:"lang-rascal-tests-functionality-FunctionComposition-dup",level:2},{value:"function trip",id:"lang-rascal-tests-functionality-FunctionComposition-trip",level:2},{value:"function twiceTriple1",id:"lang-rascal-tests-functionality-FunctionComposition-twiceTriple1",level:2},{value:"function twiceTriple2",id:"lang-rascal-tests-functionality-FunctionComposition-twiceTriple2",level:2},{value:"function dupTriple1",id:"lang-rascal-tests-functionality-FunctionComposition-dupTriple1",level:2},{value:"function tripleDup1",id:"lang-rascal-tests-functionality-FunctionComposition-tripleDup1",level:2},{value:"function dupTrip1",id:"lang-rascal-tests-functionality-FunctionComposition-dupTrip1",level:2},{value:"function dupTrip2",id:"lang-rascal-tests-functionality-FunctionComposition-dupTrip2",level:2},{value:"function dupTrip3",id:"lang-rascal-tests-functionality-FunctionComposition-dupTrip3",level:2},{value:"function fib",id:"lang-rascal-tests-functionality-FunctionComposition-fib",level:2},{value:"function fact",id:"lang-rascal-tests-functionality-FunctionComposition-fact",level:2},{value:"function printResult",id:"lang-rascal-tests-functionality-FunctionComposition-printResult",level:2},{value:"function f",id:"lang-rascal-tests-functionality-FunctionComposition-f",level:2},{value:"function g",id:"lang-rascal-tests-functionality-FunctionComposition-g",level:2},{value:"function factorialFibonacci",id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacci",level:2},{value:"function factorialFibonacciPrint1",id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacciPrint1",level:2},{value:"function factorialFibonacciPrint2",id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacciPrint2",level:2},{value:"function factorialFibonacciPrint3",id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacciPrint3",level:2},{value:"function anonymousFunctionComposition",id:"lang-rascal-tests-functionality-FunctionComposition-anonymousFunctionComposition",level:2},{value:"function composedOverloadedFunctions1",id:"lang-rascal-tests-functionality-FunctionComposition-composedOverloadedFunctions1",level:2},{value:"function composedOverloadedFunctions2",id:"lang-rascal-tests-functionality-FunctionComposition-composedOverloadedFunctions2",level:2},{value:"function h",id:"lang-rascal-tests-functionality-FunctionComposition-h",level:2},{value:"function i",id:"lang-rascal-tests-functionality-FunctionComposition-i",level:2},{value:"function j0",id:"lang-rascal-tests-functionality-FunctionComposition-j0",level:2},{value:"function j1",id:"lang-rascal-tests-functionality-FunctionComposition-j1",level:2},{value:"function j3",id:"lang-rascal-tests-functionality-FunctionComposition-j3",level:2},{value:"function j4",id:"lang-rascal-tests-functionality-FunctionComposition-j4",level:2},{value:"function k",id:"lang-rascal-tests-functionality-FunctionComposition-k",level:2},{value:"function l",id:"lang-rascal-tests-functionality-FunctionComposition-l",level:2},{value:"function nonDeterministicChoiceAndNormalComposition11",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition11",level:2},{value:"function nonDeterministicChoiceAndNormalComposition12",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition12",level:2},{value:"function nonDeterministicChoiceAndNormalComposition13",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition13",level:2},{value:"function nonDeterministicChoiceAndNormalComposition14",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition14",level:2},{value:"function nonDeterministicChoiceAndNormalComposition15",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition15",level:2},{value:"function nonDeterministicChoiceAndNormalComposition16",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition16",level:2},{value:"function nonDeterministicChoiceAndNormalComposition21",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition21",level:2},{value:"function nonDeterministicChoiceAndNormalComposition22",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition22",level:2},{value:"function nonDeterministicChoiceAndNormalComposition23",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition23",level:2},{value:"function nonDeterministicChoiceAndNormalComposition24",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition24",level:2},{value:"function nonDeterministicChoiceAndNormalComposition25",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition25",level:2},{value:"function twiceNotEven",id:"lang-rascal-tests-functionality-FunctionComposition-twiceNotEven",level:2},{value:"function nonDeterministicChoiceAndNormalComposition26",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition26",level:2},{value:"function nonDeterministicChoiceAndNormalComposition27",id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition27",level:2}],u={toc:r};function m(n){let{components:i,...t}=n;return(0,e.kt)("wrapper",(0,o.Z)({},u,t,{components:i,mdxType:"MDXLayout"}),(0,e.kt)("h4",{id:"usage"},"Usage"),(0,e.kt)("p",null,(0,e.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tests::functionality::FunctionComposition;")),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-twice"},"function twice"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int twice (int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-triple"},"function triple"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int triple (int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-dup"},"function dup"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int dup (int n)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str dup (str s)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-trip"},"function trip"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int trip(int n)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str trip(str s)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-twiceTriple1"},"function twiceTriple1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool twiceTriple1()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-twiceTriple2"},"function twiceTriple2"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool twiceTriple2()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-dupTriple1"},"function dupTriple1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool dupTriple1()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-tripleDup1"},"function tripleDup1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool tripleDup1()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-dupTrip1"},"function dupTrip1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool dupTrip1()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-dupTrip2"},"function dupTrip2"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool dupTrip2()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-dupTrip3"},"function dupTrip3"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool dupTrip3()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-fib"},"function fib"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int fib(0)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int fib(1)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default int fib(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-fact"},"function fact"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int fact(0)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int fact(1)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default int fact(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-printResult"},"function printResult"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str printResult(int n)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str printResult(str s)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-f"},"function f"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int f(0)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int f(1)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default int f(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-g"},"function g"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int g(0)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int g(1)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default int g(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacci"},"function factorialFibonacci"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool factorialFibonacci()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacciPrint1"},"function factorialFibonacciPrint1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool factorialFibonacciPrint1()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacciPrint2"},"function factorialFibonacciPrint2"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool factorialFibonacciPrint2()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-factorialFibonacciPrint3"},"function factorialFibonacciPrint3"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool factorialFibonacciPrint3()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-anonymousFunctionComposition"},"function anonymousFunctionComposition"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool anonymousFunctionComposition()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-composedOverloadedFunctions1"},"function composedOverloadedFunctions1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool composedOverloadedFunctions1()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-composedOverloadedFunctions2"},"function composedOverloadedFunctions2"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool composedOverloadedFunctions2()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-h"},"function h"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str h(0)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str h(1)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default str h(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-i"},"function i"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str i(0)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str i(1)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default str i(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-j0"},"function j0"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int j0(0)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-j1"},"function j1"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int j1(1)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-j3"},"function j3"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default int j3(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-j4"},"function j4"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default int j4(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-k"},"function k"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int k(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-l"},"function l"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int l(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition11"},"function nonDeterministicChoiceAndNormalComposition11"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition11()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition12"},"function nonDeterministicChoiceAndNormalComposition12"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition12()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition13"},"function nonDeterministicChoiceAndNormalComposition13"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition13()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition14"},"function nonDeterministicChoiceAndNormalComposition14"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition14()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition15"},"function nonDeterministicChoiceAndNormalComposition15"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition15()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition16"},"function nonDeterministicChoiceAndNormalComposition16"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition16()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition21"},"function nonDeterministicChoiceAndNormalComposition21"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition21()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition22"},"function nonDeterministicChoiceAndNormalComposition22"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition22()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition23"},"function nonDeterministicChoiceAndNormalComposition23"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition23()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition24"},"function nonDeterministicChoiceAndNormalComposition24"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition24()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition25"},"function nonDeterministicChoiceAndNormalComposition25"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition25()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-twiceNotEven"},"function twiceNotEven"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"int twiceNotEven(int n)"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition26"},"function nonDeterministicChoiceAndNormalComposition26"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition26()"))),(0,e.kt)("h2",{id:"lang-rascal-tests-functionality-FunctionComposition-nonDeterministicChoiceAndNormalComposition27"},"function nonDeterministicChoiceAndNormalComposition27"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool nonDeterministicChoiceAndNormalComposition27()"))))}m.isMDXComponent=!0}}]);