"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[22797],{3905:(a,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>f});var l=t(67294);function e(a,r,t){return r in a?Object.defineProperty(a,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[r]=t,a}function n(a,r){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);r&&(l=l.filter((function(r){return Object.getOwnPropertyDescriptor(a,r).enumerable}))),t.push.apply(t,l)}return t}function i(a){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){e(a,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(a,r,Object.getOwnPropertyDescriptor(t,r))}))}return a}function m(a,r){if(null==a)return{};var t,l,e=function(a,r){if(null==a)return{};var t,l,e={},n=Object.keys(a);for(l=0;l<n.length;l++)t=n[l],r.indexOf(t)>=0||(e[t]=a[t]);return e}(a,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);for(l=0;l<n.length;l++)t=n[l],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(e[t]=a[t])}return e}var o=l.createContext({}),s=function(a){var r=l.useContext(o),t=r;return a&&(t="function"==typeof a?a(r):i(i({},r),a)),t},c=function(a){var r=s(a.components);return l.createElement(o.Provider,{value:r},a.children)},u={inlineCode:"code",wrapper:function(a){var r=a.children;return l.createElement(l.Fragment,{},r)}},d=l.forwardRef((function(a,r){var t=a.components,e=a.mdxType,n=a.originalType,o=a.parentName,c=m(a,["components","mdxType","originalType","parentName"]),d=s(t),f=e,p=d["".concat(o,".").concat(f)]||d[f]||u[f]||n;return t?l.createElement(p,i(i({ref:r},c),{},{components:t})):l.createElement(p,i({ref:r},c))}));function f(a,r){var t=arguments,e=r&&r.mdxType;if("string"==typeof a||e){var n=t.length,i=new Array(n);i[0]=d;var m={};for(var o in r)hasOwnProperty.call(r,o)&&(m[o]=r[o]);m.originalType=a,m.mdxType="string"==typeof a?a:e,i[1]=m;for(var s=2;s<n;s++)i[s]=t[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}d.displayName="MDXCreateElement"},70083:(a,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>m,toc:()=>s});var l=t(83117),e=(t(67294),t(3905));const n={title:"lang::rascal::format::Grammar"},i=void 0,m={unversionedId:"Library/lang/rascal/format/Grammar",id:"Library/lang/rascal/format/Grammar",title:"lang::rascal::format::Grammar",description:"Usage",source:"@site/docs/Library/lang/rascal/format/Grammar.md",sourceDirName:"Library/lang/rascal/format",slug:"/Library/lang/rascal/format/Grammar",permalink:"/docs/Library/lang/rascal/format/Grammar",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/rascal/format/Grammar.md",tags:[],version:"current",frontMatter:{title:"lang::rascal::format::Grammar"},sidebar:"tutorialSidebar",previous:{title:"lang::rascal::format::Escape",permalink:"/docs/Library/lang/rascal/format/Escape"},next:{title:"lang::rascal::grammar",permalink:"/docs/Library/lang/rascal/grammar/"}},o={},s=[{value:"Usage",id:"usage",level:4},{value:"function definition2disk",id:"lang-rascal-format-Grammar-definition2disk",level:2},{value:"function definition2rascal",id:"lang-rascal-format-Grammar-definition2rascal",level:2},{value:"function module2rascal",id:"lang-rascal-format-Grammar-module2rascal",level:2},{value:"function grammar2rascal",id:"lang-rascal-format-Grammar-grammar2rascal",level:2},{value:"function cleanIdentifiers",id:"lang-rascal-format-Grammar-cleanIdentifiers",level:2},{value:"function grammar2rascal",id:"lang-rascal-format-Grammar-grammar2rascal",level:2},{value:"function same",id:"lang-rascal-format-Grammar-same",level:2},{value:"function topProd2rascal",id:"lang-rascal-format-Grammar-topProd2rascal",level:2},{value:"function layoutname",id:"lang-rascal-format-Grammar-layoutname",level:2},{value:"function alt2r",id:"lang-rascal-format-Grammar-alt2r",level:2},{value:"function alt2rascal",id:"lang-rascal-format-Grammar-alt2rascal",level:2},{value:"function prod2rascal",id:"lang-rascal-format-Grammar-prod2rascal",level:2},{value:"function associativity",id:"lang-rascal-format-Grammar-associativity",level:2},{value:"function reserved",id:"lang-rascal-format-Grammar-reserved",level:2},{value:"function noAttrs",id:"lang-rascal-format-Grammar-noAttrs",level:2},{value:"function AttrsAndCons",id:"lang-rascal-format-Grammar-AttrsAndCons",level:2},{value:"function CC",id:"lang-rascal-format-Grammar-CC",level:2},{value:"function Prio",id:"lang-rascal-format-Grammar-Prio",level:2},{value:"function attr2mod",id:"lang-rascal-format-Grammar-attr2mod",level:2},{value:"function symbol2rascal",id:"lang-rascal-format-Grammar-symbol2rascal",level:2},{value:"function iterseps2rascal",id:"lang-rascal-format-Grammar-iterseps2rascal",level:2},{value:"function params2rascal",id:"lang-rascal-format-Grammar-params2rascal",level:2},{value:"function cc2rascal",id:"lang-rascal-format-Grammar-cc2rascal",level:2},{value:"function range2rascal",id:"lang-rascal-format-Grammar-range2rascal",level:2}],c={toc:s};function u(a){let{components:r,...t}=a;return(0,e.kt)("wrapper",(0,l.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,e.kt)("h4",{id:"usage"},"Usage"),(0,e.kt)("p",null,(0,e.kt)("inlineCode",{parentName:"p"},"import lang::rascal::format::Grammar;")),(0,e.kt)("p",null,"  Convert the Rascal internal grammar representation format (Grammar) to\na syntax definition in Rascal source code."),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-definition2disk"},"function definition2disk"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"void definition2disk(loc prefix, GrammarDefinition def)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-definition2rascal"},"function definition2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str definition2rascal(GrammarDefinition def)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-module2rascal"},"function module2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str module2rascal(GrammarModule m)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-grammar2rascal"},"function grammar2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str grammar2rascal(Grammar g, str name)")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str grammar2rascal(Grammar g)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-cleanIdentifiers"},"function cleanIdentifiers"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"Grammar cleanIdentifiers(Grammar g)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-grammar2rascal"},"function grammar2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str grammar2rascal(Grammar g, list[Symbol] _/*nonterminals*/)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-same"},"function same"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"bool same(Production p, Production q)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-topProd2rascal"},"function topProd2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str topProd2rascal(Production p)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-layoutname"},"function layoutname"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str layoutname(Symbol s)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-alt2r"},"function alt2r"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},'str alt2r(Symbol _def, Production p, str sep = "=")'))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-alt2rascal"},"function alt2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str alt2rascal(Production p:prod(def,_,_))")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str alt2rascal(Production p:priority(def,_))")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str alt2rascal(Production p:\\associativity(def,a,_))")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str alt2rascal(Production p:regular(_))")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"default str alt2rascal(Production p)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-prod2rascal"},"function prod2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str prod2rascal(Production p)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-associativity"},"function associativity"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str associativity(\\left())")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str associativity(\\right())")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str associativity(\\assoc())")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str associativity(\\non-assoc())"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-reserved"},"function reserved"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str reserved(str name)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-noAttrs"},"function noAttrs"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool noAttrs()"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-AttrsAndCons"},"function AttrsAndCons"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool AttrsAndCons()"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-CC"},"function CC"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool CC()"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-Prio"},"function Prio"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"test bool Prio()"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-attr2mod"},"function attr2mod"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str attr2mod(Attr a)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-symbol2rascal"},"function symbol2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str symbol2rascal(Symbol sym)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-iterseps2rascal"},"function iterseps2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str iterseps2rascal(Symbol sym, list[Symbol] seps, str iter)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-params2rascal"},"function params2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str params2rascal(list[Symbol] params)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-cc2rascal"},"function cc2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str cc2rascal(list[CharRange] ranges)"))),(0,e.kt)("h2",{id:"lang-rascal-format-Grammar-range2rascal"},"function range2rascal"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("inlineCode",{parentName:"li"},"str range2rascal(CharRange r)"))))}u.isMDXComponent=!0}}]);