"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[2967],{3905:(t,e,s)=>{s.d(e,{Zo:()=>d,kt:()=>c});var l=s(67294);function a(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}function n(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.push.apply(s,l)}return s}function r(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?n(Object(s),!0).forEach((function(e){a(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):n(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}function i(t,e){if(null==t)return{};var s,l,a=function(t,e){if(null==t)return{};var s,l,a={},n=Object.keys(t);for(l=0;l<n.length;l++)s=n[l],e.indexOf(s)>=0||(a[s]=t[s]);return a}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(l=0;l<n.length;l++)s=n[l],e.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(t,s)&&(a[s]=t[s])}return a}var o=l.createContext({}),p=function(t){var e=l.useContext(o),s=e;return t&&(s="function"==typeof t?t(e):r(r({},e),t)),s},d=function(t){var e=p(t.components);return l.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},m=l.forwardRef((function(t,e){var s=t.components,a=t.mdxType,n=t.originalType,o=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),m=p(s),c=a,x=m["".concat(o,".").concat(c)]||m[c]||u[c]||n;return s?l.createElement(x,r(r({ref:e},d),{},{components:s})):l.createElement(x,r({ref:e},d))}));function c(t,e){var s=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var n=s.length,r=new Array(n);r[0]=m;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i.mdxType="string"==typeof t?t:a,r[1]=i;for(var p=2;p<n;p++)r[p]=s[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,s)}m.displayName="MDXCreateElement"},62418:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var l=s(83117),a=(s(67294),s(3905));const n={title:"module lang::rascal::syntax::tests::ImplodeTests"},r=void 0,i={unversionedId:"Library/lang/rascal/syntax/tests/ImplodeTests",id:"Library/lang/rascal/syntax/tests/ImplodeTests",title:"module lang::rascal::\\syntax::tests::ImplodeTests",description:"Usage",source:"@site/docs/Library/lang/rascal/syntax/tests/ImplodeTests.md",sourceDirName:"Library/lang/rascal/syntax/tests",slug:"/Library/lang/rascal/syntax/tests/ImplodeTests",permalink:"/docs/Library/lang/rascal/syntax/tests/ImplodeTests",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/rascal/syntax/tests/ImplodeTests.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::\\syntax::tests::ImplodeTests"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::\\syntax::tests::ImplodeTestGrammar",permalink:"/docs/Library/lang/rascal/syntax/tests/ImplodeTestGrammar"},next:{title:"module lang::rascal::\\syntax::tests::KnownIssues",permalink:"/docs/Library/lang/rascal/syntax/tests/KnownIssues"}},o={},p=[{value:"Usage",id:"usage",level:4},{value:"data Num",id:"lang-rascal-syntax-tests-ImplodeTests-Num",level:2},{value:"data Exp",id:"lang-rascal-syntax-tests-ImplodeTests-Exp",level:2},{value:"data Number",id:"lang-rascal-syntax-tests-ImplodeTests-Number",level:2},{value:"data Expr",id:"lang-rascal-syntax-tests-ImplodeTests-Expr",level:2},{value:"function implodeExp",id:"lang-rascal-syntax-tests-ImplodeTests-implodeExp",level:2},{value:"function implodeExpLit1",id:"lang-rascal-syntax-tests-ImplodeTests-implodeExpLit1",level:2},{value:"function implodeExpLit2",id:"lang-rascal-syntax-tests-ImplodeTests-implodeExpLit2",level:2},{value:"function implodeExpr",id:"lang-rascal-syntax-tests-ImplodeTests-implodeExpr",level:2},{value:"function implodeExprLit1",id:"lang-rascal-syntax-tests-ImplodeTests-implodeExprLit1",level:2},{value:"function implodeExprLit2",id:"lang-rascal-syntax-tests-ImplodeTests-implodeExprLit2",level:2},{value:"function test11",id:"lang-rascal-syntax-tests-ImplodeTests-test11",level:2},{value:"function test12",id:"lang-rascal-syntax-tests-ImplodeTests-test12",level:2},{value:"function test13",id:"lang-rascal-syntax-tests-ImplodeTests-test13",level:2},{value:"function test14",id:"lang-rascal-syntax-tests-ImplodeTests-test14",level:2},{value:"function test15",id:"lang-rascal-syntax-tests-ImplodeTests-test15",level:2},{value:"function test16",id:"lang-rascal-syntax-tests-ImplodeTests-test16",level:2},{value:"function test17",id:"lang-rascal-syntax-tests-ImplodeTests-test17",level:2},{value:"function test18",id:"lang-rascal-syntax-tests-ImplodeTests-test18",level:2},{value:"function test21",id:"lang-rascal-syntax-tests-ImplodeTests-test21",level:2},{value:"function test22",id:"lang-rascal-syntax-tests-ImplodeTests-test22",level:2},{value:"function test23",id:"lang-rascal-syntax-tests-ImplodeTests-test23",level:2},{value:"function test24",id:"lang-rascal-syntax-tests-ImplodeTests-test24",level:2}],d={toc:p};function u(t){let{components:e,...s}=t;return(0,a.kt)("wrapper",(0,l.Z)({},d,s,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import lang::rascal::\\syntax::tests::ImplodeTests;")),(0,a.kt)("p",null,"Tests the potential clashes among value constructors of different adts, plus, the identified clash with: bool eq(value, value);"),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-Num"},"data Num"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"data Num  \n     = \\int(str n)\n     ;\n")),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-Exp"},"data Exp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"data Exp  \n     = id(str name)\n     | eq(Exp e1, Exp e2)\n     | number(Num n)\n     ;\n")),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-Number"},"data Number"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"data Number  \n     = \\int(str n)\n     ;\n")),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-Expr"},"data Expr"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"data Expr  \n     = id(str name)\n     | eq(Expr e1, Expr e2)\n     | number(Number n)\n     ;\n")),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-implodeExp"},"function implodeExp"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Exp implodeExp(str s)"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-implodeExpLit1"},"function implodeExpLit1"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Exp implodeExpLit1()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-implodeExpLit2"},"function implodeExpLit2"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Exp implodeExpLit2()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-implodeExpr"},"function implodeExpr"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Expr implodeExpr(str s)"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-implodeExprLit1"},"function implodeExprLit1"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Expr implodeExprLit1()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-implodeExprLit2"},"function implodeExprLit2"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Expr implodeExprLit2()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test11"},"function test11"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test11()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test12"},"function test12"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test12()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test13"},"function test13"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test13()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test14"},"function test14"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test14()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test15"},"function test15"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test15()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test16"},"function test16"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test16()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test17"},"function test17"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test17()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test18"},"function test18"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test18()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test21"},"function test21"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test21()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test22"},"function test22"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test22()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test23"},"function test23"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test23()"))),(0,a.kt)("h2",{id:"lang-rascal-\\syntax-tests-ImplodeTests-test24"},"function test24"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test bool test24()"))))}u.isMDXComponent=!0}}]);