"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[97602],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,f=d["".concat(o,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},33786:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const l={title:"Variable Pattern"},i=void 0,s={unversionedId:"Rascal/Patterns/Variable/index",id:"Rascal/Patterns/Variable/index",title:"Variable Pattern",description:"Synopsis",source:"@site/docs/Rascal/Patterns/Variable/index.md",sourceDirName:"Rascal/Patterns/Variable",slug:"/Rascal/Patterns/Variable/",permalink:"/docs/Rascal/Patterns/Variable/",draft:!1,tags:[],version:"current",frontMatter:{title:"Variable Pattern"},sidebar:"tutorialSidebar",previous:{title:"Typed and Labelled Pattern",permalink:"/docs/Rascal/Patterns/TypedLabelled/"},next:{title:"Variable Declaration Pattern",permalink:"/docs/Rascal/Patterns/VariableDeclaration/"}},o={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Variable in abstract pattern."),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Var")),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"A variable pattern can act in two roles:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If ",(0,r.kt)("em",{parentName:"p"},"Var")," has already a defined value then it matches with that value.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If ",(0,r.kt)("em",{parentName:"p"},"Var")," has not been defined before (or it has been declared but not initialized) then it matches any value.\nThat value is assigned to ",(0,r.kt)("em",{parentName:"p"},"Var"),". The scope of this variable is the outermost expression in which the pattern occurs\nor the enclosing ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/If/"},"If"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/While/"},"While"),", or ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Do/"},"Do")," if the pattern occurs in the test expression of those statements."))),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Initialize variable ",(0,r.kt)("inlineCode",{parentName:"p"},"N")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>N = 10;\nint: 10\n")),(0,r.kt)("p",null,"and use ",(0,r.kt)("inlineCode",{parentName:"p"},"N")," in a pattern; its value is used as value to match with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},"rascal>N := 10;\nbool: true\nrascal>N := 20;\nbool: false\n")),(0,r.kt)("p",null,"Use a non-existing variable in a pattern, it is bound when the match succeeds:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},'rascal>import IO;\nok\nrascal>if(M := 10)\n>>>>>>>   println("Match succeeded, M == <M>");\nMatch succeeded, M == 10\nok\n')))}u.isMDXComponent=!0}}]);