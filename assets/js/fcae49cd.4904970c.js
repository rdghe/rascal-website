"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[21415],{3905:(t,e,r)=>{r.d(e,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?s(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},s=Object.keys(t);for(a=0;a<s.length;a++)r=s[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(a=0;a<s.length;a++)r=s[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var i=a.createContext({}),c=function(t){var e=a.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},p=function(t){var e=c(t.components);return a.createElement(i.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},y=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,s=t.originalType,i=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),y=c(r),m=n,d=y["".concat(i,".").concat(m)]||y[m]||u[m]||s;return r?a.createElement(d,l(l({ref:e},p),{},{components:r})):a.createElement(d,l({ref:e},p))}));function m(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var s=r.length,l=new Array(s);l[0]=y;var o={};for(var i in e)hasOwnProperty.call(e,i)&&(o[i]=e[i]);o.originalType=t,o.mdxType="string"==typeof t?t:n,l[1]=o;for(var c=2;c<s;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6754:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const s={title:"module lang::rascal::syntax::tests::PreBootstrap"},l=void 0,o={unversionedId:"Library/lang/rascal/syntax/tests/PreBootstrap",id:"Library/lang/rascal/syntax/tests/PreBootstrap",title:"module lang::rascal::\\syntax::tests::PreBootstrap",description:"Usage",source:"@site/docs/Library/lang/rascal/syntax/tests/PreBootstrap.md",sourceDirName:"Library/lang/rascal/syntax/tests",slug:"/Library/lang/rascal/syntax/tests/PreBootstrap",permalink:"/docs/Library/lang/rascal/syntax/tests/PreBootstrap",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/lang/rascal/syntax/tests/PreBootstrap.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::\\syntax::tests::PreBootstrap"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::\\syntax::tests::ParsingRegressionTests",permalink:"/docs/Library/lang/rascal/syntax/tests/ParsingRegressionTests"},next:{title:"module lang::rascal::\\syntax::tests::SolvedIssues",permalink:"/docs/Library/lang/rascal/syntax/tests/SolvedIssues"}},i={},c=[{value:"Usage",id:"usage",level:4},{value:"function expr",id:"lang-rascal-syntax-tests-PreBootstrap-expr",level:2},{value:"function lit",id:"lang-rascal-syntax-tests-PreBootstrap-lit",level:2},{value:"function nont",id:"lang-rascal-syntax-tests-PreBootstrap-nont",level:2},{value:"function paramnont",id:"lang-rascal-syntax-tests-PreBootstrap-paramnont",level:2},{value:"function string",id:"lang-rascal-syntax-tests-PreBootstrap-string",level:2},{value:"function match",id:"lang-rascal-syntax-tests-PreBootstrap-match",level:2}],p={toc:c};function u(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import lang::rascal::\\syntax::tests::PreBootstrap;")),(0,n.kt)("h2",{id:"lang-rascal-\\syntax-tests-PreBootstrap-expr"},"function expr"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool expr()"))),(0,n.kt)("h2",{id:"lang-rascal-\\syntax-tests-PreBootstrap-lit"},"function lit"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool lit()"))),(0,n.kt)("h2",{id:"lang-rascal-\\syntax-tests-PreBootstrap-nont"},"function nont"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool nont()"))),(0,n.kt)("h2",{id:"lang-rascal-\\syntax-tests-PreBootstrap-paramnont"},"function paramnont"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool paramnont()"))),(0,n.kt)("h2",{id:"lang-rascal-\\syntax-tests-PreBootstrap-string"},"function string"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool string()"))),(0,n.kt)("h2",{id:"lang-rascal-\\syntax-tests-PreBootstrap-match"},"function match"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool match()"))))}u.isMDXComponent=!0}}]);