"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[34660],{3905:(t,a,e)=>{e.d(a,{Zo:()=>u,kt:()=>f});var n=e(67294);function r(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function l(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?l(Object(e),!0).forEach((function(a){r(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function o(t,a){if(null==t)return{};var e,n,r=function(t,a){if(null==t)return{};var e,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||(r[e]=t[e]);return r}(t,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)e=l[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var c=n.createContext({}),s=function(t){var a=n.useContext(c),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},u=function(t){var a=s(t.components);return n.createElement(c.Provider,{value:a},t.children)},d={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(t,a){var e=t.components,r=t.mdxType,l=t.originalType,c=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),p=s(e),f=r,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||l;return e?n.createElement(m,i(i({ref:a},u),{},{components:e})):n.createElement(m,i({ref:a},u))}));function f(t,a){var e=arguments,r=a&&a.mdxType;if("string"==typeof t||r){var l=e.length,i=new Array(l);i[0]=p;var o={};for(var c in a)hasOwnProperty.call(a,c)&&(o[c]=a[c]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=e[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,e)}p.displayName="MDXCreateElement"},99753:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=e(83117),r=(e(67294),e(3905));const l={title:"module lang::rascal::tutor::apidoc::ExtractInfo"},i=void 0,o={unversionedId:"Library/lang/rascal/tutor/apidoc/ExtractInfo",id:"Library/lang/rascal/tutor/apidoc/ExtractInfo",title:"module lang::rascal::tutor::apidoc::ExtractInfo",description:"Usage",source:"@site/docs/Library/lang/rascal/tutor/apidoc/ExtractInfo.md",sourceDirName:"Library/lang/rascal/tutor/apidoc",slug:"/Library/lang/rascal/tutor/apidoc/ExtractInfo",permalink:"/docs/Library/lang/rascal/tutor/apidoc/ExtractInfo",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/lang/rascal/tutor/apidoc/ExtractInfo.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::tutor::apidoc::ExtractInfo"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::tutor::apidoc::DeclarationInfo",permalink:"/docs/Library/lang/rascal/tutor/apidoc/DeclarationInfo"},next:{title:"module lang::rascal::tutor::apidoc::GenerateMarkdown",permalink:"/docs/Library/lang/rascal/tutor/apidoc/GenerateMarkdown"}},c={},s=[{value:"Usage",id:"usage",level:4},{value:"function extractInfo",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractInfo",level:2},{value:"Synopsis",id:"synopsis",level:4},{value:"function doExtractInfo",id:"lang-rascal-tutor-apidoc-ExtractInfo-doExtractInfo",level:2},{value:"function extractModule",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractModule",level:2},{value:"function extractTopLevel",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractTopLevel",level:2},{value:"function extractDecl",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractDecl",level:2},{value:"function align",id:"lang-rascal-tutor-apidoc-ExtractInfo-align",level:2},{value:"function extractDecl",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractDecl",level:2},{value:"function genVariant",id:"lang-rascal-tutor-apidoc-ExtractInfo-genVariant",level:2},{value:"function extractDecl",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractDecl",level:2},{value:"function extractFunDecl",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractFunDecl",level:2},{value:"function extractFunctionDeclaration",id:"lang-rascal-tutor-apidoc-ExtractInfo-extractFunctionDeclaration",level:2},{value:"function getSynopsis",id:"lang-rascal-tutor-apidoc-ExtractInfo-getSynopsis",level:2},{value:"function isTutorTag",id:"lang-rascal-tutor-apidoc-ExtractInfo-isTutorTag",level:2},{value:"function getTagContents",id:"lang-rascal-tutor-apidoc-ExtractInfo-getTagContents",level:2},{value:"Synopsis",id:"synopsis-1",level:4},{value:"function sortedDocTags",id:"lang-rascal-tutor-apidoc-ExtractInfo-sortedDocTags",level:2},{value:"Synopsis",id:"synopsis-2",level:4}],u={toc:s};function d(t){let{components:a,...e}=t;return(0,r.kt)("wrapper",(0,n.Z)({},u,e,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tutor::apidoc::ExtractInfo;")),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractInfo"},"function extractInfo"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo] extractInfo(loc moduleLoc)"))),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Extract declaration information from a Rascal module at given location."),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-doExtractInfo"},"function doExtractInfo"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo] doExtractInfo(loc moduleLoc, datetime _/*lastModified*/)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractModule"},"function extractModule"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo] extractModule(m: (Module) `<Header header> <Body body>`)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractTopLevel"},"function extractTopLevel"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo] extractTopLevel(str moduleName, (Toplevel) `<Declaration decl>`)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractDecl"},"function extractDecl"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> <Type tp> <{Variable ","}+ variables> ;`)')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> anno <Type annoType> <Type onType>@<Name name> ;`)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> alias <UserType user> = <Type base> ;`)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> tag <Kind kind> <Name name> on <{Type ","}+ types> ;`)')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> data <UserType user> ;`)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-align"},"function align"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'str align({Variant "|"}+ variants)'))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractDecl"},"function extractDecl"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> data <UserType user> <CommonKeywordParameters commonKeywordParameters> ;`)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<Tags tags> <Visibility visibility> data <UserType user> <CommonKeywordParameters commonKeywordParameters> = <{Variant "|"}+ variants> ;`)'))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-genVariant"},"function genVariant"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'DeclarationInfo genVariant(str moduleName, v: (Variant) `<Name name>(<{TypeArg ","}* _> <KeywordFormals _>)`)'))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractDecl"},"function extractDecl"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DeclarationInfo]  extractDecl(str moduleName, d: (Declaration) `<FunctionDeclaration functionDeclaration>`)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractFunDecl"},"function extractFunDecl"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DeclarationInfo extractFunDecl(str moduleName, fd: (FunctionDeclaration) `<Tags tags> <Visibility visibility> <Signature signature> ;`)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DeclarationInfo extractFunDecl(str moduleName, fd: (FunctionDeclaration) `<Tags tags> <Visibility visibility> <Signature signature> = <Expression expression> ;`)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'DeclarationInfo extractFunDecl(str moduleName, fd: (FunctionDeclaration) `<Tags tags> <Visibility visibility> <Signature signature> = <Expression expression> when <{Expression ","}+ conditions>;`)')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DeclarationInfo extractFunDecl(str moduleName, fd: (FunctionDeclaration) `<Tags tags>  <Visibility visibility> <Signature signature> <FunctionBody body>`)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-extractFunctionDeclaration"},"function extractFunctionDeclaration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DeclarationInfo extractFunctionDeclaration(str moduleName, FunctionDeclaration fd)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-getSynopsis"},"function getSynopsis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"str getSynopsis(rel[str, DocTag] tags)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-isTutorTag"},"function isTutorTag"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bool isTutorTag(str label)"))),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-getTagContents"},"function getTagContents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rel[str, DocTag] getTagContents(Tags tags)"))),(0,r.kt)("h4",{id:"synopsis-1"},"Synopsis"),(0,r.kt)("p",null,"extracts the contents of ",(0,r.kt)("em",{parentName:"p"},"all")," tags from a declaration syntax tree and stores origin information"),(0,r.kt)("h2",{id:"lang-rascal-tutor-apidoc-ExtractInfo-sortedDocTags"},"function sortedDocTags"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[DocTag] sortedDocTags(rel[str, DocTag] tags)"))),(0,r.kt)("h4",{id:"synopsis-2"},"Synopsis"),(0,r.kt)("p",null,"lists the supported documentation tags in the prescribed order"))}d.isMDXComponent=!0}}]);