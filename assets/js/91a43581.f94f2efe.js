"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[39993],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(a),f=r,y=d["".concat(o,".").concat(f)]||d[f]||c[f]||l;return a?n.createElement(y,s(s({ref:t},p),{},{components:a})):n.createElement(y,s({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<l;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},44924:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var n=a(83117),r=(a(67294),a(3905));const l={title:"Value"},s=void 0,i={unversionedId:"Rascal/Expressions/Values/Value/index",id:"Rascal/Expressions/Values/Value/index",title:"Value",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Values/Value/index.md",sourceDirName:"Rascal/Expressions/Values/Value",slug:"/Rascal/Expressions/Values/Value/",permalink:"/docs/Rascal/Expressions/Values/Value/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascal/Expressions/Values/Value/index.md",tags:[],version:"current",frontMatter:{title:"Value"},sidebar:"tutorialSidebar",previous:{title:"Tuple Subscription",permalink:"/docs/Rascal/Expressions/Values/Tuple/Subscription/"},next:{title:"Value Conditional",permalink:"/docs/Rascal/Expressions/Values/Value/Conditional/"}},o={},u=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4}],p={toc:u};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Values of type ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("h4",{id:"types"},"Types"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"value")),(0,r.kt)("h4",{id:"function"},"Function"),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"Value stands for all possible Rascal values and is represented by the type ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),".\nThis type is a container for all other types and does not have any values itself."),(0,r.kt)("p",null,"The following operators are provided for values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/Conditional))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/Equal))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/GreaterThan))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/GreaterThanOrEqual))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/LessThan))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/LessThanOrEqual))"),(0,r.kt)("li",{parentName:"ul"},"((Rascal:Expressions/Values/Value/NotEqual))")),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("h4",{id:"benefits"},"Benefits"))}c.isMDXComponent=!0}}]);