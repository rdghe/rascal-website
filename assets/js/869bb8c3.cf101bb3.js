"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[80016],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},45126:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(83117),a=(r(67294),r(3905));const i={title:"module lang::aut::IO"},l=void 0,o={unversionedId:"Library/lang/aut/IO",id:"Library/lang/aut/IO",title:"module lang::aut::IO",description:"Usage",source:"@site/docs/Library/lang/aut/IO.md",sourceDirName:"Library/lang/aut",slug:"/Library/lang/aut/IO",permalink:"/docs/Library/lang/aut/IO",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/aut/IO.md",tags:[],version:"current",frontMatter:{title:"module lang::aut::IO"},sidebar:"tutorialSidebar",previous:{title:"lang::aut",permalink:"/docs/Library/lang/aut/"},next:{title:"lang::box",permalink:"/docs/Library/lang/box/"}},u={},s=[{value:"Usage",id:"usage",level:4},{value:"function readAUT",id:"lang-aut-IO-readAUT",level:2},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function writeAUT",id:"lang-aut-IO-writeAUT",level:2}],c={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import lang::aut::IO;")),(0,a.kt)("h2",{id:"lang-aut-IO-readAUT"},"function readAUT"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rel[int, str, int] readAUT(str nameAUTFile)"))),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Read relations from an AUT file."),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"An AUT file contains tuples of ternary relation as lines with the following format:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"(<int>,<str>,<int>)")),(0,a.kt)("li",{parentName:"ul"},"each field is separated by a comma ")),(0,a.kt)("p",null,"readAUT takes an AUT file and generates a value of type ",(0,a.kt)("inlineCode",{parentName:"p"},"rel[int, str,int]"),"."),(0,a.kt)("h2",{id:"lang-aut-IO-writeAUT"},"function writeAUT"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"void writeAUT(str nameAUTFile, rel[int, str, int] r)"))),(0,a.kt)("p",null,"write an AUT file"))}p.isMDXComponent=!0}}]);