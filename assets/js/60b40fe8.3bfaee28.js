"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[57605],{3905:(e,r,a)=>{a.d(r,{Zo:()=>o,kt:()=>p});var t=a(67294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function s(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?s(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function m(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=t.createContext({}),c=function(e){var r=t.useContext(i),a=r;return e&&(a="function"==typeof e?e(r):l(l({},r),e)),a},o=function(e){var r=c(e.components);return t.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),g=c(a),p=n,d=g["".concat(i,".").concat(p)]||g[p]||u[p]||s;return a?t.createElement(d,l(l({ref:r},o),{},{components:a})):t.createElement(d,l({ref:r},o))}));function p(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=g;var m={};for(var i in r)hasOwnProperty.call(r,i)&&(m[i]=r[i]);m.originalType=e,m.mdxType="string"==typeof e?e:n,l[1]=m;for(var c=2;c<s;c++)l[c]=a[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},67089:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>m,toc:()=>c});var t=a(83117),n=(a(67294),a(3905));const s={title:"lang::rascal::grammar::tests::CGrammar"},l=void 0,m={unversionedId:"Library/lang/rascal/grammar/tests/CGrammar",id:"Library/lang/rascal/grammar/tests/CGrammar",title:"lang::rascal::grammar::tests::CGrammar",description:"Usage",source:"@site/docs/Library/lang/rascal/grammar/tests/CGrammar.md",sourceDirName:"Library/lang/rascal/grammar/tests",slug:"/Library/lang/rascal/grammar/tests/CGrammar",permalink:"/docs/Library/lang/rascal/grammar/tests/CGrammar",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/rascal/grammar/tests/CGrammar.md",tags:[],version:"current",frontMatter:{title:"lang::rascal::grammar::tests::CGrammar"},sidebar:"tutorialSidebar",previous:{title:"lang::rascal::grammar::tests",permalink:"/docs/Library/lang/rascal/grammar/tests/"},next:{title:"lang::rascal::grammar::tests::CharactersTests",permalink:"/docs/Library/lang/rascal/grammar/tests/CharactersTests"}},i={},c=[{value:"Usage",id:"usage",level:4},{value:"function generateCParser",id:"lang-rascal-grammar-tests-CGrammar-generateCParser",level:2},{value:"function generateAndWriteCParser",id:"lang-rascal-grammar-tests-CGrammar-generateAndWriteCParser",level:2},{value:"function generateAndTimeCParser",id:"lang-rascal-grammar-tests-CGrammar-generateAndTimeCParser",level:2},{value:"function main",id:"lang-rascal-grammar-tests-CGrammar-main",level:2},{value:"function tstGenerateCParser",id:"lang-rascal-grammar-tests-CGrammar-tstGenerateCParser",level:2}],o={toc:c};function u(e){let{components:r,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},o,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import lang::rascal::grammar::tests::CGrammar;")),(0,n.kt)("h2",{id:"lang-rascal-grammar-tests-CGrammar-generateCParser"},"function generateCParser"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"str generateCParser()"))),(0,n.kt)("h2",{id:"lang-rascal-grammar-tests-CGrammar-generateAndWriteCParser"},"function generateAndWriteCParser"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"void generateAndWriteCParser()"))),(0,n.kt)("h2",{id:"lang-rascal-grammar-tests-CGrammar-generateAndTimeCParser"},"function generateAndTimeCParser"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"int generateAndTimeCParser()"))),(0,n.kt)("h2",{id:"lang-rascal-grammar-tests-CGrammar-main"},"function main"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"value main()"))),(0,n.kt)("h2",{id:"lang-rascal-grammar-tests-CGrammar-tstGenerateCParser"},"function tstGenerateCParser"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test bool tstGenerateCParser()"))))}u.isMDXComponent=!0}}]);