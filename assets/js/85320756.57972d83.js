"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[31839],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=s,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||n;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function d(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,o=new Array(n);o[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var p=2;p<n;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},16164:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var r=a(87462),s=(a(67294),a(3905));const n={title:"Expressions",sidebar_position:2},o=void 0,l={unversionedId:"Rascal/Expressions/index",id:"Rascal/Expressions/index",title:"Expressions",description:"Synopsis",source:"@site/docs/Rascal/Expressions/index.md",sourceDirName:"Rascal/Expressions",slug:"/Rascal/Expressions/",permalink:"/docs/Rascal/Expressions/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Rascal/Expressions/index.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Expressions",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Variable Declaration Pattern",permalink:"/docs/Rascal/Patterns/VariableDeclaration/"},next:{title:"Call",permalink:"/docs/Rascal/Expressions/Call/"}},i={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h4",{id:"synopsis"},"Synopsis"),(0,s.kt)("p",null,"The expressions available in Rascal."),(0,s.kt)("h4",{id:"description"},"Description"),(0,s.kt)("p",null,"The expression is the basic unit of evaluation and may consist of the ingredients shown in the figure."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"An elementary ",(0,s.kt)("em",{parentName:"p"},"literal value"),", e.g. constants of the types ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Boolean/"},"Boolean"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Integer/"},"Integer"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Real/"},"Real"),",\n",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Number/"},"Number"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/String/"},"String"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Location/"},"Location")," or ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/DateTime/"},"DateTime"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"A ",(0,s.kt)("em",{parentName:"p"},"structured value")," for ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/List/"},"List"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Set/"},"Set"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Map/"},"Map"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Tuple/"},"Tuple")," or ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Relation/"},"Relation"),".\nThe elements are first evaluated before the structured value is built.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"A ",(0,s.kt)("em",{parentName:"p"},"variable")," that evaluates to its current value.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"A call to a function or constructor:"))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"  A ",(0,s.kt)("em",{parentName:"strong"},"function call"),". First the arguments are evaluated and the corresponding function is called.\nThe value returned by the function is used as value of the function call. See ",(0,s.kt)("a",{parentName:"strong",href:"/docs/Rascal/Expressions/Call/"},"Call"),".\n"),"  A ",(0,s.kt)("em",{parentName:"p"},"constructor"),". First the arguments are evaluated and then a data value is constructed for the\ncorresponding type. This data value is used as value of the constructor.\nConstructors are functions that can be used in all contexts where functions can be used. See ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Constructor/"},"Constructor"),"."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"An operator expression. The operator is applied to the arguments; the evaluation order of the arguments depends\non the operator. The result returned by the operator is used as value of the operator expression.  See ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Operators/"},"Operators"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Comprehensions/"},"./Comprehensions"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"A ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Visit/"},"Visit")," expression.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"A ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Boolean/Any/"},"Any")," expression.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"An ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Boolean/All/"},"All")," expression.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Some statements like ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/If/"},"./If"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/For/"},"For"),", ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/While/"},"While")," and ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Statements/Do/"},"Do")," can also be used in expressions, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/StatementAsExpression/"},"Statement as Expression"),"."))))}u.isMDXComponent=!0}}]);