"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[34763],{3905:(e,t,a)=>{a.d(t,{Zo:()=>N,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),k=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},N=function(e){var t=k(e.components);return n.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},o=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,m=e.parentName,N=i(e,["components","mdxType","originalType","parentName"]),o=k(a),u=r,c=o["".concat(m,".").concat(u)]||o[u]||s[u]||p;return a?n.createElement(c,l(l({ref:t},N),{},{components:a})):n.createElement(c,l({ref:t},N))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,l=new Array(p);l[0]=o;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var k=2;k<p;k++)l[k]=a[k];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}o.displayName="MDXCreateElement"},6789:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>s,frontMatter:()=>p,metadata:()=>i,toc:()=>k});var n=a(87462),r=(a(67294),a(3905));const p={title:"module util::Progress"},l=void 0,i={unversionedId:"Library/util/Progress",id:"Library/util/Progress",title:"module util::Progress",description:"Usage",source:"@site/docs/Library/util/Progress.md",sourceDirName:"Library/util",slug:"/Library/util/Progress",permalink:"/docs/Library/util/Progress",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/util/Progress.md",tags:[],version:"current",frontMatter:{title:"module util::Progress"},sidebar:"tutorialSidebar",previous:{title:"module util::PriorityQueue",permalink:"/docs/Library/util/PriorityQueue"},next:{title:"module util::REPL",permalink:"/docs/Library/util/REPL"}},m={},k=[{value:"Usage",id:"usage",level:4},{value:"function progressBar",id:"util-Progress-progressBar",level:2},{value:"function spinner",id:"util-Progress-spinner",level:2}],N={toc:k};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},N,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"import util::Progress;")),(0,r.kt)("h2",{id:"util-Progress-progressBar"},"function progressBar"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'tuple[void(str) report, void() finished] progressBar(int total, str prefix = "Progress:", int length = 50, int limit = total, str fill = "\\u2588", str unfill = "-", str printEnd = "\\r")'))),(0,r.kt)("p",null,"  .Synopsis\nThis progressbar can be used in terminal applications to show the progress of some process in the terminal."),(0,r.kt)("p",null,"  .Description\nThe total number of steps is the only required parameter to be passed in. All other parameters are optional."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"prefix"),' is the string that is displayed in front of the progress bar (default "").')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"length")," is the length (number of characters) of the displayed bar (default 50).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"limit")," allows for the throtteling of the number of times the progress bar is printed. For instance if the total is 1000 and the limit is set to 100 then the progress bar will be updated every 10 iterations. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"fill"),' is the character used for the percentage used (default "\\u2588").')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"unfill"),' is the character used for the unused part (default "-").')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"printEnd"),' is the character used at the end of the line (default "\\r").'),(0,r.kt)("p",{parentName:"li"},"The return is a tuple with 2 functions, the ",(0,r.kt)("inlineCode",{parentName:"p"},"report")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"finished")," function.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"report(str suffix)")," needs to be called for every iteration update. The suffix is displayed after the progressbar and can differ per iteration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"finished()")," can be called at the end of the iteration to add a new line to the terminal  "),(0,r.kt)("p",{parentName:"li"},"It is inspired on the progressbar described here: ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/3173320/text-progress-bar-in-the-console"},"https://stackoverflow.com/questions/3173320/text-progress-bar-in-the-console")),(0,r.kt)("p",{parentName:"li"},".Examples"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>  import util::Progress;\nok\nrascal>  int total = 10; \nint: 10\nrascal>  pb = progressBar(total, length = 15, limit = 100);\ntuple[void (str) report,void () finished]: <function(|std:///util/Progress.rsc|(2277,340,<52,12>,<60,5>)),function(|std:///util/Progress.rsc|(2619,22,<60,7>,<60,29>))>\nrascal>  for (i <- [0..total]) {\n>>>>>>>    pb.report(" : <i+1> of <total>");\n>>>>>>>  }\n\nProgress: |\u2588--------------| 10%  : 1 of 10\n\nProgress: |\u2588\u2588\u2588------------| 20%  : 2 of 10\n\nProgress: |\u2588\u2588\u2588\u2588-----------| 30%  : 3 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588---------| 40%  : 4 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588--------| 50%  : 5 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588------| 60%  : 6 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588-----| 70%  : 7 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588---| 80%  : 8 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588--| 90%  : 9 of 10\n\nProgress: |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100%  : 10 of 10\nlist[void]: []\nrascal>  pb.finished();  \nok\n')),(0,r.kt)("h2",{id:"util-Progress-spinner"},"function spinner"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'void (str) spinner(str prefix = " ", str printEnd = "\\r")'))),(0,r.kt)("p",null,"  .Synopsis\nSimple spinner to display progress for some terminal process for which the total number of steps is not known."),(0,r.kt)("p",null,"  .Description\n",(0,r.kt)("inlineCode",{parentName:"p"},"prefix"),' - Contains the string displayed in front the spinner (default " ").'),(0,r.kt)("p",null,"   It returns a function that can be called to make the spinner spin one rotation.\nThis function takes a ",(0,r.kt)("inlineCode",{parentName:"p"},"suffix")," string parameter that will be displayed behind the spinner  "),(0,r.kt)("p",null,"  .Examples  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>  import util::Progress;\nok\nrascal>  import util::Math;\nok\nrascal>  sp = spinner();\nvoid (str): function(|std:///util/Progress.rsc|(3317,305,<86,9>,<95,3>))\nrascal>  while (n := arbInt(100), n != 1) {\n>>>>>>>    sp("<n>");\n>>>>>>>  }\n\n \\ 27 \n\n | 32 \n\n / 6 \n\n - 20 \n\n \\ 57 \n\n | 68 \n\n / 53 \n\n - 82 \n\n \\ 81 \n\n | 63 \n\n / 15 \n\n - 78 \n\n \\ 89 \n\n | 46 \n\n / 36 \n\n - 74 \n\n \\ 17 \n\n | 24 \n\n / 51 \n\n - 41 \n\n \\ 9 \n\n | 63 \n\n / 36 \n\n - 37 \n\n \\ 60 \n\n | 80 \n\n / 7 \n\n - 29 \n\n \\ 16 \n\n | 47 \n\n / 16 \n\n - 94 \n\n \\ 91 \n\n | 90 \n\n / 82 \n\n - 81 \n\n \\ 49 \n\n | 5 \n\n / 66 \n\n - 93 \n\n \\ 97 \n\n | 33 \n\n / 97 \n\n - 12 \n\n \\ 58 \n\n | 38 \n\n / 59 \n\n - 48 \n\n \\ 35 \n\n | 6 \n\n / 99 \n\n - 32 \n\n \\ 98 \n\n | 43 \n\n / 28 \n\n - 47 \n\n \\ 73 \n\n | 0 \n\n / 82 \n\n - 97 \n\n \\ 3 \n\n | 96 \n\n / 77 \n\n - 54 \n\n \\ 31 \nlist[void]: []\n')),(0,r.kt)("p",null,"93 "),(0,r.kt)("p",null," \\ 25 "),(0,r.kt)("p",null," | 28 "),(0,r.kt)("p",null," / 83 "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"39 "),(0,r.kt)("p",{parentName:"li"},"\\ 79 "),(0,r.kt)("p",{parentName:"li"},"| 13 "),(0,r.kt)("p",{parentName:"li"},"/ 38 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"86 "),(0,r.kt)("p",{parentName:"li"},"\\ 90 "),(0,r.kt)("p",{parentName:"li"},"| 59 "),(0,r.kt)("p",{parentName:"li"},"/ 28 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"41 "),(0,r.kt)("p",{parentName:"li"},"\\ 6 "),(0,r.kt)("p",{parentName:"li"},"| 84 "),(0,r.kt)("p",{parentName:"li"},"/ 75 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"37 "),(0,r.kt)("p",{parentName:"li"},"\\ 4 "),(0,r.kt)("p",{parentName:"li"},"| 16 "),(0,r.kt)("p",{parentName:"li"},"/ 33 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"71 "),(0,r.kt)("p",{parentName:"li"},"\\ 75 "),(0,r.kt)("p",{parentName:"li"},"| 6 "),(0,r.kt)("p",{parentName:"li"},"/ 36 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"99 "),(0,r.kt)("p",{parentName:"li"},"\\ 38 "),(0,r.kt)("p",{parentName:"li"},"| 14 "),(0,r.kt)("p",{parentName:"li"},"/ 31 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"5 "),(0,r.kt)("p",{parentName:"li"},"\\ 72 "),(0,r.kt)("p",{parentName:"li"},"| 25 "),(0,r.kt)("p",{parentName:"li"},"/ 91 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"92 "),(0,r.kt)("p",{parentName:"li"},"\\ 94 "),(0,r.kt)("p",{parentName:"li"},"| 90 "),(0,r.kt)("p",{parentName:"li"},"/ 23 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"70 "),(0,r.kt)("p",{parentName:"li"},"\\ 63 "),(0,r.kt)("p",{parentName:"li"},"| 29 "),(0,r.kt)("p",{parentName:"li"},"/ 20 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"23 "),(0,r.kt)("p",{parentName:"li"},"\\ 97 "),(0,r.kt)("p",{parentName:"li"},"| 62 "),(0,r.kt)("p",{parentName:"li"},"/ 20 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"59 "),(0,r.kt)("p",{parentName:"li"},"\\ 24 "),(0,r.kt)("p",{parentName:"li"},"| 27 "),(0,r.kt)("p",{parentName:"li"},"/ 97 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"39 "),(0,r.kt)("p",{parentName:"li"},"\\ 37 "),(0,r.kt)("p",{parentName:"li"},"| 44 "),(0,r.kt)("p",{parentName:"li"},"/ 43 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"20 "),(0,r.kt)("p",{parentName:"li"},"\\ 13 "),(0,r.kt)("p",{parentName:"li"},"| 63 "),(0,r.kt)("p",{parentName:"li"},"/ 75 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"47 "),(0,r.kt)("p",{parentName:"li"},"\\ 16 "),(0,r.kt)("p",{parentName:"li"},"| 95 "),(0,r.kt)("p",{parentName:"li"},"/ 96 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"40 "),(0,r.kt)("p",{parentName:"li"},"\\ 17 "),(0,r.kt)("p",{parentName:"li"},"| 54 "),(0,r.kt)("p",{parentName:"li"},"/ 77 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"22 "),(0,r.kt)("p",{parentName:"li"},"\\ 20 "),(0,r.kt)("p",{parentName:"li"},"| 64 "),(0,r.kt)("p",{parentName:"li"},"/ 15 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"41 "),(0,r.kt)("p",{parentName:"li"},"\\ 59 "),(0,r.kt)("p",{parentName:"li"},"| 64 "),(0,r.kt)("p",{parentName:"li"},"/ 61 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"71 "),(0,r.kt)("p",{parentName:"li"},"\\ 78 "),(0,r.kt)("p",{parentName:"li"},"| 90 "),(0,r.kt)("p",{parentName:"li"},"/ 6 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"41 "),(0,r.kt)("p",{parentName:"li"},"\\ 78 "),(0,r.kt)("p",{parentName:"li"},"| 75 "),(0,r.kt)("p",{parentName:"li"},"/ 8 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"17 "),(0,r.kt)("p",{parentName:"li"},"\\ 13 "),(0,r.kt)("p",{parentName:"li"},"| 92 "),(0,r.kt)("p",{parentName:"li"},"/ 91 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"34 "),(0,r.kt)("p",{parentName:"li"},"\\ 44 "),(0,r.kt)("p",{parentName:"li"},"| 90 "),(0,r.kt)("p",{parentName:"li"},"/ 36 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"48 "),(0,r.kt)("p",{parentName:"li"},"\\ 9 "),(0,r.kt)("p",{parentName:"li"},"| 35 "),(0,r.kt)("p",{parentName:"li"},"/ 88 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"70 "),(0,r.kt)("p",{parentName:"li"},"\\ 28 "),(0,r.kt)("p",{parentName:"li"},"| 42 "),(0,r.kt)("p",{parentName:"li"},"/ 57 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"58 "),(0,r.kt)("p",{parentName:"li"},"\\ 90 "),(0,r.kt)("p",{parentName:"li"},"| 33 "),(0,r.kt)("p",{parentName:"li"},"/ 61 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"90 "),(0,r.kt)("p",{parentName:"li"},"\\ 6 "),(0,r.kt)("p",{parentName:"li"},"| 24 "),(0,r.kt)("p",{parentName:"li"},"/ 98 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"74 "),(0,r.kt)("p",{parentName:"li"},"\\ 68 "),(0,r.kt)("p",{parentName:"li"},"| 47 "),(0,r.kt)("p",{parentName:"li"},"/ 2 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"75 "),(0,r.kt)("p",{parentName:"li"},"\\ 79 "),(0,r.kt)("p",{parentName:"li"},"| 16 "),(0,r.kt)("p",{parentName:"li"},"/ 2 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"40 "),(0,r.kt)("p",{parentName:"li"},"\\ 63 "),(0,r.kt)("p",{parentName:"li"},"| 15 "),(0,r.kt)("p",{parentName:"li"},"/ 86 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"12 "),(0,r.kt)("p",{parentName:"li"},"\\ 24 "),(0,r.kt)("p",{parentName:"li"},"| 71 "),(0,r.kt)("p",{parentName:"li"},"/ 46 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"38 "),(0,r.kt)("p",{parentName:"li"},"\\ 46 "),(0,r.kt)("p",{parentName:"li"},"| 89 "),(0,r.kt)("p",{parentName:"li"},"/ 60 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"45 "),(0,r.kt)("p",{parentName:"li"},"\\ 74 "),(0,r.kt)("p",{parentName:"li"},"| 13 "),(0,r.kt)("p",{parentName:"li"},"/ 51 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"68 "),(0,r.kt)("p",{parentName:"li"},"\\ 85 "),(0,r.kt)("p",{parentName:"li"},"| 46 "),(0,r.kt)("p",{parentName:"li"},"/ 23 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"51 "),(0,r.kt)("p",{parentName:"li"},"\\ 56 "),(0,r.kt)("p",{parentName:"li"},"| 19 "),(0,r.kt)("p",{parentName:"li"},"/ 66 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"48 "),(0,r.kt)("p",{parentName:"li"},"\\ 48 "),(0,r.kt)("p",{parentName:"li"},"| 48 "),(0,r.kt)("p",{parentName:"li"},"/ 99 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"76 "),(0,r.kt)("p",{parentName:"li"},"\\ 73 "),(0,r.kt)("p",{parentName:"li"},"| 94 "),(0,r.kt)("p",{parentName:"li"},"/ 10 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"27 "),(0,r.kt)("p",{parentName:"li"},"\\ 35 "),(0,r.kt)("p",{parentName:"li"},"| 31 "),(0,r.kt)("p",{parentName:"li"},"/ 89 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"11 "),(0,r.kt)("p",{parentName:"li"},"\\ 97 "),(0,r.kt)("p",{parentName:"li"},"| 66 "),(0,r.kt)("p",{parentName:"li"},"/ 22 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"73 "),(0,r.kt)("p",{parentName:"li"},"\\ 50 "),(0,r.kt)("p",{parentName:"li"},"| 66 "),(0,r.kt)("p",{parentName:"li"},"/ 45 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"74 "),(0,r.kt)("p",{parentName:"li"},"\\ 5 "),(0,r.kt)("p",{parentName:"li"},"| 36 "),(0,r.kt)("p",{parentName:"li"},"/ 96 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"0 "),(0,r.kt)("p",{parentName:"li"},"\\ 76 "),(0,r.kt)("p",{parentName:"li"},"| 86 "),(0,r.kt)("p",{parentName:"li"},"/ 82 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"74 "),(0,r.kt)("p",{parentName:"li"},"\\ 17 "),(0,r.kt)("p",{parentName:"li"},"| 47 "),(0,r.kt)("p",{parentName:"li"},"/ 34 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"2 "),(0,r.kt)("p",{parentName:"li"},"\\ 62 "),(0,r.kt)("p",{parentName:"li"},"| 49 "),(0,r.kt)("p",{parentName:"li"},"/ 27 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"58 "),(0,r.kt)("p",{parentName:"li"},"\\ 12 "),(0,r.kt)("p",{parentName:"li"},"| 78 "),(0,r.kt)("p",{parentName:"li"},"/ 30 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"34 "),(0,r.kt)("p",{parentName:"li"},"\\ 7 "),(0,r.kt)("p",{parentName:"li"},"| 60 "),(0,r.kt)("p",{parentName:"li"},"/ 54 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"63 "),(0,r.kt)("p",{parentName:"li"},"\\ 52 "),(0,r.kt)("p",{parentName:"li"},"| 99 "),(0,r.kt)("p",{parentName:"li"},"/ 99 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"18 "),(0,r.kt)("p",{parentName:"li"},"\\ 43 "),(0,r.kt)("p",{parentName:"li"},"| 50 "),(0,r.kt)("p",{parentName:"li"},"/ 13 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"28 "),(0,r.kt)("p",{parentName:"li"},"\\ 51 "),(0,r.kt)("p",{parentName:"li"},"| 81 "),(0,r.kt)("p",{parentName:"li"},"/ 64 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"7 "),(0,r.kt)("p",{parentName:"li"},"\\ 73 "),(0,r.kt)("p",{parentName:"li"},"| 45 "),(0,r.kt)("p",{parentName:"li"},"/ 70 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"23 "),(0,r.kt)("p",{parentName:"li"},"\\ 98 "),(0,r.kt)("p",{parentName:"li"},"| 19 "),(0,r.kt)("p",{parentName:"li"},"/ 57 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"99 "),(0,r.kt)("p",{parentName:"li"},"\\ 22 "),(0,r.kt)("p",{parentName:"li"},"| 24 "),(0,r.kt)("p",{parentName:"li"},"/ 8 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"23 "),(0,r.kt)("p",{parentName:"li"},"\\ 38 "),(0,r.kt)("p",{parentName:"li"},"| 2 "),(0,r.kt)("p",{parentName:"li"},"/ 18 ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"49\nlist","[void]",": []"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"")))}s.isMDXComponent=!0}}]);