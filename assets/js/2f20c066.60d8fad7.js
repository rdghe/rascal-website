"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[50755],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?r.createElement(y,s(s({ref:t},o),{},{components:a})):r.createElement(y,s({ref:t},o))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var p=2;p<i;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},88919:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=a(83117),n=(a(67294),a(3905));const i={title:"AbstractDataType"},s=void 0,c={unversionedId:"Rascalopedia/AbstractDataType/index",id:"Rascalopedia/AbstractDataType/index",title:"AbstractDataType",description:"Synopsis",source:"@site/docs/Rascalopedia/AbstractDataType/index.md",sourceDirName:"Rascalopedia/AbstractDataType",slug:"/Rascalopedia/AbstractDataType/",permalink:"/docs/Rascalopedia/AbstractDataType/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascalopedia/AbstractDataType/index.md",tags:[],version:"current",frontMatter:{title:"AbstractDataType"},sidebar:"tutorialSidebar",previous:{title:"Rascalopedia",permalink:"/docs/Rascalopedia/"},next:{title:"Abstract Syntax Tree",permalink:"/docs/Rascalopedia/AbstractSyntaxTree/"}},l={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Usage",id:"usage",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Abstract Data Types in Daily Life",id:"abstract-data-types-in-daily-life",level:2},{value:"Abstract Data Types in computer science",id:"abstract-data-types-in-computer-science",level:2},{value:"Abstract Data Types in Rascal",id:"abstract-data-types-in-rascal",level:2},{value:"Benefits",id:"benefits",level:4}],o={toc:p};function d(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},o,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"A definition of a data type."),(0,n.kt)("h4",{id:"syntax"},"Syntax"),(0,n.kt)("h4",{id:"types"},"Types"),(0,n.kt)("h4",{id:"function"},"Function"),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"An ",(0,n.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Abstract_data_type"},"Abstract Data Type")," is a mathematical description of a structure\nthat can be implemented in various ways. For instance, a stack data type can be characterized by ",(0,n.kt)("inlineCode",{parentName:"p"},"empty")," (the empty stack),\ntwo functions ",(0,n.kt)("inlineCode",{parentName:"p"},"push")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"pop")," and axioms that define them. At the implementation level, a stack\ncan be implemented using a list, array or something else."),(0,n.kt)("p",null,"In functional languages, and also in Rascal, abstract datatypes (or ADTs for short)\nare used to define new data types. Well-known examples are ",(0,n.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Stack_(data_structure)%5Bstack%5D"},"http://en.wikipedia.org/wiki/Stack_(data_structure)[stack]")," and ",(0,n.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Tree_(data_structure)%5Btree%5D"},"http://en.wikipedia.org/wiki/Tree_(data_structure)[tree]"),"."),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"/docs/Rascal/Declarations/AlgebraicDataType"},"Algebraic Data Types")," and\n",(0,n.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Constructor"},"Constructors")," in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/Rascal/"},"Rascal Language Reference"),"."),(0,n.kt)("h4",{id:"examples"},"Examples"),(0,n.kt)("h2",{id:"abstract-data-types-in-daily-life"},"Abstract Data Types in Daily Life"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A stack of trays in the local cafetaria: ",(0,n.kt)("img",{src:a(93525).Z,width:"287",height:"321"}),"\n",(0,n.kt)("a",{parentName:"p",href:"http://www.thermo-box.co.uk/fimi-food-transport-and-handling-products/self-levelling-heated-and-unheated-plate-and-tray-systems.html"},"credit"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"A tree:\n",(0,n.kt)("img",{src:a(78181).Z,width:"450",height:"326"}),"\n",(0,n.kt)("a",{parentName:"p",href:"http://free-extras.com/images/tree-569.htm"},"credit"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Coral:\n",(0,n.kt)("img",{src:a(56251).Z,width:"600",height:"400"}),"\n",(0,n.kt)("a",{parentName:"p",href:"http://blog.enn.com/?p=476"},"credit")))),(0,n.kt)("h2",{id:"abstract-data-types-in-computer-science"},"Abstract Data Types in computer science"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The run-time stack of a programming language interpreter."),(0,n.kt)("li",{parentName:"ul"},"A search tree."),(0,n.kt)("li",{parentName:"ul"},"An ontology.")),(0,n.kt)("h2",{id:"abstract-data-types-in-rascal"},"Abstract Data Types in Rascal"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A tree data type:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal"},"data MyTree = leaf(int n) | tree(str name, MyTree left, MyTree right);\n")),(0,n.kt)("h4",{id:"benefits"},"Benefits"))}d.isMDXComponent=!0},56251:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/coral-301a9679e9fbddf002544943b88512f6.jpg"},93525:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/dispenser-277692320232abf8ccc3c89a9d7d83f3.jpg"},78181:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/tree-e11d6c53a2a6fbcf83d1f13b8ca43983.jpg"}}]);