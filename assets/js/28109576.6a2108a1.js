"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[21948],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||l;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},81266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(83117),a=(t(67294),t(3905));const l={title:"Listing"},i=void 0,o={unversionedId:"Tutor/Markup/InlineMarkup/Listing/index",id:"Tutor/Markup/InlineMarkup/Listing/index",title:"Listing",description:"Synopsis",source:"@site/docs/Tutor/Markup/InlineMarkup/Listing/index.md",sourceDirName:"Tutor/Markup/InlineMarkup/Listing",slug:"/Tutor/Markup/InlineMarkup/Listing/",permalink:"/docs/Tutor/Markup/InlineMarkup/Listing/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Tutor/Markup/InlineMarkup/Listing/index.md",tags:[],version:"current",frontMatter:{title:"Listing"},sidebar:"tutorialSidebar",previous:{title:"Italic",permalink:"/docs/Tutor/Markup/InlineMarkup/Italic/"},next:{title:"Reference to Concept",permalink:"/docs/Tutor/Markup/InlineMarkup/ReferenceToConcept/"}},c={},s=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],u={toc:s};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Include some source code in the document"),(0,a.kt)("h4",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"```language-name\nint fac(int n) {\n    if (n <= 0) {\n        return 1;\n    }\n    else {\n        return n * fac(n-1);\n    }\n}\n")),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"You can use the triple backquotes to encapsulate a piece of literal source text. The language name indicates\nwhich syntax highlighter to use."),(0,a.kt)("p",null,"If you use ",(0,a.kt)("inlineCode",{parentName:"p"},"rascal-shell")," as a language name, then the code is executed line-by-line by a Rascal shell\nand the output is collected."),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"```rascal-shell\nx = 1 + 1;\n```\n")),(0,a.kt)("p",null,"Would produce:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>x = 1 + 1;\nint: 2\n")),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"continue")," you can continue where you've left off:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"```rascal-shell,continue\nx + x\n```\n")),(0,a.kt)("p",null,"Which results in:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>x + 1\nint: 3\n")),(0,a.kt)("p",null,"Simply using ",(0,a.kt)("inlineCode",{parentName:"p"},"rascal")," as a language does not have all these effects:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"```rascal\nint fac(0) = 1;\ndefault int fac(int n) = n * fac(n - 1);\n```\n")),(0,a.kt)("p",null,"That block simply produces this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal"},"int fac(0) = 1;\ndefault int fac(int n) = n * fac(n - 1);\n")))}p.isMDXComponent=!0}}]);