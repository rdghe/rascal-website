"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[18747],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},81061:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(83117),i=(n(67294),n(3905));const a={title:"ArgumentMismatch"},l=void 0,o={unversionedId:"CompileTimeErrors/ArgumentMismatch/index",id:"CompileTimeErrors/ArgumentMismatch/index",title:"ArgumentMismatch",description:"Synopsis",source:"@site/docs/CompileTimeErrors/ArgumentMismatch/index.md",sourceDirName:"CompileTimeErrors/ArgumentMismatch",slug:"/CompileTimeErrors/ArgumentMismatch/",permalink:"/docs/CompileTimeErrors/ArgumentMismatch/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/CompileTimeErrors/ArgumentMismatch/index.md",tags:[],version:"current",frontMatter:{title:"ArgumentMismatch"},sidebar:"tutorialSidebar",previous:{title:"AmbiguousFunctionReference",permalink:"/docs/CompileTimeErrors/AmbiguousFunctionReference/"},next:{title:"Arity",permalink:"/docs/CompileTimeErrors/Arity/"}},s={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"The called signature does not match any defined function."),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"A function has a name and a signature (the names and types of its arguments).\nThis error is reported when a call of a function cannot be associated with a function declaration."),(0,i.kt)("p",null,"Remedies:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modify the call so that the arguments match the function declaration."),(0,i.kt)("li",{parentName:"ul"},"Write a new definition for a function with the same name, that matches the argument types in the call.")),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Define a function ",(0,i.kt)("inlineCode",{parentName:"p"},"triple")," that multiplies its argument by 3:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>int triple(int x) = 3 * x;\nint (int): function(|prompt:///|(0,26,<1,0>,<1,26>))\n")),(0,i.kt)("p",null,"It works fine:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>triple(5)\nint: 15\n")),(0,i.kt)("p",null,"Unless it is called with an argument of a wrong type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>triple([1,2,3])\n|prompt:///|(12,1,<1,12>,<1,13>): CallFailed([[1,2,3]])\n    at $shell$(|prompt:///|(0,9,<1,0>,<1,9>))\nok\n")),(0,i.kt)("p",null,"We can define a new version of ",(0,i.kt)("inlineCode",{parentName:"p"},"triple")," function that accepts lists:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>list[int] triple(list[int] L) = [3 * x | x <- L];\nlist[int] (list[int]): function(|prompt:///|(0,49,<1,0>,<1,49>))\nrascal>triple([1,2,3]);\nlist[int]: [3,6,9]\n")))}u.isMDXComponent=!0}}]);