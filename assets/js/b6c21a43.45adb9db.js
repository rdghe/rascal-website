"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[95524],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},44614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(83117),i=(n(67294),n(3905));const a={title:"Reducer",keywords:["(","|",")","it"]},s=void 0,o={unversionedId:"Rascal/Expressions/Reducer/index",id:"Rascal/Expressions/Reducer/index",title:"Reducer",description:"Synopsis",source:"@site/docs/Rascal/Expressions/Reducer/index.md",sourceDirName:"Rascal/Expressions/Reducer",slug:"/Rascal/Expressions/Reducer/",permalink:"/docs/Rascal/Expressions/Reducer/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Rascal/Expressions/Reducer/index.md",tags:[],version:"current",frontMatter:{title:"Reducer",keywords:["(","|",")","it"]},sidebar:"tutorialSidebar",previous:{title:"Field Projection",permalink:"/docs/Rascal/Expressions/Operators/FieldProjection/"},next:{title:"Statement as Expression",permalink:"/docs/Rascal/Expressions/StatementAsExpression/"}},l={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Types",id:"types",level:4},{value:"Function",id:"function",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Reduce generated values to a single value."),(0,i.kt)("h4",{id:"syntax"},"Syntax"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"( InitExp | RedExp | Gen<sub>1</sub>, Gen<sub>2</sub>, ... )")),(0,i.kt)("h4",{id:"types"},"Types"),(0,i.kt)("h4",{id:"function"},"Function"),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"A reducer resembles the ",(0,i.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Fold_(higher-order_function)%5Bfold%5D"},"http://en.wikipedia.org/wiki/Fold_(higher-order_function)[fold]")," function\nfound in most functional languages."),(0,i.kt)("p",null,"A reducer is equivalent to the following code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:'language-rascal,subs="verbatim,quotes"'},"it = _InitExp_; // <1>\nfor(_Gen<sub>1</sub>_, _Gen<sub>2</sub>_, ... ) // <2>\n    it = _RedExp_; // <3>\nit; // <4>\n")),(0,i.kt)("p",null,"and is executed as follows:"),(0,i.kt)("p",null,"<1> A fresh variable ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," is initialized with ",(0,i.kt)("em",{parentName:"p"},"InitExp"),".\nWe call the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," since we use ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," to initialize the reducer, to make changes to ",(0,i.kt)("inlineCode",{parentName:"p"},"it"),",\nand to return ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," as result.\n<2> A for loop iterates over all values produced by the generators ",(0,i.kt)("inlineCode",{parentName:"p"},"Gen<sub>1</sub>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Gen<sub>2</sub>"),", ... .\n<3> In the body of the loop, variable ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," is updated to reflect a new reduced value.\nNote that ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," itself and variables introduced in ",(0,i.kt)("em",{parentName:"p"},"Gen"),(0,i.kt)("sub",null,"1"),", ",(0,i.kt)("em",{parentName:"p"},"Gen"),(0,i.kt)("sub",null,"2"),", ... may occur in ",(0,i.kt)("em",{parentName:"p"},"RedExp"),".\n<4> The value of ",(0,i.kt)("inlineCode",{parentName:"p"},"it")," is the result of the reducer."),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>L = [1, 3, 5, 7];\nlist[int]: [1,3,5,7]\nrascal>(0 | it + e | int e <- L);\nint: 16\nrascal>(1 | it * e | int e <- L);\nint: 105\n")),(0,i.kt)("h4",{id:"benefits"},"Benefits"))}u.isMDXComponent=!0}}]);