"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[69154],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},90948:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=n(83117),a=(n(67294),n(3905));const i={title:"Empty Set"},o=void 0,p={unversionedId:"RunTimeErrors/RuntimeExceptions/EmptySet/index",id:"RunTimeErrors/RuntimeExceptions/EmptySet/index",title:"Empty Set",description:"Synopsis",source:"@site/docs/RunTimeErrors/RuntimeExceptions/EmptySet/index.md",sourceDirName:"RunTimeErrors/RuntimeExceptions/EmptySet",slug:"/RunTimeErrors/RuntimeExceptions/EmptySet/",permalink:"/docs/RunTimeErrors/RuntimeExceptions/EmptySet/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/RunTimeErrors/RuntimeExceptions/EmptySet/index.md",tags:[],version:"current",frontMatter:{title:"Empty Set"},sidebar:"tutorialSidebar",previous:{title:"Empty Map",permalink:"/docs/RunTimeErrors/RuntimeExceptions/EmptyMap/"},next:{title:"IO",permalink:"/docs/RunTimeErrors/RuntimeExceptions/IO/"}},s={},l=[{value:"Synopsis",id:"synopsis",level:4},{value:"Types",id:"types",level:4},{value:"Usage",id:"usage",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:l};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Illegal operation on an empty set."),(0,a.kt)("h4",{id:"types"},"Types"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"data RuntimeException = EmptySet();")),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import Exception;")," (only needed when ",(0,a.kt)("inlineCode",{parentName:"p"},"EmptySet")," is used in ",(0,a.kt)("inlineCode",{parentName:"p"},"catch"),")"),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"Rascal provides many operations and functions on sets, see ",(0,a.kt)("a",{parentName:"p",href:"../../../Rascal/Expressions/Values/Set"},"set values"),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/docs/Library/Set"},"set functions"),".\nThis error is generated when a function or operations cannot handle the empty set."),(0,a.kt)("p",null,"Remedies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Guard the function or operation with a test on the empty set (",(0,a.kt)("a",{parentName:"li",href:"/docs/Library/Set#Set-isEmpty"},"isEmpty"),") and\ntake alternative action in that case."),(0,a.kt)("li",{parentName:"ul"},"Catch the ",(0,a.kt)("inlineCode",{parentName:"li"},"EmptySet")," yourself, see ",(0,a.kt)("a",{parentName:"li",href:"../../../Rascal/Statements/TryCatch"},"try catch"),".")),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Import the ",(0,a.kt)("inlineCode",{parentName:"p"},"Set")," library and introduce ",(0,a.kt)("inlineCode",{parentName:"p"},"S")," with an empty set as value:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import Set;\nok\nrascal>S = {};\nset[void]: {}\n")),(0,a.kt)("p",null,"Taking an element from an empty set gives an error:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>getOneFrom(S);\n|std:///Set.rsc|(6597,382,<329,0>,<346,38>): EmptySet()\n    at *** somewhere ***(|std:///Set.rsc|(6597,382,<329,0>,<346,38>))\n    at getOneFrom(|prompt:///|(11,1,<1,11>,<1,12>))\nok\n")),(0,a.kt)("p",null,"We can also catch the ",(0,a.kt)("inlineCode",{parentName:"p"},"EmptySet")," error. First import the Rascal exceptions (which are also included in ",(0,a.kt)("inlineCode",{parentName:"p"},"Prelude"),")\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"IO"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>import Exception;\nok\nrascal>import IO;\nok\nrascal>try \n>>>>>>>  println(getOneFrom(S)); \n>>>>>>>catch EmptySet(): \n>>>>>>>  println("Cannot apply getOneFrom to empty set");\n  println("Cannot apply getOneFrom to empty set");\nCannot apply getOneFrom to empty set\nok\n')))}m.isMDXComponent=!0}}]);