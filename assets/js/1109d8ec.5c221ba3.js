"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[87446],{3905:(t,a,e)=>{e.d(a,{Zo:()=>o,kt:()=>p});var n=e(67294);function l(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function i(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function c(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?i(Object(e),!0).forEach((function(a){l(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function s(t,a){if(null==t)return{};var e,n,l=function(t,a){if(null==t)return{};var e,n,l={},i=Object.keys(t);for(n=0;n<i.length;n++)e=i[n],a.indexOf(e)>=0||(l[e]=t[e]);return l}(t,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)e=i[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var r=n.createContext({}),u=function(t){var a=n.useContext(r),e=a;return t&&(e="function"==typeof t?t(a):c(c({},a),t)),e},o=function(t){var a=u(t.components);return n.createElement(r.Provider,{value:a},t.children)},y={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},f=n.forwardRef((function(t,a){var e=t.components,l=t.mdxType,i=t.originalType,r=t.parentName,o=s(t,["components","mdxType","originalType","parentName"]),f=u(e),p=l,d=f["".concat(r,".").concat(p)]||f[p]||y[p]||i;return e?n.createElement(d,c(c({ref:a},o),{},{components:e})):n.createElement(d,c({ref:a},o))}));function p(t,a){var e=arguments,l=a&&a.mdxType;if("string"==typeof t||l){var i=e.length,c=new Array(i);c[0]=f;var s={};for(var r in a)hasOwnProperty.call(a,r)&&(s[r]=a[r]);s.originalType=t,s.mdxType="string"==typeof t?t:l,c[1]=s;for(var u=2;u<i;u++)c[u]=e[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,e)}f.displayName="MDXCreateElement"},48289:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>r,contentTitle:()=>c,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=e(83117),l=(e(67294),e(3905));const i={title:"module lang::rascal::tests::functionality::TryCatch"},c=void 0,s={unversionedId:"Library/lang/rascal/tests/functionality/TryCatch",id:"Library/lang/rascal/tests/functionality/TryCatch",title:"module lang::rascal::tests::functionality::TryCatch",description:"Usage",source:"@site/docs/Library/lang/rascal/tests/functionality/TryCatch.md",sourceDirName:"Library/lang/rascal/tests/functionality",slug:"/Library/lang/rascal/tests/functionality/TryCatch",permalink:"/docs/Library/lang/rascal/tests/functionality/TryCatch",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/lang/rascal/tests/functionality/TryCatch.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::tests::functionality::TryCatch"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::tests::functionality::Switch",permalink:"/docs/Library/lang/rascal/tests/functionality/Switch"},next:{title:"module lang::rascal::tests::functionality::Visit1",permalink:"/docs/Library/lang/rascal/tests/functionality/Visit1"}},r={},u=[{value:"Usage",id:"usage",level:4},{value:"data NODEA",id:"lang-rascal-tests-functionality-TryCatch-NODEA",level:2},{value:"data NODEB",id:"lang-rascal-tests-functionality-TryCatch-NODEB",level:2},{value:"data NODEC",id:"lang-rascal-tests-functionality-TryCatch-NODEC",level:2},{value:"data Exception",id:"lang-rascal-tests-functionality-TryCatch-Exception",level:2},{value:"function classify",id:"lang-rascal-tests-functionality-TryCatch-classify",level:2},{value:"function duplicate",id:"lang-rascal-tests-functionality-TryCatch-duplicate",level:2},{value:"function dfin",id:"lang-rascal-tests-functionality-TryCatch-dfin",level:2},{value:"function divide",id:"lang-rascal-tests-functionality-TryCatch-divide",level:2},{value:"function safeDivide",id:"lang-rascal-tests-functionality-TryCatch-safeDivide",level:2},{value:"function catchStackThrow",id:"lang-rascal-tests-functionality-TryCatch-catchStackThrow",level:2},{value:"function catchStack",id:"lang-rascal-tests-functionality-TryCatch-catchStack",level:2},{value:"function testCatchStack",id:"lang-rascal-tests-functionality-TryCatch-testCatchStack",level:2},{value:"function testClassify1",id:"lang-rascal-tests-functionality-TryCatch-testClassify1",level:2},{value:"function testClassify2",id:"lang-rascal-tests-functionality-TryCatch-testClassify2",level:2},{value:"function testClassify3",id:"lang-rascal-tests-functionality-TryCatch-testClassify3",level:2},{value:"function testClassify4",id:"lang-rascal-tests-functionality-TryCatch-testClassify4",level:2},{value:"function testDuplicate1",id:"lang-rascal-tests-functionality-TryCatch-testDuplicate1",level:2},{value:"function testDuplicate2",id:"lang-rascal-tests-functionality-TryCatch-testDuplicate2",level:2},{value:"function testDuplicate3",id:"lang-rascal-tests-functionality-TryCatch-testDuplicate3",level:2},{value:"function testDuplicate4",id:"lang-rascal-tests-functionality-TryCatch-testDuplicate4",level:2},{value:"function testDFin1",id:"lang-rascal-tests-functionality-TryCatch-testDFin1",level:2},{value:"function testDFin2",id:"lang-rascal-tests-functionality-TryCatch-testDFin2",level:2},{value:"function testDFin3",id:"lang-rascal-tests-functionality-TryCatch-testDFin3",level:2},{value:"function testDFin4",id:"lang-rascal-tests-functionality-TryCatch-testDFin4",level:2},{value:"function testDivide1",id:"lang-rascal-tests-functionality-TryCatch-testDivide1",level:2},{value:"function testDivide2",id:"lang-rascal-tests-functionality-TryCatch-testDivide2",level:2},{value:"function testDivide3",id:"lang-rascal-tests-functionality-TryCatch-testDivide3",level:2},{value:"function emptyListException1",id:"lang-rascal-tests-functionality-TryCatch-emptyListException1",level:2},{value:"function emptyMapException1",id:"lang-rascal-tests-functionality-TryCatch-emptyMapException1",level:2},{value:"function emptySetException1",id:"lang-rascal-tests-functionality-TryCatch-emptySetException1",level:2},{value:"function indexOutOfBoundsException1",id:"lang-rascal-tests-functionality-TryCatch-indexOutOfBoundsException1",level:2},{value:"function pathNotFoundException1",id:"lang-rascal-tests-functionality-TryCatch-pathNotFoundException1",level:2},{value:"function emptyTryStatement",id:"lang-rascal-tests-functionality-TryCatch-emptyTryStatement",level:2},{value:"function emptyTryBlock",id:"lang-rascal-tests-functionality-TryCatch-emptyTryBlock",level:2},{value:"function emptyCatchStatement1",id:"lang-rascal-tests-functionality-TryCatch-emptyCatchStatement1",level:2},{value:"function f_using_empty_catch",id:"lang-rascal-tests-functionality-TryCatch-f_using_empty_catch",level:2},{value:"function emptyCatchStatement2",id:"lang-rascal-tests-functionality-TryCatch-emptyCatchStatement2",level:2},{value:"function emptyCatchAndFinallyBlock",id:"lang-rascal-tests-functionality-TryCatch-emptyCatchAndFinallyBlock",level:2},{value:"function f_using_finally1",id:"lang-rascal-tests-functionality-TryCatch-f_using_finally1",level:2},{value:"function finally1",id:"lang-rascal-tests-functionality-TryCatch-finally1",level:2},{value:"function f_using_finally2",id:"lang-rascal-tests-functionality-TryCatch-f_using_finally2",level:2},{value:"function finally2",id:"lang-rascal-tests-functionality-TryCatch-finally2",level:2}],o={toc:u};function y(t){let{components:a,...e}=t;return(0,l.kt)("wrapper",(0,n.Z)({},o,e,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tests::functionality::TryCatch;")),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-NODEA"},"data NODEA"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal"},"data NODEA  \n     = fA(int N)\n     ;\n")),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-NODEB"},"data NODEB"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal"},"data NODEB  \n     = fB(int N)\n     | dB(NODEB a, NODEB b)\n     ;\n")),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-NODEC"},"data NODEC"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal"},"data NODEC  \n     = fC(int N)\n     | fin(value V)\n     | dC(NODEC a)\n     | dC(NODEC a, NODEC b)\n     ;\n")),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-Exception"},"data Exception"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rascal"},"data Exception  \n     = divide_by_zero()\n     ;\n")),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-classify"},"function classify"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int classify(value v)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-duplicate"},"function duplicate"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value duplicate(value v)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-dfin"},"function dfin"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value dfin(value v)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-divide"},"function divide"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int divide(int x, int y) throws divide_by_zero"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-safeDivide"},"function safeDivide"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int safeDivide(int x, int y)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-catchStackThrow"},"function catchStackThrow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int catchStackThrow(int i)"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-catchStack"},"function catchStack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value catchStack()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testCatchStack"},"function testCatchStack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testCatchStack()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testClassify1"},"function testClassify1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testClassify1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testClassify2"},"function testClassify2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testClassify2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testClassify3"},"function testClassify3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testClassify3()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testClassify4"},"function testClassify4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testClassify4()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDuplicate1"},"function testDuplicate1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDuplicate1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDuplicate2"},"function testDuplicate2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDuplicate2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDuplicate3"},"function testDuplicate3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDuplicate3()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDuplicate4"},"function testDuplicate4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDuplicate4()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDFin1"},"function testDFin1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDFin1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDFin2"},"function testDFin2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDFin2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDFin3"},"function testDFin3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDFin3()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDFin4"},"function testDFin4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDFin4()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDivide1"},"function testDivide1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDivide1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDivide2"},"function testDivide2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDivide2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-testDivide3"},"function testDivide3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool testDivide3()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyListException1"},"function emptyListException1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyListException1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyMapException1"},"function emptyMapException1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyMapException1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptySetException1"},"function emptySetException1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptySetException1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-indexOutOfBoundsException1"},"function indexOutOfBoundsException1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool indexOutOfBoundsException1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-pathNotFoundException1"},"function pathNotFoundException1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool pathNotFoundException1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyTryStatement"},"function emptyTryStatement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyTryStatement()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyTryBlock"},"function emptyTryBlock"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyTryBlock()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyCatchStatement1"},"function emptyCatchStatement1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyCatchStatement1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-f_using_empty_catch"},"function f_using_empty_catch"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int f_using_empty_catch()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyCatchStatement2"},"function emptyCatchStatement2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyCatchStatement2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-emptyCatchAndFinallyBlock"},"function emptyCatchAndFinallyBlock"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool emptyCatchAndFinallyBlock()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-f_using_finally1"},"function f_using_finally1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int f_using_finally1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-finally1"},"function finally1"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool finally1()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-f_using_finally2"},"function f_using_finally2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"int f_using_finally2()"))),(0,l.kt)("h2",{id:"lang-rascal-tests-functionality-TryCatch-finally2"},"function finally2"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test bool finally2()"))))}y.isMDXComponent=!0}}]);