"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[98972],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},28259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(83117),a=(n(67294),n(3905));const i={title:"Help at the command line",keywords:["help"]},o=void 0,l={unversionedId:"GettingHelp/CommandLine/index",id:"GettingHelp/CommandLine/index",title:"Help at the command line",description:"Synopsis",source:"@site/docs/GettingHelp/CommandLine/index.md",sourceDirName:"GettingHelp/CommandLine",slug:"/GettingHelp/CommandLine/",permalink:"/docs/GettingHelp/CommandLine/",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/GettingHelp/CommandLine/index.md",tags:[],version:"current",frontMatter:{title:"Help at the command line",keywords:["help"]},sidebar:"tutorialSidebar",previous:{title:"Browsing Documentation",permalink:"/docs/GettingHelp/Browsing/"},next:{title:"Frequently Asked Questions",permalink:"/docs/GettingHelp/FAQ/"}},s={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Get help when using Rascal at the command line (CLI, REPL)"),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"While using the command line interface you have two commands at your proposal:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},":help"))),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"First, type ",(0,a.kt)("inlineCode",{parentName:"p"},":help")," and get some introductory help:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell"},'rascal>:help\n:help\nWelcome to the Rascal command shell.\n\nShell commands:\n:help                      Prints this message\n:quit or EOF               Quits the shell\n:set <option> <expression> Sets an option\ne.g. profiling    true/false\n     tracing      true/false\n     errors       true/false\n:edit <modulename>         Opens an editor for that module\n:test                      Runs all unit tests currently loaded\n\nExample rascal statements and declarations:\n1 + 1;                     Expressions simply print their output and (static) type\nint a;                     Declarations allocate a name in the current scope\na = 1;                     Assignments store a value in a (optionally previously declared) variable\nint a = 1;                 Declaration with initialization\nimport IO;                 Importing a module makes its public members available\nprintln("Hello World")     Function calling\n\nPlease read the manual for further information\nok\n')))}u.isMDXComponent=!0}}]);