"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[85425],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>p});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=s(n),p=r,v=c["".concat(u,".").concat(p)]||c[p]||d[p]||l;return n?a.createElement(v,i(i({ref:t},m),{},{components:n})):a.createElement(v,i({ref:t},m))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},37228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(83117),r=(n(67294),n(3905));const l={title:"module demo::lang::Lisra::Runtime"},i=void 0,o={unversionedId:"Library/demo/lang/Lisra/Runtime",id:"Library/demo/lang/Lisra/Runtime",title:"module demo::lang::Lisra::Runtime",description:"Usage",source:"@site/docs/Library/demo/lang/Lisra/Runtime.md",sourceDirName:"Library/demo/lang/Lisra",slug:"/Library/demo/lang/Lisra/Runtime",permalink:"/docs/Library/demo/lang/Lisra/Runtime",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/demo/lang/Lisra/Runtime.md",tags:[],version:"current",frontMatter:{title:"module demo::lang::Lisra::Runtime"},sidebar:"tutorialSidebar",previous:{title:"module demo::lang::Lisra::Pretty",permalink:"/docs/Library/demo/lang/Lisra/Pretty"},next:{title:"module demo::lang::Lisra::Syntax",permalink:"/docs/Library/demo/lang/Lisra/Syntax"}},u={},s=[{value:"Usage",id:"usage",level:4},{value:"data Lval",id:"demo-lang-Lisra-Runtime-Lval",level:2},{value:"alias Scope",id:"demo-lang-Lisra-Runtime-Scope",level:2},{value:"alias Env",id:"demo-lang-Lisra-Runtime-Env",level:2},{value:"function makeEnv",id:"demo-lang-Lisra-Runtime-makeEnv",level:2},{value:"function find",id:"demo-lang-Lisra-Runtime-find",level:2},{value:"alias Result",id:"demo-lang-Lisra-Runtime-Result",level:2}],m={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"usage"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"import demo::lang::Lisra::Runtime;")),(0,r.kt)("h2",{id:"demo-lang-Lisra-Runtime-Lval"},"data Lval"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal"},"data Lval  \n     = Integer(int n)\n     | Atom(str name)\n     | List(list[Lval] elms)\n     | Closure(Result(list[Lval] args, Env env))\n     ;\n")),(0,r.kt)("h2",{id:"demo-lang-Lisra-Runtime-Scope"},"alias Scope"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"map[Lval,Lval]"))),(0,r.kt)("h2",{id:"demo-lang-Lisra-Runtime-Env"},"alias Env"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list[Scope]"))),(0,r.kt)("h2",{id:"demo-lang-Lisra-Runtime-makeEnv"},"function makeEnv"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Env makeEnv(list[Lval] vars, list[Lval] values, Env outer)"))),(0,r.kt)("h2",{id:"demo-lang-Lisra-Runtime-find"},"function find"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"int find(Lval sym, Env e)"))),(0,r.kt)("h2",{id:"demo-lang-Lisra-Runtime-Result"},"alias Result"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tuple[Lval val, Env env]"))))}d.isMDXComponent=!0}}]);