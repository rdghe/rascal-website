"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[33309],{3905:(e,r,n)=>{n.d(r,{Zo:()=>m,kt:()=>p});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},m=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),p=a,d=u["".concat(c,".").concat(p)]||u[p]||f[p]||i;return n?t.createElement(d,o(o({ref:r},m),{},{components:n})):t.createElement(d,o({ref:r},m))}));function p(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},21584:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=n(87462),a=(n(67294),n(3905));const i={title:"module lang::rascal::grammar::definition::References"},o=void 0,l={unversionedId:"Library/lang/rascal/grammar/definition/References",id:"Library/lang/rascal/grammar/definition/References",title:"module lang::rascal::grammar::definition::References",description:"Usage",source:"@site/docs/Library/lang/rascal/grammar/definition/References.md",sourceDirName:"Library/lang/rascal/grammar/definition",slug:"/Library/lang/rascal/grammar/definition/References",permalink:"/docs/Library/lang/rascal/grammar/definition/References",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/lang/rascal/grammar/definition/References.md",tags:[],version:"current",frontMatter:{title:"module lang::rascal::grammar::definition::References"},sidebar:"tutorialSidebar",previous:{title:"module lang::rascal::grammar::definition::Productions",permalink:"/docs/Library/lang/rascal/grammar/definition/Productions"},next:{title:"module lang::rascal::grammar::definition::Regular",permalink:"/docs/Library/lang/rascal/grammar/definition/Regular"}},c={},s=[{value:"Usage",id:"usage",level:4},{value:"function references",id:"lang-rascal-grammar-definition-References-references",level:2}],m={toc:s};function f(e){let{components:r,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import lang::rascal::grammar::definition::References;")),(0,a.kt)("p",null,"  This module implements the semantics of the ... and :cons notations in Rascal grammars."),(0,a.kt)("p",null,"  To give the proper semantics to priorities, this must be run before the priority relation\nis expanded."),(0,a.kt)("h2",{id:"lang-rascal-grammar-definition-References-references"},"function references"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Grammar references(Grammar g)"))))}f.isMDXComponent=!0}}]);