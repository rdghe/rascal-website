"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[51160],{3905:(e,a,r)=>{r.d(a,{Zo:()=>p,kt:()=>d});var n=r(67294);function s(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function t(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?t(Object(r),!0).forEach((function(a){s(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,n,s=function(e,a){if(null==e)return{};var r,n,s={},t=Object.keys(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||(s[r]=e[r]);return s}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=n.createContext({}),c=function(e){var a=n.useContext(o),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},p=function(e){var a=c(e.components);return n.createElement(o.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var r=e.components,s=e.mdxType,t=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=s,g=m["".concat(o,".").concat(d)]||m[d]||u[d]||t;return r?n.createElement(g,i(i({ref:a},p),{},{components:r})):n.createElement(g,i({ref:a},p))}));function d(e,a){var r=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var t=r.length,i=new Array(t);i[0]=m;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var c=2;c<t;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},24365:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var n=r(87462),s=(r(67294),r(3905));const t={title:"Measuring Java"},i=void 0,l={unversionedId:"Recipes/Metrics/MeasuringJava/index",id:"Recipes/Metrics/MeasuringJava/index",title:"Measuring Java",description:"Synopsis",source:"@site/docs/Recipes/Metrics/MeasuringJava/index.md",sourceDirName:"Recipes/Metrics/MeasuringJava",slug:"/Recipes/Metrics/MeasuringJava/",permalink:"/docs/Recipes/Metrics/MeasuringJava/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Recipes/Metrics/MeasuringJava/index.md",tags:[],version:"current",frontMatter:{title:"Measuring Java"},sidebar:"tutorialSidebar",previous:{title:"Metrics",permalink:"/docs/Recipes/Metrics/"},next:{title:"Measuring Classes",permalink:"/docs/Recipes/Metrics/MeasuringJava/MeasuringClasses/"}},o={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Benefits",id:"benefits",level:4},{value:"Pitfalls",id:"pitfalls",level:4}],p={toc:c};function u(e){let{components:a,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h4",{id:"synopsis"},"Synopsis"),(0,s.kt)("p",null,"A few steps using the M3 model to compute basic metrics for a Java project in Eclipse."),(0,s.kt)("h4",{id:"description"},"Description"),(0,s.kt)("p",null,"This is a recipe for computing basic or more advanced metrics from a Java project in Eclipse. We assume:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"You have Rascal installed in an Eclipse instance."),(0,s.kt)("li",{parentName:"ul"},"You have a Java project in your Eclipse workspace that compiles without errors. Let's call it ",(0,s.kt)("inlineCode",{parentName:"li"},"HelloWorld"),".")),(0,s.kt)("p",null,"Now we will follow the ",(0,s.kt)("a",{parentName:"p",href:"/docs/WhyRascal/EASY/"},"EASY")," paradigm:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"a library will be used to ",(0,s.kt)("em",{parentName:"li"},"parse")," the Java code generating ","[Rascalopedia:AbstractSyntaxTree]"),(0,s.kt)("li",{parentName:"ul"},"the same library will generate a ","[Rascal:Values/Relation]","al model to represent interesting facts between Java source code artifacts"),(0,s.kt)("li",{parentName:"ul"},"then we can write queries over the generated trees and relations using ","[Rascal:Expressions]",".")),(0,s.kt)("p",null,"These are a number of recipes for measuring different things about Java:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Recipes/Metrics/MeasuringJava/MeasuringClasses/"},"measuring classes")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/Recipes/Metrics/MeasuringJava/MeasuringMethods/"},"measuring methods"))),(0,s.kt)("h4",{id:"examples"},"Examples"),(0,s.kt)("p",null,"First we import the basic data types for representing Java. The model is called ",(0,s.kt)("em",{parentName:"p"},"M3"),", and its definition is split acros a generic\nlanguage independent module called ","[Rascal:analysis/m3/Core]"," and a Java specific part called ","[Rascal:lang/java/m3/Core]",". Have a look at the documentation\nof these modules later. For now we will go through using them in a few examples."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"rascal>import lang::java::m3::Core;\nok\nrascal>import lang::java::m3::AST;\nok\n")),(0,s.kt)("p",null,'"Snakes and Ladders" is an example Java project of which we have stored the source code in ',(0,s.kt)("inlineCode",{parentName:"p"},"|tmp:///snakes-and-ladders/src|")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},"rascal>|tmp:///snakes-and-ladders/src/snakes/|.ls\nlist[loc]: [\n  |tmp:///snakes-and-ladders/src/snakes/Die.java|,\n  |tmp:///snakes-and-ladders/src/snakes/SimpleGameTest.java|,\n  |tmp:///snakes-and-ladders/src/snakes/LastSquare.java|,\n  |tmp:///snakes-and-ladders/src/snakes/Snake.java|,\n  |tmp:///snakes-and-ladders/src/snakes/Ladder.java|,\n  |tmp:///snakes-and-ladders/src/snakes/FirstSquare.java|,\n  |tmp:///snakes-and-ladders/src/snakes/DieTest.java|,\n  |tmp:///snakes-and-ladders/src/snakes/Player.java|,\n  |tmp:///snakes-and-ladders/src/snakes/Game.java|,\n  |tmp:///snakes-and-ladders/src/snakes/ISquare.java|,\n  |tmp:///snakes-and-ladders/src/snakes/Square.java|\n]\n")),(0,s.kt)("p",null,"Now we can extract our overview model, using the classpath we derived:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},"rascal>myModel = createM3FromDirectory(|tmp:///snakes-and-ladders/src|);\n")),(0,s.kt)("admonition",{type:"danger"},(0,s.kt)("p",{parentName:"admonition"},"Rascal code execution failed (unexpectedly) during compilation of this documentation.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"|std:///lang/java/m3/Core.rsc|(5265,16,<118,8>,<118,24>): Undeclared variable: includeJarModels\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/UndeclaredVariable/UndeclaredVariable.html|\nok\n")),(0,s.kt)("p",null,"Some projects have extensive classpaths which the M3 extractor requires for accurate Java analysis.\nYou can use this code to extract a classpath if the project is a Maven project:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},"rascal>import util::Reflective;\nok\nrascal>cp = getProjectPathConfig(|tmp:///snakes-and-ladders|).javaCompilerPath;\nlist[loc]: [\n  |file:///Users/jurgenv/git/rascal/target/classes|,\n  |file:///Users/jurgenv/.m2/repository/org/rascalmpl/rascal-p2-dependencies-repackaged/0.6.0/rascal-p2-dependencies-repackaged-0.6.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/junit/junit/4.13.1/junit-4.13.1.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar|,\n  |file:///Users/jurgenv/.m2/repository/io/usethesource/vallang/0.14.6/vallang-0.14.6.jar|,\n  |file:///Users/jurgenv/.m2/repository/io/usethesource/capsule/0.7.1/capsule-0.7.1.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/tukaani/xz/1.9/xz-1.9.jar|,\n  |file:///Users/jurgenv/.m2/repository/com/github/luben/zstd-jni/1.5.2-3/zstd-jni-1.5.2-3.jar|,\n  |file:///Users/jurgenv/.m2/repository/com/github/ben-manes/caffeine/caffeine/3.0.4/caffeine-3.0.4.jar|,\n  |file:///Users/jurgenv/.m2/repository/com/google/errorprone/error_prone_annotations/2.9.0/error_prone_annotations-2.9.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/checkerframework/checker-qual/3.24.0/checker-qual-3.24.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/ow2/asm/asm/9.2/asm-9.2.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/ow2/asm/asm-tree/9.2/asm-tree-9.2.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar|,\n  |file:///Users/jurgenv/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar|,\n  |file:///Users/jurgenv/.m2/repository/com/google/code/gson/gson/2.8.9/gson-2.8.9.jar|,\n  |file:///Users/jurgenv/.m2/repository/jline/jline/2.14.6/jline-2.14.6.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/yaml/snakeyaml/1.31/snakeyaml-1.31.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/jdom/jdom2/2.0.6/jdom2-2.0.6.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-core/7.5.0/lucene-core-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-highlighter/7.5.0/lucene-highlighter-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-join/7.5.0/lucene-join-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-memory/7.5.0/lucene-memory-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-queries/7.5.0/lucene-queries-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-analyzers-common/7.5.0/lucene-analyzers-common-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-queryparser/7.5.0/lucene-queryparser-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/apache/lucene/lucene-sandbox/7.5.0/lucene-sandbox-7.5.0.jar|,\n  |file:///Users/jurgenv/.m2/repository/org/nanohttpd/nanohttpd/2.3.1/nanohttpd-2.3.1.jar|,\n  |file:///Users/jurgenv/.m2/repository/com/ibm/icu/icu4j/69.1/icu4j-69.1.jar|,\n  |file:///Users/jurgenv/.m2/repository/com/beust/jcommander/1.72/jcommander-1.72.jar|\n]\n")),(0,s.kt)("p",null,"and then pass it into the M3 extractor (this project does not have dependencies)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue",",continue":!0},"rascal>myModel = createM3FromDirectory(|tmp:///snakes-and-ladders/src|, classPath=cp);\n")),(0,s.kt)("admonition",{type:"danger"},(0,s.kt)("p",{parentName:"admonition"},"Rascal code execution failed (unexpectedly) during compilation of this documentation.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"|std:///lang/java/m3/Core.rsc|(5265,16,<118,8>,<118,24>): Undeclared variable: includeJarModels\nAdvice: |http://tutor.rascal-mpl.org/Errors/Static/UndeclaredVariable/UndeclaredVariable.html|\nok\n")),(0,s.kt)("h4",{id:"benefits"},"Benefits"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Notice that ",(0,s.kt)("em",{parentName:"li"},"all")," these ",(0,s.kt)("a",{parentName:"li",href:"/docs/Rascal/Expressions/Values/Location/"},"Location")," literals are hyperlinks and you can click on them to go the source code that they point to. Try it!"),(0,s.kt)("li",{parentName:"ul"},"M3 models are great for metrics, but also they are the basis for many other static analyses"),(0,s.kt)("li",{parentName:"ul"},"See ",(0,s.kt)("a",{parentName:"li",href:"/docs/Recipes/Metrics/MeasuringJava/MeasuringClasses/"},"measuring classes")," and ",(0,s.kt)("a",{parentName:"li",href:"/docs/Recipes/Metrics/MeasuringJava/MeasuringMethods/"},"measuring methods")," for more benefits")),(0,s.kt)("h4",{id:"pitfalls"},"Pitfalls"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"See ",(0,s.kt)("a",{parentName:"li",href:"/docs/Recipes/Metrics/MeasuringJava/MeasuringClasses/"},"measuring classes")," and ",(0,s.kt)("a",{parentName:"li",href:"/docs/Recipes/Metrics/MeasuringJava/MeasuringMethods/"},"measuring methods")," for more pitfalls")))}u.isMDXComponent=!0}}]);