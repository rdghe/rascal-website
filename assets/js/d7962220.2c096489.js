"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[49663],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>m});var n=i(67294);function o(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){o(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function r(e,t){if(null==e)return{};var i,n,o=function(e,t){if(null==e)return{};var i,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||(o[i]=e[i]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=c(i),m=o,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return i?n.createElement(k,a(a({ref:t},p),{},{components:i})):n.createElement(k,a({ref:t},p))}));function m(e,t){var i=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=i.length,a=new Array(l);a[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,a[1]=r;for(var c=2;c<l;c++)a[c]=i[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},83639:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var n=i(87462),o=(i(67294),i(3905));const l={title:"module Location"},a=void 0,r={unversionedId:"Library/Location",id:"Library/Location",title:"module Location",description:"Usage",source:"@site/docs/Library/Location.md",sourceDirName:"Library",slug:"/Library/Location",permalink:"/docs/Library/Location",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Library/Location.md",tags:[],version:"current",frontMatter:{title:"module Location"},sidebar:"tutorialSidebar",previous:{title:"module ListRelation",permalink:"/docs/Library/ListRelation"},next:{title:"module Map",permalink:"/docs/Library/Map"}},s={},c=[{value:"Usage",id:"usage",level:4},{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"function relativize",id:"Location-relativize",level:2},{value:"Synopsis",id:"synopsis-1",level:4},{value:"Description",id:"description-1",level:4},{value:"function isSameFile",id:"Location-isSameFile",level:2},{value:"Synopsis",id:"synopsis-2",level:4},{value:"function isLexicallyLess",id:"Location-isLexicallyLess",level:2},{value:"Synopsis",id:"synopsis-3",level:4},{value:"Description",id:"description-2",level:4},{value:"Pittfalls",id:"pittfalls",level:4},{value:"function getContent",id:"Location-getContent",level:2},{value:"Synopsis",id:"synopsis-4",level:4},{value:"function isStrictlyContainedIn",id:"Location-isStrictlyContainedIn",level:2},{value:"Synopsis",id:"synopsis-5",level:4},{value:"Description",id:"description-3",level:4},{value:"function isContainedIn",id:"Location-isContainedIn",level:2},{value:"Synopsis",id:"synopsis-6",level:4},{value:"Description",id:"description-4",level:4},{value:"function beginsBefore",id:"Location-beginsBefore",level:2},{value:"Synopsis",id:"synopsis-7",level:4},{value:"function isBefore",id:"Location-isBefore",level:2},{value:"Synopsis",id:"synopsis-8",level:4},{value:"Description",id:"description-5",level:4},{value:"function isImmediatelyBefore",id:"Location-isImmediatelyBefore",level:2},{value:"Synopsis",id:"synopsis-9",level:4},{value:"Description",id:"description-6",level:4},{value:"function beginsAfter",id:"Location-beginsAfter",level:2},{value:"Synopsis",id:"synopsis-10",level:4},{value:"function isAfter",id:"Location-isAfter",level:2},{value:"Synopsis",id:"synopsis-11",level:4},{value:"function isImmediatelyAfter",id:"Location-isImmediatelyAfter",level:2},{value:"Synopsis",id:"synopsis-12",level:4},{value:"function isOverlapping",id:"Location-isOverlapping",level:2},{value:"Synopsis",id:"synopsis-13",level:4},{value:"function cover",id:"Location-cover",level:2},{value:"Synopsis",id:"synopsis-14",level:4},{value:"Description",id:"description-7",level:4}],p={toc:c};function u(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"import Location;")),(0,o.kt)("h4",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Library functions for source locations."),(0,o.kt)("h4",{id:"description"},"Description"),(0,o.kt)("p",null,"For a description of source locations see ",(0,o.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/Location/"},"Location")," in the Rascal Language Reference."),(0,o.kt)("p",null,"The following functions are defined for source locations:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-beginsAfter"},"beginsAfter")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-beginsBefore"},"beginsBefore")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-cover"},"cover")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-getContent"},"getContent")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isAfter"},"isAfter")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isBefore"},"isBefore")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isContainedIn"},"isContainedIn")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isImmediatelyAfter"},"isImmediatelyAfter")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isImmediatelyBefore"},"isImmediatelyBefore")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isLexicallyLess"},"isLexicallyLess")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isOverlapping"},"isOverlapping")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isSameFile"},"isSameFile")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-isStrictlyContainedIn"},"isStrictlyContainedIn")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Library/Location#Location-relativize"},"relativize"))),(0,o.kt)("p",null,"A source location ",(0,o.kt)("inlineCode",{parentName:"p"},"l")," refers to a text fragment in another file or resource. To ease the description we will\ntalk about ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"l")," 's text")," instead of ",(0,o.kt)("em",{parentName:"p"},"the text ",(0,o.kt)("inlineCode",{parentName:"em"},"l")," refers to"),"."),(0,o.kt)("h2",{id:"Location-relativize"},"function relativize"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"loc relativize(loc outside, loc inside)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"loc relativize(list[loc] haystack, loc needle)"))),(0,o.kt)("h4",{id:"synopsis-1"},"Synopsis"),(0,o.kt)("p",null,"Extracts a path relative to a parent location. "),(0,o.kt)("h4",{id:"description-1"},"Description"),(0,o.kt)("p",null,"So from ",(0,o.kt)("inlineCode",{parentName:"p"},"x:///a/b`` and "),"x:///a/b/c`",(0,o.kt)("inlineCode",{parentName:"p"},"this makes"),"relative:///c`.\nIf the outside does not envelop the inside, then the original loc is returned."),(0,o.kt)("h2",{id:"Location-isSameFile"},"function isSameFile"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isSameFile(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-2"},"Synopsis"),(0,o.kt)("p",null,"Check that two locations refer to the same file."),(0,o.kt)("h2",{id:"Location-isLexicallyLess"},"function isLexicallyLess"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isLexicallyLess(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-3"},"Synopsis"),(0,o.kt)("p",null,"Compare two location values lexicographically."),(0,o.kt)("h4",{id:"description-2"},"Description"),(0,o.kt)("p",null,"When the two locations refer to different files, their paths are compared as string.\nWhen they refer to the same file, their offsets are compared when present."),(0,o.kt)("h4",{id:"pittfalls"},"Pittfalls"),(0,o.kt)("p",null,"This ordering regards the location value itself as opposed to the text it refers to."),(0,o.kt)("h2",{id:"Location-getContent"},"function getContent"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"str getContent(loc l)"))),(0,o.kt)("h4",{id:"synopsis-4"},"Synopsis"),(0,o.kt)("p",null,"Get the textual content a location refers to."),(0,o.kt)("h2",{id:"Location-isStrictlyContainedIn"},"function isStrictlyContainedIn"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isStrictlyContainedIn(loc inner, loc outer)"))),(0,o.kt)("h4",{id:"synopsis-5"},"Synopsis"),(0,o.kt)("p",null,"Is a location textually (strictly) contained in another location?"),(0,o.kt)("h4",{id:"description-3"},"Description"),(0,o.kt)("p",null,"Strict containment between two locations ",(0,o.kt)("inlineCode",{parentName:"p"},"inner")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"outer")," holds when"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"outer")," 's text begins before ",(0,o.kt)("inlineCode",{parentName:"li"},"inner")," 's text, or"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"outer")," 's text ends after ",(0,o.kt)("inlineCode",{parentName:"li"},"inner")," 's text, or"),(0,o.kt)("li",{parentName:"ul"},"both.")),(0,o.kt)("h2",{id:"Location-isContainedIn"},"function isContainedIn"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isContainedIn(loc inner, loc outer)"))),(0,o.kt)("h4",{id:"synopsis-6"},"Synopsis"),(0,o.kt)("p",null,"Is a location textually contained in another location?"),(0,o.kt)("h4",{id:"description-4"},"Description"),(0,o.kt)("p",null,"Containment between two locations ",(0,o.kt)("inlineCode",{parentName:"p"},"inner")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"outer")," holds when"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"inner")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"outer")," are equal, or"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"inner")," is strictly contained in ",(0,o.kt)("inlineCode",{parentName:"li"},"outer"),".")),(0,o.kt)("h2",{id:"Location-beginsBefore"},"function beginsBefore"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool beginsBefore(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-7"},"Synopsis"),(0,o.kt)("p",null,"Begins a location's text before (but may overlap with) another location's text?"),(0,o.kt)("h2",{id:"Location-isBefore"},"function isBefore"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isBefore(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-8"},"Synopsis"),(0,o.kt)("p",null,"Begins and ends a location's text before another location's text?"),(0,o.kt)("h4",{id:"description-5"},"Description"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"isBefore(l, r)")," holds when ",(0,o.kt)("inlineCode",{parentName:"p"},"l")," 's text occurs textually before ",(0,o.kt)("inlineCode",{parentName:"p"},"r")," 's text."),(0,o.kt)("h2",{id:"Location-isImmediatelyBefore"},"function isImmediatelyBefore"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isImmediatelyBefore(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-9"},"Synopsis"),(0,o.kt)("p",null,"Occurs a location's text ",(0,o.kt)("em",{parentName:"p"},"immediately")," before another location's text?"),(0,o.kt)("h4",{id:"description-6"},"Description"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"isImmediatelyBefore(l, r)")," holds when ",(0,o.kt)("inlineCode",{parentName:"p"},"l")," 's text occurs textually before, and is adjacent to, ",(0,o.kt)("inlineCode",{parentName:"p"},"r")," 's text."),(0,o.kt)("h2",{id:"Location-beginsAfter"},"function beginsAfter"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool beginsAfter(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-10"},"Synopsis"),(0,o.kt)("p",null,"Begins a location's text after (but may overlap with) another location's text?"),(0,o.kt)("p",null,"Description\n",(0,o.kt)("inlineCode",{parentName:"p"},"beginsAfter(l, r)")," holds when ",(0,o.kt)("inlineCode",{parentName:"p"},"l")," 's text begins after ",(0,o.kt)("inlineCode",{parentName:"p"},"r")," 's text. No assumption is made about the end of both texts.\nIn other words, ",(0,o.kt)("inlineCode",{parentName:"p"},"l")," 's text may end before or after the end of ",(0,o.kt)("inlineCode",{parentName:"p"},"r")," 's text."),(0,o.kt)("h2",{id:"Location-isAfter"},"function isAfter"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isAfter(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-11"},"Synopsis"),(0,o.kt)("p",null,"Is a location's text completely after another location's text?"),(0,o.kt)("h2",{id:"Location-isImmediatelyAfter"},"function isImmediatelyAfter"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isImmediatelyAfter(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-12"},"Synopsis"),(0,o.kt)("p",null,"Is a location's text ",(0,o.kt)("em",{parentName:"p"},"immediately")," after another location's text?"),(0,o.kt)("h2",{id:"Location-isOverlapping"},"function isOverlapping"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"bool isOverlapping(loc l, loc r)"))),(0,o.kt)("h4",{id:"synopsis-13"},"Synopsis"),(0,o.kt)("p",null,"Refer two locations to text that overlaps?"),(0,o.kt)("h2",{id:"Location-cover"},"function cover"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"loc cover(list[loc] locs)"))),(0,o.kt)("h4",{id:"synopsis-14"},"Synopsis"),(0,o.kt)("p",null,"Compute a location that textually covers the text of a list of locations."),(0,o.kt)("h4",{id:"description-7"},"Description"),(0,o.kt)("p",null,"Create a new location that refers to the smallest text area that overlaps with the text of the given locations.\nThe given locations should all refer to the same file but they may be overlapping or be contained in each other."))}u.isMDXComponent=!0}}]);