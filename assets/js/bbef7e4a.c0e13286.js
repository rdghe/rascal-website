"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[88476],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,y=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return r?n.createElement(y,s(s({ref:t},c),{},{components:r})):n.createElement(y,s({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},47676:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={title:"Empty List"},s=void 0,l={unversionedId:"RunTimeErrors/RuntimeExceptions/EmptyList/index",id:"RunTimeErrors/RuntimeExceptions/EmptyList/index",title:"Empty List",description:"Synopsis",source:"@site/docs/RunTimeErrors/RuntimeExceptions/EmptyList/index.md",sourceDirName:"RunTimeErrors/RuntimeExceptions/EmptyList",slug:"/RunTimeErrors/RuntimeExceptions/EmptyList/",permalink:"/docs/RunTimeErrors/RuntimeExceptions/EmptyList/",draft:!1,tags:[],version:"current",frontMatter:{title:"Empty List"},sidebar:"tutorialSidebar",previous:{title:"Assertion Failed",permalink:"/docs/RunTimeErrors/RuntimeExceptions/AssertionFailed/"},next:{title:"Empty Map",permalink:"/docs/RunTimeErrors/RuntimeExceptions/EmptyMap/"}},o={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Types",id:"types",level:4},{value:"Usage",id:"usage",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],c={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"synopsis"},"Synopsis"),(0,a.kt)("p",null,"Illegal operation on an empty list."),(0,a.kt)("h4",{id:"types"},"Types"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"data RuntimeException = EmptyList();")),(0,a.kt)("h4",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import Exception;")," (only needed when ",(0,a.kt)("inlineCode",{parentName:"p"},"EmptyList")," is used in ",(0,a.kt)("inlineCode",{parentName:"p"},"catch"),")"),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"Rascal provides many operations and functions on lists, see ",(0,a.kt)("a",{parentName:"p",href:"/docs/Rascal/Expressions/Values/List/"},"list values"),"\nand ",(0,a.kt)("a",{parentName:"p",href:"/docs/Library/List"},"list functions"),".\nThis error is generated when a function or operation cannot handle the empty list."),(0,a.kt)("p",null,"Remedies:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Guard the function or operation with a test on the empty list (",(0,a.kt)("a",{parentName:"li",href:"/docs/Library/List#List-isEmpty"},"isEmpty"),") and\ntake alternative action in that case."),(0,a.kt)("li",{parentName:"ul"},"Catch the ",(0,a.kt)("inlineCode",{parentName:"li"},"EmptyList")," yourself, see ",(0,a.kt)("a",{parentName:"li",href:"/docs/Rascal/Statements/TryCatch/"},"try catch"),".")),(0,a.kt)("h4",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Import the ",(0,a.kt)("inlineCode",{parentName:"p"},"List")," library and introduce ",(0,a.kt)("inlineCode",{parentName:"p"},"L")," with an empty list as value:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",error",",error":!0},"rascal>import List;\nok\nrascal>L = [];\nlist[void]: []\n")),(0,a.kt)("p",null,"Taking the head of an empty list gives an error:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},"rascal>head(L);\n|file:///Users/jurgenv/git/rascal/src/org/rascalmpl/library/List.rsc|(4522,9,<195,38>,<195,47>): EmptyList()\n    at head(|file:///Users/jurgenv/git/rascal/src/org/rascalmpl/library/List.rsc|(4484,52,<195,0>,<195,52>))\n    at $shell$(|prompt:///|(0,8,<1,0>,<1,8>))\nok\n")),(0,a.kt)("p",null,"This is the case when taking the tail as well:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},"rascal>tail(L);\n|file:///Users/jurgenv/git/rascal/src/org/rascalmpl/library/List.rsc|(18315,9,<841,44>,<841,53>): EmptyList()\n    at tail(|file:///Users/jurgenv/git/rascal/src/org/rascalmpl/library/List.rsc|(18271,58,<841,0>,<841,58>))\n    at $shell$(|prompt:///|(0,8,<1,0>,<1,8>))\nok\n")),(0,a.kt)("p",null,"We can also catch the ",(0,a.kt)("inlineCode",{parentName:"p"},"EmptyList")," error. First import the Rascal exceptions (which are also included in ",(0,a.kt)("inlineCode",{parentName:"p"},"Prelude"),")\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"IO"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},'rascal>import Exception;\nok\nrascal>import IO;\nok\nrascal>try \n>>>>>>>  println(head(L)); \n>>>>>>>catch EmptyList(): \n>>>>>>>  println("Cannot take head of empty list");\nCannot take head of empty list\nok\n')))}m.isMDXComponent=!0}}]);