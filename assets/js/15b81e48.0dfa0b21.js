"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[89600],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},80054:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={title:"Annotation Declaration",keywords:["anno","@"]},i=void 0,l={unversionedId:"Rascal/Declarations/Annotation/index",id:"Rascal/Declarations/Annotation/index",title:"Annotation Declaration",description:"Synopsis",source:"@site/docs/Rascal/Declarations/Annotation/index.md",sourceDirName:"Rascal/Declarations/Annotation",slug:"/Rascal/Declarations/Annotation/",permalink:"/docs/Rascal/Declarations/Annotation/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/Rascal/Declarations/Annotation/index.md",tags:[],version:"current",frontMatter:{title:"Annotation Declaration",keywords:["anno","@"]},sidebar:"tutorialSidebar",previous:{title:"Tag Declaration",permalink:"/docs/Rascal/Declarations/Tag/"},next:{title:"Variable Declaration",permalink:"/docs/Rascal/Declarations/Variable/"}},s={},p=[{value:"Synopsis",id:"synopsis",level:4},{value:"Syntax",id:"syntax",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4},{value:"Pitfalls",id:"pitfalls",level:4}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h4",{id:"synopsis"},"Synopsis"),(0,r.kt)("p",null,"Declare an annotation type for nodes. This feature is deprecated; please use ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Declarations/AlgebraicDataType/"},"keyword fields")," instead."),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"anno AnnoType OnType @ Name")),(0,r.kt)("h4",{id:"description"},"Description"),(0,r.kt)("p",null,"An annotation may be associated with any node value, be it a pure node or some ",(0,r.kt)("a",{parentName:"p",href:"/docs/Rascal/Declarations/AlgebraicDataType/"},"./Algebraic Data Type")," derived from it."),(0,r.kt)("p",null,"Annotations are intended to attach application data to values,\nlike adding position information or control flow information to source code or adding visualization information to a graph."),(0,r.kt)("p",null,"An annotation declaration defines:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"AnnoType"),", the type of the annotation values,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"OnType"),", the type of the values that are being annotated,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Name"),", the name of the annotation.")),(0,r.kt)("p",null,"Any value of any named type can be annotated and the type of these annotations can be declared precisely."),(0,r.kt)("p",null,"The following constructs are provided for handling annotations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Val @ Anno"),": is an expression that retrieves the value of annotation ",(0,r.kt)("em",{parentName:"p"},"Anno")," of value ",(0,r.kt)("em",{parentName:"p"},"Val")," (may be undefined!). ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Val\u2081[@Anno = Val\u2082]"),": is an expression that sets the value of annotation ",(0,r.kt)("em",{parentName:"p"},"Anno")," of the value ",(0,r.kt)("em",{parentName:"p"},"Val\u2081")," to ",(0,r.kt)("em",{parentName:"p"},"Val\u2082"),"\nand returns ",(0,r.kt)("em",{parentName:"p"},"Val\u2081")," with the new annotation value as result. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Var @ Anno = Val"),": is an assignment statement that sets the value of annotation ",(0,r.kt)("em",{parentName:"p"},"Anno")," of the value of variable ",(0,r.kt)("em",{parentName:"p"},"Var")," to ",(0,r.kt)("em",{parentName:"p"},"Val"),"."))),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Examples have been removed since this feature is deprecated. "),(0,r.kt)("h4",{id:"pitfalls"},"Pitfalls"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Annotations are cumbersome since they change the structure of ",(0,r.kt)("a",{parentName:"li",href:"/docs/Rascal/Expressions/Values/"},"Values")," without changing the semantics of the identity of a value. This is why they are deprecated.")))}u.isMDXComponent=!0}}]);