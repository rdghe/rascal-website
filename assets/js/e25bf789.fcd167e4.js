"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[6899],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return k}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),s=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(a),k=l,d=u["".concat(i,".").concat(k)]||u[k]||c[k]||r;return a?n.createElement(d,o(o({ref:t},m),{},{components:a})):n.createElement(d,o({ref:t},m))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:l,o[1]=p;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1316:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var n=a(3117),l=a(102),r=(a(7294),a(3905)),o=["components"],p={sidebar_position:7,title:"Rascal Shell"},i=void 0,s={unversionedId:"RascalShell",id:"RascalShell",title:"Rascal Shell",description:"Synopsis.",source:"@site/docs/RascalShell.md",sourceDirName:".",slug:"/RascalShell",permalink:"/docs/RascalShell",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/RascalShell.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Rascal Shell"},sidebar:"tutorialSidebar",previous:{title:"Libraries",permalink:"/docs/Libraries"},next:{title:"TypePal",permalink:"/docs/TypePal"}},m={},c=[{value:"Read Eval Print Loop (REPL)",id:"read-eval-print-loop-repl",level:2},{value:"Commands",id:"commands",level:2},{value:"Clear Command",id:"clear-command",level:3},{value:"Edit Command",id:"edit-command",level:3},{value:"Help Command",id:"help-command",level:3},{value:"Quit Command",id:"quit-command",level:3},{value:"Set Command",id:"set-command",level:3},{value:"Test Command",id:"test-command",level:3},{value:"Command Completion",id:"command-completion",level:2},{value:"Command History",id:"command-history",level:2},{value:"Keyboard Shortcuts",id:"keyboard-shortcuts",level:2}],u={toc:c};function k(e){var t=e.components,a=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"The interactive Rascal commandline shell"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"The Rascal shell is an interactive console\u2009\u2014\u2009or if you prefer a Command Line Interface (CLI) or Read Eval Print Loop\n(REPL)\u2009\u2014\u2009for entering and executing Rascal ",(0,r.kt)("em",{parentName:"p"},"expressions"),", ",(0,r.kt)("em",{parentName:"p"},"statements")," and ",(0,r.kt)("em",{parentName:"p"},"declarations"),"."),(0,r.kt)("p",null,"Next to Rascal language expressions, the shell features a number of specific commands available only in the shell:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#RascalShell-REPL"},"Read Eval Print Loop (REPL)"),":")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#RascalShell-Commands"},"Commands"),": RascalShell commands.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#RascalShell-Completion"},"Command Completion"),": Context-dependent command completion.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#RascalShell-History"},"Command History"),": Use the command history.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#RascalShell-Keyboard"},"Keyboard Shortcuts"),": Keybord shortcuts."))),(0,r.kt)("h2",{id:"read-eval-print-loop-repl"},"Read Eval Print Loop (REPL)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"The Rascal Read Eval Print Loop (REPL)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"The Rascal shell is an interactive console to experiment with Rascal code. You can write your own expressions,\nstatements and declarations right there. Or, you can import library modules and try out their functionality."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples.")),(0,r.kt)("p",null,"Rascal code can be a trivial expression"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"1+2\n")),(0,r.kt)("p",null,"Or a more complex list comprehension:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"[ n * n | int n <- [0..10] ]\n")),(0,r.kt)("p",null,"Or importing a module and using a function declared in it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"import List;\nsize([ n * n | int n <- [0..10] ])\n")),(0,r.kt)("p",null,"Another use is to declare variables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"int x = 2;\nint y = 3;\n")),(0,r.kt)("p",null,"and use them later on:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"x * y\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rascal is quite demanding as far as the proper placement of semicolons (",(0,r.kt)("inlineCode",{parentName:"p"},";"),") is concerned.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rascal is a statically typed language but we have not released the type checker yet. Sometimes this is confusing\nbecause the interpreter will try to run otherwise broken code and produce an error message."))),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"RascalShell commands"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"The RascalShell provides several built-in commands:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Commands-Clear"},"Clear Command"),": Clear all break points.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Commands-Edit"},"Edit Command"),": Open an editor for a Rascal module.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Commands-Help"},"Help Command"),": Get a reminder of the shell commands.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Commands-Quit"},"Quit Command"),": Quit the RascalShell.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Commands-Set"},"Set Command"),": Set parameters that control options of RascalShell.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#Commands-Test"},"Test Command"),": Run tests."))),(0,r.kt)("h3",{id:"clear-command"},"Clear Command"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Clear all break points."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax.")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"clear")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"Removes all break points."),(0,r.kt)("h3",{id:"edit-command"},"Edit Command"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Open an editor for a Rascal module"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":edit ModuleName"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"import IO;\n:edit IO\n")),(0,r.kt)("h3",{id:"help-command"},"Help Command"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Get a reminder of the shell commands."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":help"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},":help\n")),(0,r.kt)("h3",{id:"quit-command"},"Quit Command"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Quit the RascalShell."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},":quit"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("span",{class:"keycombo"},"Ctrl+d")," or Eof")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"Typing ",(0,r.kt)("inlineCode",{parentName:"p"},":quit")," or ",(0,r.kt)("span",{class:"keycombo"},"Ctrl+d")," will end the execution of the shell."),(0,r.kt)("h3",{id:"set-command"},"Set Command"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Set parameters that control options of RascalShell."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},":set"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},":set Option TrueOrFalse")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"The shell provides a number of options to control its behaviour. The ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," command manages their value."),(0,r.kt)("p",null,"In the first form, the list of current settings is printed."),(0,r.kt)("p",null,"In the second form a specific option is set to true or false."),(0,r.kt)("p",null,"The options are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"profiling"),": record execution times while executing subsequent Rascal code and print the results after each\nRascalShell command.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"tracing"),": while executing Rascal code, print a trace of all function calls.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"errors"),": print more diagnostic stack traces if available (of internal functionality)"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples.")),(0,r.kt)("p",null,"Turn ",(0,r.kt)("inlineCode",{parentName:"p"},"tracing")," on and execute a function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"import demo::basic::Factorial;\n:set tracing true\nfac(5)\n")),(0,r.kt)("p",null,"Turn trace off and execute the same function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},":set tracing false\nfac(5)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Pitfalls.")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," command is completely unrelated to Rascal\u2019s built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," type."),(0,r.kt)("h3",{id:"test-command"},"Test Command"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Run tests."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":test"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"Run Rascal tests. The tests in all currently imported modules are executed and the results are reported in the terminal."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples.")),(0,r.kt)("p",null,"Execute the tests in an imported module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"import demo::basic::Factorial;\ntest\n")),(0,r.kt)("p",null,"Execute the tests in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Integers")," module in the Rascal test suite:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"test lang::rascal::tests::basic::Integers\n")),(0,r.kt)("h2",{id:"command-completion"},"Command Completion"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Context-dependent command completion."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"RascalShell provides context-dependent command completion. Typing Tab autocompletes from the current cursor position and\nwill show all possible completions (or will directly add the completion when this is unique)."),(0,r.kt)("h2",{id:"command-history"},"Command History"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Use the command history."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"RascalShell provides a history of previously entered commands. This can be accessed as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u2191"),(0,r.kt)("td",{parentName:"tr",align:null},"Show previous command in history; Type Return to execute it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u2193"),(0,r.kt)("td",{parentName:"tr",align:null},"Next command in history; Type Return to execute it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+r")),(0,r.kt)("td",{parentName:"tr",align:null},"(After search text) Search backward in history.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+s")),(0,r.kt)("td",{parentName:"tr",align:null},"(After search text) Forward search in history")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal-shell"},"a = 1;\nb = 2;\nc = 3;\n")),(0,r.kt)("p",null,"Typing \u2191 will then show the text (not followed by Return","!","):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal"},"rascal>c = 3;\n")),(0,r.kt)("p",null,"Typing Return will reexecute ",(0,r.kt)("inlineCode",{parentName:"p"},"c = 3"),"."),(0,r.kt)("p",null,"Typing the letter ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," (the search text in this example) followed by ",(0,r.kt)("span",{class:"keycombo"},"Ctrl+r")," will show the\ntext:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rascal"},"(reverse-i-search)`a': a = 3;\n")),(0,r.kt)("p",null,"And again, typing Return will reexecute ",(0,r.kt)("inlineCode",{parentName:"p"},"a = 3"),"."),(0,r.kt)("h2",{id:"keyboard-shortcuts"},"Keyboard Shortcuts"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Synopsis.")),(0,r.kt)("p",null,"Keybord shortcuts."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description.")),(0,r.kt)("p",null,"When handling console input, RascalShell supports a subset of the shortcuts provided by ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/GNU_Readline"},"GNU\nReadline")),(0,r.kt)("p",null,"Some convenient shortcuts are:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+a")),(0,r.kt)("td",{parentName:"tr",align:null},"Move cursor to begin of line.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+d")),(0,r.kt)("td",{parentName:"tr",align:null},"EOF marker, closes the current RascalShell (equivalent to the command (",(0,r.kt)("inlineCode",{parentName:"td"},"quit"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+e")),(0,r.kt)("td",{parentName:"tr",align:null},"Move cursor to end of line.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+k")),(0,r.kt)("td",{parentName:"tr",align:null},"Kill remainder of line after cursor.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"keycombo"},"Ctrl+l")),(0,r.kt)("td",{parentName:"tr",align:null},"Clear screen.")))))}k.isMDXComponent=!0}}]);