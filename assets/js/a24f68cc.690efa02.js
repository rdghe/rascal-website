"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[26394],{3905:(t,a,e)=>{e.d(a,{Zo:()=>u,kt:()=>f});var r=e(67294);function n(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function o(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,r)}return e}function c(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?o(Object(e),!0).forEach((function(a){n(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function l(t,a){if(null==t)return{};var e,r,n=function(t,a){if(null==t)return{};var e,r,n={},o=Object.keys(t);for(r=0;r<o.length;r++)e=o[r],a.indexOf(e)>=0||(n[e]=t[e]);return n}(t,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)e=o[r],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(n[e]=t[e])}return n}var i=r.createContext({}),s=function(t){var a=r.useContext(i),e=a;return t&&(e="function"==typeof t?t(a):c(c({},a),t)),e},u=function(t){var a=s(t.components);return r.createElement(i.Provider,{value:a},t.children)},p={inlineCode:"code",wrapper:function(t){var a=t.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(t,a){var e=t.components,n=t.mdxType,o=t.originalType,i=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),d=s(e),f=n,g=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return e?r.createElement(g,c(c({ref:a},u),{},{components:e})):r.createElement(g,c({ref:a},u))}));function f(t,a){var e=arguments,n=a&&a.mdxType;if("string"==typeof t||n){var o=e.length,c=new Array(o);c[0]=d;var l={};for(var i in a)hasOwnProperty.call(a,i)&&(l[i]=a[i]);l.originalType=t,l.mdxType="string"==typeof t?t:n,c[1]=l;for(var s=2;s<o;s++)c[s]=e[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,e)}d.displayName="MDXCreateElement"},35534:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=e(83117),n=(e(67294),e(3905));const o={title:"lang::rascal::tutor::apidoc::DeclarationInfo"},c=void 0,l={unversionedId:"Library/lang/rascal/tutor/apidoc/DeclarationInfo",id:"Library/lang/rascal/tutor/apidoc/DeclarationInfo",title:"lang::rascal::tutor::apidoc::DeclarationInfo",description:"Usage",source:"@site/docs/Library/lang/rascal/tutor/apidoc/DeclarationInfo.md",sourceDirName:"Library/lang/rascal/tutor/apidoc",slug:"/Library/lang/rascal/tutor/apidoc/DeclarationInfo",permalink:"/docs/Library/lang/rascal/tutor/apidoc/DeclarationInfo",draft:!1,editUrl:"https://github.com/usethesource/rascal-website/tree/website-v2/docs/docs/Library/lang/rascal/tutor/apidoc/DeclarationInfo.md",tags:[],version:"current",frontMatter:{title:"lang::rascal::tutor::apidoc::DeclarationInfo"},sidebar:"tutorialSidebar",previous:{title:"lang::rascal::tutor::apidoc",permalink:"/docs/Library/lang/rascal/tutor/apidoc/"},next:{title:"lang::rascal::tutor::apidoc::ExtractInfo",permalink:"/docs/Library/lang/rascal/tutor/apidoc/ExtractInfo"}},i={},s=[{value:"Usage",id:"usage",level:4},{value:"data DeclarationInfo",id:"lang-rascal-tutor-apidoc-DeclarationInfo-DeclarationInfo",level:2},{value:"data DocTag",id:"lang-rascal-tutor-apidoc-DeclarationInfo-DocTag",level:2}],u={toc:s};function p(t){let{components:a,...e}=t;return(0,n.kt)("wrapper",(0,r.Z)({},u,e,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"import lang::rascal::tutor::apidoc::DeclarationInfo;")),(0,n.kt)("h2",{id:"lang-rascal-tutor-apidoc-DeclarationInfo-DeclarationInfo"},"data DeclarationInfo"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal"},'data DeclarationInfo (\n     str moduleName="", \n     str name=moduleName, \n     loc src = |unknown:///|, \n     str synopsis="", \n     str signature="",\n     list[DocTag] docs = [], \n     loc docSrc = src) \n     = moduleInfo        (str kind="module")\n     | functionInfo      (str kind="function")\n     | constructorInfo   (str kind="constructor")\n     | dataInfo          (str kind="data", list[str] overloads=[])\n     | aliasInfo         (str kind="alias")\n     | varInfo           (str kind="variable")\n     ;\n')),(0,n.kt)("p",null,"Representation of documentation-related information extracted from a module."),(0,n.kt)("h2",{id:"lang-rascal-tutor-apidoc-DeclarationInfo-DocTag"},"data DocTag"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rascal"},'data DocTag (str label="", loc src=|unknown:///|, str content="") \n     = docTag()\n     ;\n')))}p.isMDXComponent=!0}}]);