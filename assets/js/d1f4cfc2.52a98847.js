"use strict";(self.webpackChunkrascal_website=self.webpackChunkrascal_website||[]).push([[18747],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=i,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},81061:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={title:"ArgumentMismatch"},o=void 0,l={unversionedId:"CompileTimeErrors/ArgumentMismatch/index",id:"CompileTimeErrors/ArgumentMismatch/index",title:"ArgumentMismatch",description:"Synopsis",source:"@site/docs/CompileTimeErrors/ArgumentMismatch/index.md",sourceDirName:"CompileTimeErrors/ArgumentMismatch",slug:"/CompileTimeErrors/ArgumentMismatch/",permalink:"/docs/CompileTimeErrors/ArgumentMismatch/",draft:!1,editUrl:"https://github.com/usethesource/rascal/tree/main/src/org/rascalmpl/courses/docs/CompileTimeErrors/ArgumentMismatch/index.md",tags:[],version:"current",frontMatter:{title:"ArgumentMismatch"},sidebar:"tutorialSidebar",previous:{title:"AmbiguousFunctionReference",permalink:"/docs/CompileTimeErrors/AmbiguousFunctionReference/"},next:{title:"Arity",permalink:"/docs/CompileTimeErrors/Arity/"}},s={},c=[{value:"Synopsis",id:"synopsis",level:4},{value:"Description",id:"description",level:4},{value:"Examples",id:"examples",level:4}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"The called signature does not match any defined function."),(0,i.kt)("h4",{id:"description"},"Description"),(0,i.kt)("p",null,"A function has a name and a signature (the names and types of its arguments).\nThis error is reported when a call of a function cannot be associated with a function declaration."),(0,i.kt)("p",null,"Remedies:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modify the call so that the arguments match the function declaration."),(0,i.kt)("li",{parentName:"ul"},"Write a new definition for a function with the same name, that matches the argument types in the call.")),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Define a function ",(0,i.kt)("inlineCode",{parentName:"p"},"triple")," that multiplies its argument by 3:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",error",",error":!0},"rascal>int triple(int x) = 3 * x;\nint (int): function(|prompt:///|(0,26,<1,0>,<1,26>))\n")),(0,i.kt)("p",null,"It works fine:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},"rascal>triple(5)\nint: 15\n")),(0,i.kt)("p",null,"Unless it is called with an argument of a wrong type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},"rascal>triple([1,2,3])\n|prompt:///|(12,1,<1,12>,<1,13>): CallFailed([[1,2,3]])\n    at $shell$(|prompt:///|(0,9,<1,0>,<1,9>))\nok\n")),(0,i.kt)("p",null,"We can define a new version of ",(0,i.kt)("inlineCode",{parentName:"p"},"triple")," function that accepts lists:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rascal-shell",metastring:",continue,error",",continue,error":!0},"rascal>list[int] triple(list[int] L) = [3 * x | x <- L];\nlist[int] (list[int]): function(|prompt:///|(0,49,<1,0>,<1,49>))\nrascal>triple([1,2,3]);\nlist[int]: [3,6,9]\n")))}u.isMDXComponent=!0}}]);